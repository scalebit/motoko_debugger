(module
  (type $t0 (func (param i32 i32 i32 i32) (result i32)))
  (type $t1 (func (param i32 i32 i32)))
  (type $t2 (func (param i32 i32 i32) (result i32)))
  (type $t3 (func (result i32)))
  (type $t4 (func (param i32 i32 i32 i32)))
  (type $t5 (func (param i32) (result i32)))
  (type $t6 (func (param i32 i32) (result i32)))
  (type $t7 (func (param i64) (result i32)))
  (type $t8 (func (param i32) (result i64)))
  (type $t9 (func (param i32 i32)))
  (type $t10 (func (param i32)))
  (type $t11 (func (param i32 i32 i32 i32 i32) (result i32)))
  (type $t12 (func (param f64 f64) (result f64)))
  (type $t13 (func (param f64) (result f64)))
  (type $t14 (func (param f64) (result i32)))
  (type $t15 (func))
  (type $t16 (func (param i64 i64) (result i64)))
  (type $t17 (func (result i32)))
  (type $t18 (func (param i32 i32 i32) (result i32)))
  (type $t19 (func (param i32) (result i32)))
  (type $t20 (func (param i32 i32)))
  (type $t21 (func))
  (type $t22 (func (param i32 i32 i32)))
  (type $t23 (func (param i32)))
  (type $t24 (func (param i32 i32 i32 i32)))
  (type $t25 (func (param i32 i32 i32 i32 i32) (result i32)))
  (type $t26 (func (param i32 i32) (result i32)))
  (type $t27 (func (param i32) (result i64)))
  (type $t28 (func (param i64) (result i32)))
  (type $t29 (func (param f64) (result i32)))
  (type $t30 (func (param f64 f64) (result f64)))
  (type $t31 (func (param f64) (result f64)))
  (type $t32 (func (param i32 i64)))
  (type $t33 (func (param i32 i32 i32 i32) (result i32)))
  (type $t34 (func (param f64 i32) (result f64)))
  (type $t35 (func (param i32 i32 i32 i32 i32)))
  (type $t36 (func (param i64 i32) (result i32)))
  (type $t37 (func (param i32) (result f64)))
  (type $t38 (func (param i32 f64) (result f64)))
  (type $t39 (func (param f64 i32) (result i32)))
  (type $t40 (func (param f64 f64 i32) (result f64)))
  (type $t41 (func))
  (import "wasi_unstable" "fd_write" (func $wasi_unstable.fd_write (type $t0)))
  (func $alloc_bytes (type $t5) (param $n i32) (result i32)
    (call $alloc_words
      (i32.div_u
        (i32.add
          (local.get $n)
          (i32.const 3))
        (i32.const 4))))
  (func $alloc_words (type $t5) (param $n i32) (result i32)
    (i32.add
      (global.get $g0)
      (i32.const -1))
    (global.set $g1
      (i64.add
        (i64.extend_i32_u
          (i32.mul
            (local.get $n)
            (i32.const 4)))
        (global.get $g1)))
    (global.set $g0
      (i32.add
        (global.get $g0)
        (i32.mul
          (local.get $n)
          (i32.const 4))))
    (call $grow_memory
      (global.get $g0)))
  (func $grow_memory (type $t10) (param $ptr i32)
    (local $pages_needed i32)
    (if $I0
      (i32.gt_s
        (local.tee $pages_needed
          (i32.sub
            (i32.add
              (i32.div_u
                (local.get $ptr)
                (i32.const 65536))
              (i32.const 1))
            (memory.size)))
        (i32.const 0))
      (then
        (if $I1
          (i32.lt_s
            (memory.grow
              (local.get $pages_needed))
            (i32.const 0))
          (then
            (call $print_ptr
              (i32.const 65540)
              (i32.const 19))
            (unreachable))))))
  (func $print_ptr (type $t9) (param $ptr i32) (param $len i32)
    (local $io_vec i32)
    (global.set $g4
      (i32.sub
        (global.get $g4)
        (i32.const 24)))
    (i32.store
      (local.tee $io_vec
        (global.get $g4))
      (local.get $ptr))
    (i32.store offset=4
      (local.get $io_vec)
      (local.get $len))
    (i32.store offset=8
      (local.get $io_vec)
      (i32.add
        (local.get $io_vec)
        (i32.const 16)))
    (i32.store offset=12
      (local.get $io_vec)
      (i32.const 1))
    (i32.store8 offset=16
      (local.get $io_vec)
      (i32.const 10))
    (drop
      (call $wasi_unstable.fd_write
        (i32.const 1)
        (local.get $io_vec)
        (i32.const 1)
        (i32.add
          (local.get $io_vec)
          (i32.const 20))))
    (drop
      (call $wasi_unstable.fd_write
        (i32.const 1)
        (i32.add
          (local.get $io_vec)
          (i32.const 8))
        (i32.const 1)
        (i32.add
          (local.get $io_vec)
          (i32.const 20))))
    (global.set $g4
      (i32.add
        (global.get $g4)
        (i32.const 24))))
  (func $bigint_trap (type $t15)
    (call $print_ptr
      (i32.const 65560)
      (i32.const 21))
    (unreachable))
  (func $rts_trap (type $t9) (param $str i32) (param $len i32)
    (call $print_ptr
      (local.get $str)
      (local.get $len))
    (unreachable))
  (func $@immut_array_get (type $t6) (param $clos i32) (param $xs i32) (result i32)
    (local $anon-func-44.3_clos i32)
    (i32.store offset=1
      (local.tee $anon-func-44.3_clos
        (call $alloc_words
          (i32.const 4)))
      (i32.const 7))
    (i32.store offset=5
      (local.get $anon-func-44.3_clos)
      (i32.const 27))
    (i32.store offset=9
      (local.get $anon-func-44.3_clos)
      (i32.const 1))
    (i32.store offset=13
      (local.get $anon-func-44.3_clos)
      (local.get $xs))
    (local.get $anon-func-44.3_clos))
  (func $@mut_array_get (type $t6) (param $clos i32) (param $xs i32) (result i32)
    (local $anon-func-46.3_clos i32)
    (i32.store offset=1
      (local.tee $anon-func-46.3_clos
        (call $alloc_words
          (i32.const 4)))
      (i32.const 7))
    (i32.store offset=5
      (local.get $anon-func-46.3_clos)
      (i32.const 26))
    (i32.store offset=9
      (local.get $anon-func-46.3_clos)
      (i32.const 1))
    (i32.store offset=13
      (local.get $anon-func-46.3_clos)
      (local.get $xs))
    (local.get $anon-func-46.3_clos))
  (func $@immut_array_size (type $t6) (param $clos i32) (param $xs i32) (result i32)
    (local $anon-func-48.3_clos i32)
    (i32.store offset=1
      (local.tee $anon-func-48.3_clos
        (call $alloc_words
          (i32.const 4)))
      (i32.const 7))
    (i32.store offset=5
      (local.get $anon-func-48.3_clos)
      (i32.const 25))
    (i32.store offset=9
      (local.get $anon-func-48.3_clos)
      (i32.const 1))
    (i32.store offset=13
      (local.get $anon-func-48.3_clos)
      (local.get $xs))
    (local.get $anon-func-48.3_clos))
  (func $@mut_array_size (type $t6) (param $clos i32) (param $xs i32) (result i32)
    (local $anon-func-50.3_clos i32)
    (i32.store offset=1
      (local.tee $anon-func-50.3_clos
        (call $alloc_words
          (i32.const 4)))
      (i32.const 7))
    (i32.store offset=5
      (local.get $anon-func-50.3_clos)
      (i32.const 24))
    (i32.store offset=9
      (local.get $anon-func-50.3_clos)
      (i32.const 1))
    (i32.store offset=13
      (local.get $anon-func-50.3_clos)
      (local.get $xs))
    (local.get $anon-func-50.3_clos))
  (func $@mut_array_put (type $t6) (param $clos i32) (param $xs i32) (result i32)
    (local $anon-func-52.3_clos i32)
    (i32.store offset=1
      (local.tee $anon-func-52.3_clos
        (call $alloc_words
          (i32.const 4)))
      (i32.const 7))
    (i32.store offset=5
      (local.get $anon-func-52.3_clos)
      (i32.const 23))
    (i32.store offset=9
      (local.get $anon-func-52.3_clos)
      (i32.const 1))
    (i32.store offset=13
      (local.get $anon-func-52.3_clos)
      (local.get $xs))
    (local.get $anon-func-52.3_clos))
  (func $@immut_array_keys (type $t6) (param $clos i32) (param $xs i32) (result i32)
    (local $anon-func-54.3_clos i32)
    (i32.store offset=1
      (local.tee $anon-func-54.3_clos
        (call $alloc_words
          (i32.const 4)))
      (i32.const 7))
    (i32.store offset=5
      (local.get $anon-func-54.3_clos)
      (i32.const 22))
    (i32.store offset=9
      (local.get $anon-func-54.3_clos)
      (i32.const 1))
    (i32.store offset=13
      (local.get $anon-func-54.3_clos)
      (local.get $xs))
    (local.get $anon-func-54.3_clos))
  (func $@mut_array_keys (type $t6) (param $clos i32) (param $xs i32) (result i32)
    (local $anon-func-60.3_clos i32)
    (i32.store offset=1
      (local.tee $anon-func-60.3_clos
        (call $alloc_words
          (i32.const 4)))
      (i32.const 7))
    (i32.store offset=5
      (local.get $anon-func-60.3_clos)
      (i32.const 20))
    (i32.store offset=9
      (local.get $anon-func-60.3_clos)
      (i32.const 1))
    (i32.store offset=13
      (local.get $anon-func-60.3_clos)
      (local.get $xs))
    (local.get $anon-func-60.3_clos))
  (func $@immut_array_vals (type $t6) (param $clos i32) (param $xs i32) (result i32)
    (local $anon-func-66.3_clos i32)
    (i32.store offset=1
      (local.tee $anon-func-66.3_clos
        (call $alloc_words
          (i32.const 4)))
      (i32.const 7))
    (i32.store offset=5
      (local.get $anon-func-66.3_clos)
      (i32.const 18))
    (i32.store offset=9
      (local.get $anon-func-66.3_clos)
      (i32.const 1))
    (i32.store offset=13
      (local.get $anon-func-66.3_clos)
      (local.get $xs))
    (local.get $anon-func-66.3_clos))
  (func $@mut_array_vals (type $t6) (param $clos i32) (param $xs i32) (result i32)
    (local $anon-func-72.3_clos i32)
    (i32.store offset=1
      (local.tee $anon-func-72.3_clos
        (call $alloc_words
          (i32.const 4)))
      (i32.const 7))
    (i32.store offset=5
      (local.get $anon-func-72.3_clos)
      (i32.const 16))
    (i32.store offset=9
      (local.get $anon-func-72.3_clos)
      (i32.const 1))
    (i32.store offset=13
      (local.get $anon-func-72.3_clos)
      (local.get $xs))
    (local.get $anon-func-72.3_clos))
  (func $@blob_size (type $t6) (param $clos i32) (param $xs i32) (result i32)
    (local $anon-func-78.3_clos i32)
    (i32.store offset=1
      (local.tee $anon-func-78.3_clos
        (call $alloc_words
          (i32.const 4)))
      (i32.const 7))
    (i32.store offset=5
      (local.get $anon-func-78.3_clos)
      (i32.const 14))
    (i32.store offset=9
      (local.get $anon-func-78.3_clos)
      (i32.const 1))
    (i32.store offset=13
      (local.get $anon-func-78.3_clos)
      (local.get $xs))
    (local.get $anon-func-78.3_clos))
  (func $@blob_bytes (type $t6) (param $clos i32) (param $xs i32) (result i32)
    (local $anon-func-80.3_clos i32)
    (i32.store offset=1
      (local.tee $anon-func-80.3_clos
        (call $alloc_words
          (i32.const 4)))
      (i32.const 7))
    (i32.store offset=5
      (local.get $anon-func-80.3_clos)
      (i32.const 13))
    (i32.store offset=9
      (local.get $anon-func-80.3_clos)
      (i32.const 1))
    (i32.store offset=13
      (local.get $anon-func-80.3_clos)
      (local.get $xs))
    (local.get $anon-func-80.3_clos))
  (func $@text_size (type $t6) (param $clos i32) (param $xs i32) (result i32)
    (local $anon-func-91.3_clos i32)
    (i32.store offset=1
      (local.tee $anon-func-91.3_clos
        (call $alloc_words
          (i32.const 4)))
      (i32.const 7))
    (i32.store offset=5
      (local.get $anon-func-91.3_clos)
      (i32.const 11))
    (i32.store offset=9
      (local.get $anon-func-91.3_clos)
      (i32.const 1))
    (i32.store offset=13
      (local.get $anon-func-91.3_clos)
      (local.get $xs))
    (local.get $anon-func-91.3_clos))
  (func $@text_chars (type $t6) (param $clos i32) (param $xs i32) (result i32)
    (local $anon-func-93.3_clos i32)
    (i32.store offset=1
      (local.tee $anon-func-93.3_clos
        (call $alloc_words
          (i32.const 4)))
      (i32.const 7))
    (i32.store offset=5
      (local.get $anon-func-93.3_clos)
      (i32.const 10))
    (i32.store offset=9
      (local.get $anon-func-93.3_clos)
      (i32.const 1))
    (i32.store offset=13
      (local.get $anon-func-93.3_clos)
      (local.get $xs))
    (local.get $anon-func-93.3_clos))
  (func $@text_of_num (type $t11) (param $clos i32) (param $x i32) (param $base i32) (param $sep i32) (param $digits i32) (result i32)
    (local $text i32) (local $n i32) (local $i i32) (local $rem i32) (local $clos.1 i32)
    (local.set $text
      (i32.const 66195))
    (if $I0
      (call $B_eq
        (local.tee $n
          (local.get $x))
        (i32.const 0))
      (then
        (return
          (i32.const 66003))))
    (local.set $i
      (i32.const 0))
    (drop
      (block $B1 (result i32)
        (loop $L2
          (if $I3
            (call $B_gt
              (local.get $n)
              (i32.const 0))
            (then
              (local.set $rem
                (call $B_rem
                  (local.get $n)
                  (local.get $base)))
              (if $I5
                (if $I4 (result i32)
                  (call $B_gt
                    (local.get $sep)
                    (i32.const 0))
                  (then
                    (call $B_eq
                      (local.get $i)
                      (local.get $sep)))
                  (else
                    (i32.const 0)))
                (then
                  (local.set $text
                    (call $text_concat
                      (i32.const 66183)
                      (local.get $text)))
                  (local.set $i
                    (i32.const 0))))
              (local.set $text
                (call $text_concat
                  (call_indirect $table (type $t6)
                    (local.tee $clos.1
                      (local.get $digits))
                    (local.get $rem)
                    (i32.load offset=5
                      (local.get $clos.1)))
                  (local.get $text)))
              (local.set $n
                (call $B_div
                  (local.get $n)
                  (local.get $base)))
              (local.set $i
                (call $B_add
                  (local.get $i)
                  (i32.const 4))))
            (else
              (br $B1
                (i32.const 1))))
          (br $L2))
        (unreachable)))
    (local.get $text))
  (func $@left_pad (type $t0) (param $clos i32) (param $pad i32) (param $char i32) (param $t i32) (result i32)
    (local $clos.1 i32) (local $i i32) (local $text i32) (local $clos.2 i32)
    (if $I0 (result i32)
      (call $B_gt
        (local.get $pad)
        (call_indirect $table (type $t5)
          (local.tee $clos.1
            (call $@text_size
              (i32.const 0)
              (local.get $t)))
          (i32.load offset=5
            (local.get $clos.1))))
      (then
        (local.set $i
          (call $B_sub
            (local.get $pad)
            (call_indirect $table (type $t5)
              (local.tee $clos.2
                (call $@text_size
                  (i32.const 0)
                  (local.get $t)))
              (i32.load offset=5
                (local.get $clos.2)))))
        (local.set $text
          (local.get $t))
        (drop
          (block $B1 (result i32)
            (loop $L2
              (if $I3
                (call $B_gt
                  (local.get $i)
                  (i32.const 0))
                (then
                  (local.set $text
                    (call $text_concat
                      (local.get $char)
                      (local.get $text)))
                  (local.set $i
                    (call $B_sub
                      (local.get $i)
                      (i32.const 4))))
                (else
                  (br $B1
                    (i32.const 1))))
              (br $L2))
            (unreachable)))
        (local.get $text))
      (else
        (local.get $t))))
  (func $@digits_dec (type $t6) (param $clos i32) (param $x i32) (result i32)
    (local $a i32)
    (call $text_singleton
      (i32.shr_u
        (call $Word32->Char
          (if $I0 (result i32)
            (call $is_unboxed
              (local.tee $a
                (call $B_add
                  (local.get $x)
                  (i32.const 192))))
            (then
              (i32.shr_s
                (i32.rotr
                  (local.get $a)
                  (i32.const 1))
                (i32.const 1)))
            (else
              (call $bigint_to_word32_wrap
                (local.get $a)))))
        (i32.const 8))))
  (func $@text_of_Nat (type $t6) (param $clos i32) (param $x i32) (result i32)
    (call $@text_of_num
      (i32.const 0)
      (local.get $x)
      (i32.const 40)
      (i32.const 12)
      (i32.const 66139)))
  (func $@text_of_Int (type $t6) (param $clos i32) (param $x i32) (result i32)
    (local $a i32) (local $a.1 i32)
    (if $I0 (result i32)
      (call $B_eq
        (local.get $x)
        (i32.const 0))
      (then
        (i32.const 66003))
      (else
        (call $text_concat
          (if $I1 (result i32)
            (call $B_lt
              (local.get $x)
              (i32.const 0))
            (then
              (i32.const 66127))
            (else
              (i32.const 66115)))
          (call $@text_of_Nat
            (i32.const 0)
            (if $I2 (result i32)
              (call $is_unboxed
                (local.tee $a
                  (local.get $x)))
              (then
                (if $I3 (result i32)
                  (i32.and
                    (local.tee $a.1
                      (local.get $a))
                    (i32.const 1))
                  (then
                    (if $I4 (result i32)
                      (i32.eq
                        (local.get $a.1)
                        (i32.const 1))
                      (then
                        (call $bigint_of_word32
                          (i32.const 1073741824)))
                      (else
                        (i32.add
                          (i32.xor
                            (local.get $a.1)
                            (i32.const -1))
                          (i32.const 2)))))
                  (else
                    (local.get $a.1))))
              (else
                (call $bigint_abs
                  (local.get $a)))))))))
  (func $@digits_hex (type $t6) (param $clos i32) (param $x i32) (result i32)
    (local $a i32)
    (call $text_singleton
      (i32.shr_u
        (call $Word32->Char
          (if $I1 (result i32)
            (call $is_unboxed
              (local.tee $a
                (call $B_add
                  (local.get $x)
                  (if $I0 (result i32)
                    (call $B_lt
                      (local.get $x)
                      (i32.const 40))
                    (then
                      (i32.const 192))
                    (else
                      (i32.const 220))))))
            (then
              (i32.shr_s
                (i32.rotr
                  (local.get $a)
                  (i32.const 1))
                (i32.const 1)))
            (else
              (call $bigint_to_word32_wrap
                (local.get $a)))))
        (i32.const 8))))
  (func $@text_of_Word (type $t6) (param $clos i32) (param $x i32) (result i32)
    (call $text_concat
      (i32.const 66079)
      (call $@text_of_num
        (i32.const 0)
        (local.get $x)
        (i32.const 64)
        (i32.const 16)
        (i32.const 66015))))
  (func $@int64ToInt (type $t6) (param $clos i32) (param $n i32) (result i32)
    (local $a i64)
    (if $I0 (result i32)
      (i64.eqz
        (i64.and
          (i64.xor
            (local.tee $a
              (call $unbox_i64
                (local.get $n)))
            (i64.shl
              (local.get $a)
              (i64.const 1)))
          (i64.const -2147483648)))
      (then
        (i32.rotl
          (i32.wrap_i64
            (i64.shl
              (local.get $a)
              (i64.const 1)))
          (i32.const 1)))
      (else
        (call $bigint_of_word64_signed
          (local.get $a)))))
  (func $@int32ToInt (type $t6) (param $clos i32) (param $n i32) (result i32)
    (local $a i32)
    (if $I0 (result i32)
      (i32.and
        (i32.xor
          (local.tee $a
            (call $unbox_i32
              (local.get $n)))
          (i32.shl
            (local.get $a)
            (i32.const 1)))
        (i32.const -2147483648))
      (then
        (call $bigint_of_word32_signed
          (local.get $a)))
      (else
        (i32.rotl
          (i32.shl
            (local.get $a)
            (i32.const 1))
          (i32.const 1)))))
  (func $@int16ToInt (type $t6) (param $clos i32) (param $n i32) (result i32)
    (local $a i32)
    (if $I0 (result i32)
      (i32.and
        (i32.xor
          (local.tee $a
            (i32.shr_s
              (local.get $n)
              (i32.const 16)))
          (i32.shl
            (local.get $a)
            (i32.const 1)))
        (i32.const -2147483648))
      (then
        (call $bigint_of_word32_signed
          (local.get $a)))
      (else
        (i32.rotl
          (i32.shl
            (local.get $a)
            (i32.const 1))
          (i32.const 1)))))
  (func $@int8ToInt (type $t6) (param $clos i32) (param $n i32) (result i32)
    (local $a i32)
    (if $I0 (result i32)
      (i32.and
        (i32.xor
          (local.tee $a
            (i32.shr_s
              (local.get $n)
              (i32.const 24)))
          (i32.shl
            (local.get $a)
            (i32.const 1)))
        (i32.const -2147483648))
      (then
        (call $bigint_of_word32_signed
          (local.get $a)))
      (else
        (i32.rotl
          (i32.shl
            (local.get $a)
            (i32.const 1))
          (i32.const 1)))))
  (func $@nat64ToNat (type $t6) (param $clos i32) (param $n i32) (result i32)
    (local $a i64)
    (if $I0 (result i32)
      (i64.eqz
        (i64.and
          (local.tee $a
            (call $unbox_i64
              (local.get $n)))
          (i64.const -1073741824)))
      (then
        (i32.rotl
          (i32.wrap_i64
            (local.get $a))
          (i32.const 2)))
      (else
        (call $bigint_of_word64
          (local.get $a)))))
  (func $@nat32ToNat (type $t6) (param $clos i32) (param $n i32) (result i32)
    (local $a i32)
    (if $I0 (result i32)
      (i32.and
        (local.tee $a
          (call $unbox_i32
            (local.get $n)))
        (i32.const -1073741824))
      (then
        (call $bigint_of_word64
          (i64.extend_i32_u
            (local.get $a))))
      (else
        (i32.rotl
          (local.get $a)
          (i32.const 2)))))
  (func $@nat16ToNat (type $t6) (param $clos i32) (param $n i32) (result i32)
    (local $a i32)
    (if $I0 (result i32)
      (i32.and
        (local.tee $a
          (i32.shr_u
            (local.get $n)
            (i32.const 16)))
        (i32.const -1073741824))
      (then
        (call $bigint_of_word64
          (i64.extend_i32_u
            (local.get $a))))
      (else
        (i32.rotl
          (local.get $a)
          (i32.const 2)))))
  (func $@nat8ToNat (type $t6) (param $clos i32) (param $n i32) (result i32)
    (local $a i32)
    (if $I0 (result i32)
      (i32.and
        (local.tee $a
          (i32.shr_u
            (local.get $n)
            (i32.const 24)))
        (i32.const -1073741824))
      (then
        (call $bigint_of_word64
          (i64.extend_i32_u
            (local.get $a))))
      (else
        (i32.rotl
          (local.get $a)
          (i32.const 2)))))
  (func $@word64ToNat (type $t6) (param $clos i32) (param $n i32) (result i32)
    (local $a i64)
    (if $I0 (result i32)
      (i64.eqz
        (i64.and
          (local.tee $a
            (call $unbox_i64
              (local.get $n)))
          (i64.const -1073741824)))
      (then
        (i32.rotl
          (i32.wrap_i64
            (local.get $a))
          (i32.const 2)))
      (else
        (call $bigint_of_word64
          (local.get $a)))))
  (func $@word32ToNat (type $t6) (param $clos i32) (param $n i32) (result i32)
    (local $a i32)
    (if $I0 (result i32)
      (i32.and
        (local.tee $a
          (call $unbox_i32
            (local.get $n)))
        (i32.const -1073741824))
      (then
        (call $bigint_of_word64
          (i64.extend_i32_u
            (local.get $a))))
      (else
        (i32.rotl
          (local.get $a)
          (i32.const 2)))))
  (func $@word16ToNat (type $t6) (param $clos i32) (param $n i32) (result i32)
    (local $a i32)
    (if $I0 (result i32)
      (i32.and
        (local.tee $a
          (i32.shr_u
            (local.get $n)
            (i32.const 16)))
        (i32.const -1073741824))
      (then
        (call $bigint_of_word64
          (i64.extend_i32_u
            (local.get $a))))
      (else
        (i32.rotl
          (local.get $a)
          (i32.const 2)))))
  (func $@word8ToNat (type $t6) (param $clos i32) (param $n i32) (result i32)
    (local $a i32)
    (if $I0 (result i32)
      (i32.and
        (local.tee $a
          (i32.shr_u
            (local.get $n)
            (i32.const 24)))
        (i32.const -1073741824))
      (then
        (call $bigint_of_word64
          (i64.extend_i32_u
            (local.get $a))))
      (else
        (i32.rotl
          (local.get $a)
          (i32.const 2)))))
  (func $@text_of_Nat8 (type $t6) (param $clos i32) (param $x i32) (result i32)
    (call $@text_of_Nat
      (i32.const 0)
      (call $@nat8ToNat
        (i32.const 0)
        (local.get $x))))
  (func $@text_of_Nat16 (type $t6) (param $clos i32) (param $x i32) (result i32)
    (call $@text_of_Nat
      (i32.const 0)
      (call $@nat16ToNat
        (i32.const 0)
        (local.get $x))))
  (func $@text_of_Nat32 (type $t6) (param $clos i32) (param $x i32) (result i32)
    (call $@text_of_Nat
      (i32.const 0)
      (call $@nat32ToNat
        (i32.const 0)
        (local.get $x))))
  (func $@text_of_Nat64 (type $t6) (param $clos i32) (param $x i32) (result i32)
    (call $@text_of_Nat
      (i32.const 0)
      (call $@nat64ToNat
        (i32.const 0)
        (local.get $x))))
  (func $@text_of_Int8 (type $t6) (param $clos i32) (param $x i32) (result i32)
    (call $@text_of_Int
      (i32.const 0)
      (call $@int8ToInt
        (i32.const 0)
        (local.get $x))))
  (func $@text_of_Int16 (type $t6) (param $clos i32) (param $x i32) (result i32)
    (call $@text_of_Int
      (i32.const 0)
      (call $@int16ToInt
        (i32.const 0)
        (local.get $x))))
  (func $@text_of_Int32 (type $t6) (param $clos i32) (param $x i32) (result i32)
    (call $@text_of_Int
      (i32.const 0)
      (call $@int32ToInt
        (i32.const 0)
        (local.get $x))))
  (func $@text_of_Int64 (type $t6) (param $clos i32) (param $x i32) (result i32)
    (call $@text_of_Int
      (i32.const 0)
      (call $@int64ToInt
        (i32.const 0)
        (local.get $x))))
  (func $@text_of_Word8 (type $t6) (param $clos i32) (param $x i32) (result i32)
    (call $@text_of_Word
      (i32.const 0)
      (call $@word8ToNat
        (i32.const 0)
        (local.get $x))))
  (func $@text_of_Word16 (type $t6) (param $clos i32) (param $x i32) (result i32)
    (call $@text_of_Word
      (i32.const 0)
      (call $@word16ToNat
        (i32.const 0)
        (local.get $x))))
  (func $@text_of_Word32 (type $t6) (param $clos i32) (param $x i32) (result i32)
    (call $@text_of_Word
      (i32.const 0)
      (call $@word32ToNat
        (i32.const 0)
        (local.get $x))))
  (func $@text_of_Word64 (type $t6) (param $clos i32) (param $x i32) (result i32)
    (call $@text_of_Word
      (i32.const 0)
      (call $@word64ToNat
        (i32.const 0)
        (local.get $x))))
  (func $@text_of_Float (type $t6) (param $clos i32) (param $x i32) (result i32)
    (call $float_fmt
      (f64.load offset=5 align=4
        (local.get $x))))
  (func $@text_of_Bool (type $t6) (param $clos i32) (param $b i32) (result i32)
    (if $I0 (result i32)
      (local.get $b)
      (then
        (i32.const 66067))
      (else
        (i32.const 66051))))
  (func $@text_of_Text (type $t6) (param $clos i32) (param $t i32) (result i32)
    (call $text_concat
      (call $text_concat
        (i32.const 65991)
        (local.get $t))
      (i32.const 65991)))
  (func $@text_of_Char (type $t6) (param $clos i32) (param $c i32) (result i32)
    (call $text_concat
      (call $text_concat
        (i32.const 66039)
        (call $text_singleton
          (i32.shr_u
            (local.get $c)
            (i32.const 8))))
      (i32.const 66039)))
  (func $@text_of_Blob (type $t6) (param $clos i32) (param $blob i32) (result i32)
    (local $t i32) (local $$nxt/0 i32) (local $clos.1 i32) (local $switch_in i32) (local $switch_out i32) (local $b i32) (local $opt_scrut i32) (local $clos.2 i32)
    (local.set $t
      (i32.const 65991))
    (local.set $$nxt/0
      (i32.load offset=1
        (call $obj_idx
          (call_indirect $table (type $t5)
            (local.tee $clos.2
              (call $@blob_bytes
                (i32.const 0)
                (local.get $blob)))
            (i32.load offset=5
              (local.get $clos.2)))
          (i32.const 1224901875))))
    (drop
      (block $B0 (result i32)
        (loop $L1
          (local.set $switch_in
            (call_indirect $table (type $t5)
              (local.tee $clos.1
                (local.get $$nxt/0))
              (i32.load offset=5
                (local.get $clos.1))))
          (if $I4
            (block $B2 (result i32)
              (if $I3
                (i32.eq
                  (local.get $switch_in)
                  (i32.const 5))
                (then)
                (else
                  (br $B2
                    (i32.const 0))))
              (br $B0
                (i32.const 1)))
            (then)
            (else
              (if $I7
                (block $B5 (result i32)
                  (if $I6
                    (i32.ne
                      (local.tee $opt_scrut
                        (local.get $switch_in))
                      (i32.const 5))
                    (then
                      (local.set $b
                        (i32.load offset=5
                          (local.get $opt_scrut))))
                    (else
                      (br $B5
                        (i32.const 0))))
                  (local.set $t
                    (call $text_concat
                      (local.get $t)
                      (call $text_concat
                        (i32.const 66027)
                        (call $@left_pad
                          (i32.const 0)
                          (i32.const 8)
                          (i32.const 66003)
                          (call $@text_of_num
                            (i32.const 0)
                            (call $@word8ToNat
                              (i32.const 0)
                              (local.get $b))
                            (i32.const 64)
                            (i32.const 0)
                            (i32.const 66015))))))
                  (local.set $switch_out
                    (i32.const 1))
                  (i32.const 1))
                (then)
                (else
                  (call $print_ptr
                    (i32.const 65680)
                    (i32.const 14))
                  (unreachable)))))
          (br $L1))
        (unreachable)))
    (return
      (local.tee $t
        (call $text_concat
          (local.get $t)
          (i32.const 65991)))))
  (func $@text_has_parens (type $t6) (param $clos i32) (param $t i32) (result i32)
    (local $clos.1 i32) (local $clos.2 i32) (local $switch_in i32) (local $switch_out i32) (local $opt_scrut i32)
    (local.set $switch_in
      (call_indirect $table (type $t5)
        (local.tee $clos.2
          (i32.load offset=1
            (call $obj_idx
              (call_indirect $table (type $t5)
                (local.tee $clos.1
                  (call $@text_chars
                    (i32.const 0)
                    (local.get $t)))
                (i32.load offset=5
                  (local.get $clos.1)))
              (i32.const 1224901875))))
        (i32.load offset=5
          (local.get $clos.2))))
    (if $I3
      (block $B0 (result i32)
        (if $I1
          (i32.ne
            (local.tee $opt_scrut
              (local.get $switch_in))
            (i32.const 5))
          (then
            (if $I2
              (i32.eq
                (i32.load offset=5
                  (local.get $opt_scrut))
                (i32.const 10240))
              (then)
              (else
                (br $B0
                  (i32.const 0)))))
          (else
            (br $B0
              (i32.const 0))))
        (local.set $switch_out
          (i32.const 1))
        (i32.const 1))
      (then)
      (else
        (local.set $switch_out
          (i32.const 0))))
    (local.get $switch_out))
  (func $@text_needs_parens (type $t6) (param $clos i32) (param $t i32) (result i32)
    (local $clos.1 i32) (local $clos.2 i32) (local $switch_in i32) (local $switch_out i32) (local $opt_scrut i32) (local $alt_scrut i32) (local $alt_scrut.1 i32) (local $alt_scrut.2 i32)
    (local.set $switch_in
      (call_indirect $table (type $t5)
        (local.tee $clos.2
          (i32.load offset=1
            (call $obj_idx
              (call_indirect $table (type $t5)
                (local.tee $clos.1
                  (call $@text_chars
                    (i32.const 0)
                    (local.get $t)))
                (i32.load offset=5
                  (local.get $clos.1)))
              (i32.const 1224901875))))
        (i32.load offset=5
          (local.get $clos.2))))
    (if $I12
      (block $B0 (result i32)
        (if $I1
          (i32.ne
            (local.tee $opt_scrut
              (local.get $switch_in))
            (i32.const 5))
          (then
            (local.set $alt_scrut.2
              (i32.load offset=5
                (local.get $opt_scrut)))
            (if $I10
              (block $B2 (result i32)
                (local.set $alt_scrut.1
                  (local.get $alt_scrut.2))
                (if $I8
                  (block $B3 (result i32)
                    (local.set $alt_scrut
                      (local.get $alt_scrut.1))
                    (if $I6
                      (block $B4 (result i32)
                        (if $I5
                          (i32.eq
                            (local.get $alt_scrut)
                            (i32.const 11008))
                          (then)
                          (else
                            (br $B4
                              (i32.const 0))))
                        (i32.const 1))
                      (then)
                      (else
                        (if $I7
                          (i32.eq
                            (local.get $alt_scrut)
                            (i32.const 11520))
                          (then)
                          (else
                            (br $B3
                              (i32.const 0))))))
                    (i32.const 1))
                  (then)
                  (else
                    (if $I9
                      (i32.eq
                        (local.get $alt_scrut.1)
                        (i32.const 16128))
                      (then)
                      (else
                        (br $B2
                          (i32.const 0))))))
                (i32.const 1))
              (then)
              (else
                (if $I11
                  (i32.eq
                    (local.get $alt_scrut.2)
                    (i32.const 8960))
                  (then)
                  (else
                    (br $B0
                      (i32.const 0)))))))
          (else
            (br $B0
              (i32.const 0))))
        (local.set $switch_out
          (i32.const 1))
        (i32.const 1))
      (then)
      (else
        (local.set $switch_out
          (i32.const 0))))
    (local.get $switch_out))
  (func $@text_of_option (type $t2) (param $clos i32) (param $f i32) (param $x i32) (result i32)
    (local $switch_in i32) (local $switch_out i32) (local $y i32) (local $opt_scrut i32) (local $fy i32) (local $clos.1 i32)
    (local.set $switch_in
      (local.get $x))
    (if $I3
      (block $B0 (result i32)
        (if $I1
          (i32.ne
            (local.tee $opt_scrut
              (local.get $switch_in))
            (i32.const 5))
          (then
            (local.set $y
              (i32.load offset=5
                (local.get $opt_scrut))))
          (else
            (br $B0
              (i32.const 0))))
        (local.set $fy
          (call_indirect $table (type $t6)
            (local.tee $clos.1
              (local.get $f))
            (local.get $y)
            (i32.load offset=5
              (local.get $clos.1))))
        (local.set $switch_out
          (if $I2 (result i32)
            (call $@text_needs_parens
              (i32.const 0)
              (local.get $fy))
            (then
              (call $text_concat
                (call $text_concat
                  (i32.const 65967)
                  (local.get $fy))
                (i32.const 65931)))
            (else
              (call $text_concat
                (i32.const 65979)
                (local.get $fy)))))
        (i32.const 1))
      (then)
      (else
        (if $I6
          (block $B4 (result i32)
            (if $I5
              (i32.eq
                (local.get $switch_in)
                (i32.const 5))
              (then)
              (else
                (br $B4
                  (i32.const 0))))
            (local.set $switch_out
              (i32.const 65955))
            (i32.const 1))
          (then)
          (else
            (call $print_ptr
              (i32.const 65680)
              (i32.const 14))
            (unreachable)))))
    (local.get $switch_out))
  (func $@text_of_variant (type $t0) (param $clos i32) (param $l i32) (param $f i32) (param $x i32) (result i32)
    (local $fx i32) (local $clos.1 i32)
    (if $I0 (result i32)
      (call $Text.compare_eq
        (local.tee $fx
          (call_indirect $table (type $t6)
            (local.tee $clos.1
              (local.get $f))
            (local.get $x)
            (i32.load offset=5
              (local.get $clos.1))))
        (i32.const 65907))
      (then
        (call $text_concat
          (i32.const 65919)
          (local.get $l)))
      (else
        (if $I1 (result i32)
          (call $@text_has_parens
            (i32.const 0)
            (local.get $fx))
          (then
            (call $text_concat
              (call $text_concat
                (i32.const 65919)
                (local.get $l))
              (local.get $fx)))
          (else
            (call $text_concat
              (call $text_concat
                (call $text_concat
                  (call $text_concat
                    (i32.const 65919)
                    (local.get $l))
                  (i32.const 65943))
                (local.get $fx))
              (i32.const 65931)))))))
  (func $@text_of_array (type $t2) (param $clos i32) (param $f i32) (param $xs i32) (result i32)
    (local $text i32) (local $first i32) (local $$nxt/1 i32) (local $clos.1 i32) (local $switch_in i32) (local $switch_out i32) (local $x i32) (local $opt_scrut i32) (local $clos.2 i32) (local $clos.3 i32)
    (local.set $text
      (i32.const 65895))
    (local.set $first
      (i32.const 1))
    (local.set $$nxt/1
      (i32.load offset=1
        (call $obj_idx
          (call_indirect $table (type $t5)
            (local.tee $clos.3
              (call $@immut_array_vals
                (i32.const 0)
                (local.get $xs)))
            (i32.load offset=5
              (local.get $clos.3)))
          (i32.const 1224901875))))
    (drop
      (block $B0 (result i32)
        (loop $L1
          (local.set $switch_in
            (call_indirect $table (type $t5)
              (local.tee $clos.1
                (local.get $$nxt/1))
              (i32.load offset=5
                (local.get $clos.1))))
          (if $I4
            (block $B2 (result i32)
              (if $I3
                (i32.eq
                  (local.get $switch_in)
                  (i32.const 5))
                (then)
                (else
                  (br $B2
                    (i32.const 0))))
              (br $B0
                (i32.const 1)))
            (then)
            (else
              (if $I8
                (block $B5 (result i32)
                  (if $I6
                    (i32.ne
                      (local.tee $opt_scrut
                        (local.get $switch_in))
                      (i32.const 5))
                    (then
                      (local.set $x
                        (i32.load offset=5
                          (local.get $opt_scrut))))
                    (else
                      (br $B5
                        (i32.const 0))))
                  (if $I7
                    (local.get $first)
                    (then
                      (local.set $first
                        (i32.const 0)))
                    (else
                      (local.set $text
                        (call $text_concat
                          (local.get $text)
                          (i32.const 65831)))))
                  (local.set $text
                    (call $text_concat
                      (local.get $text)
                      (call_indirect $table (type $t6)
                        (local.tee $clos.2
                          (local.get $f))
                        (local.get $x)
                        (i32.load offset=5
                          (local.get $clos.2)))))
                  (local.set $switch_out
                    (i32.const 1))
                  (i32.const 1))
                (then)
                (else
                  (call $print_ptr
                    (i32.const 65680)
                    (i32.const 14))
                  (unreachable)))))
          (br $L1))
        (unreachable)))
    (call $text_concat
      (local.get $text)
      (i32.const 65807)))
  (func $@text_of_array_mut (type $t2) (param $clos i32) (param $f i32) (param $xs i32) (result i32)
    (local $text i32) (local $first i32) (local $$nxt/2 i32) (local $clos.1 i32) (local $switch_in i32) (local $switch_out i32) (local $x i32) (local $opt_scrut i32) (local $clos.2 i32) (local $clos.3 i32)
    (local.set $text
      (i32.const 65883))
    (local.set $first
      (i32.const 1))
    (local.set $$nxt/2
      (i32.load offset=1
        (call $obj_idx
          (call_indirect $table (type $t5)
            (local.tee $clos.3
              (call $@mut_array_vals
                (i32.const 0)
                (local.get $xs)))
            (i32.load offset=5
              (local.get $clos.3)))
          (i32.const 1224901875))))
    (drop
      (block $B0 (result i32)
        (loop $L1
          (local.set $switch_in
            (call_indirect $table (type $t5)
              (local.tee $clos.1
                (local.get $$nxt/2))
              (i32.load offset=5
                (local.get $clos.1))))
          (if $I4
            (block $B2 (result i32)
              (if $I3
                (i32.eq
                  (local.get $switch_in)
                  (i32.const 5))
                (then)
                (else
                  (br $B2
                    (i32.const 0))))
              (br $B0
                (i32.const 1)))
            (then)
            (else
              (if $I8
                (block $B5 (result i32)
                  (if $I6
                    (i32.ne
                      (local.tee $opt_scrut
                        (local.get $switch_in))
                      (i32.const 5))
                    (then
                      (local.set $x
                        (i32.load offset=5
                          (local.get $opt_scrut))))
                    (else
                      (br $B5
                        (i32.const 0))))
                  (if $I7
                    (local.get $first)
                    (then
                      (local.set $first
                        (i32.const 0))
                      (local.set $text
                        (call $text_concat
                          (local.get $text)
                          (i32.const 65819))))
                    (else
                      (local.set $text
                        (call $text_concat
                          (local.get $text)
                          (i32.const 65831)))))
                  (local.set $text
                    (call $text_concat
                      (local.get $text)
                      (call_indirect $table (type $t6)
                        (local.tee $clos.2
                          (local.get $f))
                        (local.get $x)
                        (i32.load offset=5
                          (local.get $clos.2)))))
                  (local.set $switch_out
                    (i32.const 1))
                  (i32.const 1))
                (then)
                (else
                  (call $print_ptr
                    (i32.const 65680)
                    (i32.const 14))
                  (unreachable)))))
          (br $L1))
        (unreachable)))
    (call $text_concat
      (local.get $text)
      (i32.const 65807)))
  (func $@new_async (type $t10) (param $clos i32)
    (local $result i32) (local $heap_object i32) (local $ks i32) (local $heap_object.1 i32) (local $rs i32) (local $heap_object.2 i32) (local $fulfill i32) (local $fail i32) (local $enqueue i32) (local $enqueue_clos i32) (local $fail_clos i32) (local $fulfill_clos i32) (local $new_val i32) (local $new_val.1 i32) (local $new_val.2 i32)
    (i32.store offset=1
      (local.tee $heap_object
        (call $alloc_words
          (i32.const 2)))
      (i32.const 6))
    (i32.store offset=5
      (local.get $heap_object)
      (i32.const 0))
    (local.set $result
      (local.get $heap_object))
    (i32.store offset=1
      (local.tee $heap_object.1
        (call $alloc_words
          (i32.const 2)))
      (i32.const 6))
    (i32.store offset=5
      (local.get $heap_object.1)
      (i32.const 0))
    (local.set $ks
      (local.get $heap_object.1))
    (i32.store offset=1
      (local.tee $heap_object.2
        (call $alloc_words
          (i32.const 2)))
      (i32.const 6))
    (i32.store offset=5
      (local.get $heap_object.2)
      (i32.const 0))
    (local.set $rs
      (local.get $heap_object.2))
    (local.set $new_val.2
      (i32.const 5))
    (i32.store offset=5
      (local.get $result)
      (local.get $new_val.2))
    (local.set $new_val.1
      (i32.const 65751))
    (i32.store offset=5
      (local.get $ks)
      (local.get $new_val.1))
    (local.set $new_val
      (i32.const 65739))
    (i32.store offset=5
      (local.get $rs)
      (local.get $new_val))
    (i32.store offset=1
      (local.tee $fulfill_clos
        (call $alloc_words
          (i32.const 6)))
      (i32.const 7))
    (i32.store offset=5
      (local.get $fulfill_clos)
      (i32.const 6))
    (i32.store offset=9
      (local.get $fulfill_clos)
      (i32.const 3))
    (i32.store offset=13
      (local.get $fulfill_clos)
      (local.get $ks))
    (i32.store offset=17
      (local.get $fulfill_clos)
      (local.get $result))
    (i32.store offset=21
      (local.get $fulfill_clos)
      (local.get $rs))
    (local.set $fulfill
      (local.get $fulfill_clos))
    (i32.store offset=1
      (local.tee $fail_clos
        (call $alloc_words
          (i32.const 6)))
      (i32.const 7))
    (i32.store offset=5
      (local.get $fail_clos)
      (i32.const 5))
    (i32.store offset=9
      (local.get $fail_clos)
      (i32.const 3))
    (i32.store offset=13
      (local.get $fail_clos)
      (local.get $ks))
    (i32.store offset=17
      (local.get $fail_clos)
      (local.get $result))
    (i32.store offset=21
      (local.get $fail_clos)
      (local.get $rs))
    (local.set $fail
      (local.get $fail_clos))
    (i32.store offset=1
      (local.tee $enqueue_clos
        (call $alloc_words
          (i32.const 6)))
      (i32.const 7))
    (i32.store offset=5
      (local.get $enqueue_clos)
      (i32.const 2))
    (i32.store offset=9
      (local.get $enqueue_clos)
      (i32.const 3))
    (i32.store offset=13
      (local.get $enqueue_clos)
      (local.get $ks))
    (i32.store offset=17
      (local.get $enqueue_clos)
      (local.get $result))
    (i32.store offset=21
      (local.get $enqueue_clos)
      (local.get $rs))
    (local.tee $enqueue
      (local.get $enqueue_clos))
    (local.get $fulfill)
    (global.set $g5
      (local.get $fail))
    (global.set $g6)
    (global.set $g7))
  (func $fib (type $t6) (param $clos i32) (param $n i32) (result i32)
    (local $switch_in i32) (local $switch_out i32)
    (local.set $switch_in
      (local.get $n))
    (if $I2
      (block $B0 (result i32)
        (if $I1
          (i32.eq
            (local.get $switch_in)
            (i32.const 0))
          (then)
          (else
            (br $B0
              (i32.const 0))))
        (local.set $switch_out
          (i32.const 0))
        (i32.const 1))
      (then)
      (else
        (if $I5
          (block $B3 (result i32)
            (if $I4
              (i32.eq
                (local.get $switch_in)
                (i32.const 65536))
              (then)
              (else
                (br $B3
                  (i32.const 0))))
            (local.set $switch_out
              (i32.const 65536))
            (i32.const 1))
          (then)
          (else
            (local.set $switch_out
              (call $add<Nat16>
                (call $fib
                  (i32.const 0)
                  (call $sub<Nat16>
                    (local.get $n)
                    (i32.const 131072)))
                (call $fib
                  (i32.const 0)
                  (call $sub<Nat16>
                    (local.get $n)
                    (i32.const 65536)))))))))
    (local.get $switch_out))
  (func $add<Nat16> (type $t6) (param $a i32) (param $b i32) (result i32)
    (local $res i32)
    (if $I0
      (i32.and
        (local.tee $res
          (i32.add
            (i32.shr_u
              (local.get $a)
              (i32.const 16))
            (i32.shr_u
              (local.get $b)
              (i32.const 16))))
        (i32.const -65536))
      (then
        (call $print_ptr
          (i32.const 65660)
          (i32.const 19))
        (unreachable)))
    (i32.shl
      (local.get $res)
      (i32.const 16)))
  (func $sub<Nat16> (type $t6) (param $a i32) (param $b i32) (result i32)
    (local $res i32)
    (if $I0
      (i32.and
        (local.tee $res
          (i32.sub
            (i32.shr_u
              (local.get $a)
              (i32.const 16))
            (i32.shr_u
              (local.get $b)
              (i32.const 16))))
        (i32.const -65536))
      (then
        (call $print_ptr
          (i32.const 65660)
          (i32.const 19))
        (unreachable)))
    (i32.shl
      (local.get $res)
      (i32.const 16)))
  (func $anon-func-294.16 (type $t9) (param $clos i32) (param $$ignored0/0 i32))
  (func $anon-func-295.16 (type $t9) (param $clos i32) (param $$ignored0/1 i32))
  (func $anon-func-332.15 (type $t9) (param $clos i32) (param $e i32)
    (local $r i32) (local $rs_ i32) (local $clos.1 i32) (local $clos.2 i32)
    (local.set $r
      (i32.load offset=13
        (local.get $clos)))
    (call_indirect $table (type $t9)
      (local.tee $clos.2
        (local.tee $rs_
          (i32.load offset=17
            (local.get $clos))))
      (local.get $e)
      (i32.load offset=5
        (local.get $clos.2)))
    (call_indirect $table (type $t9)
      (local.tee $clos.1
        (local.get $r))
      (local.get $e)
      (i32.load offset=5
        (local.get $clos.1))))
  (func $anon-func-330.15 (type $t9) (param $clos i32) (param $t i32)
    (local $k i32) (local $ks_ i32) (local $clos.1 i32) (local $clos.2 i32)
    (local.set $k
      (i32.load offset=13
        (local.get $clos)))
    (call_indirect $table (type $t9)
      (local.tee $clos.2
        (local.tee $ks_
          (i32.load offset=17
            (local.get $clos))))
      (local.get $t)
      (i32.load offset=5
        (local.get $clos.2)))
    (call_indirect $table (type $t9)
      (local.tee $clos.1
        (local.get $k))
      (local.get $t)
      (i32.load offset=5
        (local.get $clos.1))))
  (func $enqueue (type $t1) (param $clos i32) (param $k i32) (param $r i32)
    (local $ks i32) (local $result i32) (local $rs i32) (local $switch_in i32) (local $switch_out i32) (local $t i32) (local $opt_scrut i32) (local $e i32) (local $opt_scrut.1 i32) (local $clos.1 i32) (local $clos.2 i32) (local $ks_ i32) (local $rs_ i32) (local $new_val i32) (local $anon-func-332.15_clos i32) (local $new_val.1 i32) (local $anon-func-330.15_clos i32) (local $tag_scrut i32) (local $tag_scrut.1 i32)
    (local.set $ks
      (i32.load offset=13
        (local.get $clos)))
    (local.set $result
      (i32.load offset=17
        (local.get $clos)))
    (local.set $rs
      (i32.load offset=21
        (local.get $clos)))
    (local.set $switch_in
      (i32.load offset=5
        (local.get $result)))
    (if $I2
      (block $B0 (result i32)
        (if $I1
          (i32.eq
            (local.get $switch_in)
            (i32.const 5))
          (then)
          (else
            (br $B0
              (i32.const 0))))
        (local.set $ks_
          (i32.load offset=5
            (local.get $ks)))
        (i32.store offset=1
          (local.tee $anon-func-330.15_clos
            (call $alloc_words
              (i32.const 5)))
          (i32.const 7))
        (i32.store offset=5
          (local.get $anon-func-330.15_clos)
          (i32.const 1))
        (i32.store offset=9
          (local.get $anon-func-330.15_clos)
          (i32.const 2))
        (i32.store offset=13
          (local.get $anon-func-330.15_clos)
          (local.get $k))
        (i32.store offset=17
          (local.get $anon-func-330.15_clos)
          (local.get $ks_))
        (local.set $new_val.1
          (local.get $anon-func-330.15_clos))
        (i32.store offset=5
          (local.get $ks)
          (local.get $new_val.1))
        (local.set $rs_
          (i32.load offset=5
            (local.get $rs)))
        (i32.store offset=1
          (local.tee $anon-func-332.15_clos
            (call $alloc_words
              (i32.const 5)))
          (i32.const 7))
        (i32.store offset=5
          (local.get $anon-func-332.15_clos)
          (i32.const 0))
        (i32.store offset=9
          (local.get $anon-func-332.15_clos)
          (i32.const 2))
        (i32.store offset=13
          (local.get $anon-func-332.15_clos)
          (local.get $r))
        (i32.store offset=17
          (local.get $anon-func-332.15_clos)
          (local.get $rs_))
        (local.set $new_val
          (local.get $anon-func-332.15_clos))
        (i32.store offset=5
          (local.get $rs)
          (local.get $new_val))
        (local.set $switch_out
          (i32.const 1))
        (i32.const 1))
      (then)
      (else
        (if $I6
          (block $B3 (result i32)
            (if $I4
              (i32.ne
                (local.tee $opt_scrut
                  (local.get $switch_in))
                (i32.const 5))
              (then
                (if $I5
                  (i32.eq
                    (i32.load offset=5
                      (local.tee $tag_scrut.1
                        (i32.load offset=5
                          (local.get $opt_scrut))))
                    (i32.const 24860))
                  (then
                    (local.set $t
                      (i32.load offset=9
                        (local.get $tag_scrut.1))))
                  (else
                    (br $B3
                      (i32.const 0)))))
              (else
                (br $B3
                  (i32.const 0))))
            (call_indirect $table (type $t9)
              (local.tee $clos.2
                (local.get $k))
              (local.get $t)
              (i32.load offset=5
                (local.get $clos.2)))
            (local.set $switch_out
              (i32.const 1))
            (i32.const 1))
          (then)
          (else
            (if $I10
              (block $B7 (result i32)
                (if $I8
                  (i32.ne
                    (local.tee $opt_scrut.1
                      (local.get $switch_in))
                    (i32.const 5))
                  (then
                    (if $I9
                      (i32.eq
                        (i32.load offset=5
                          (local.tee $tag_scrut
                            (i32.load offset=5
                              (local.get $opt_scrut.1))))
                        (i32.const 1932118984))
                      (then
                        (local.set $e
                          (i32.load offset=9
                            (local.get $tag_scrut))))
                      (else
                        (br $B7
                          (i32.const 0)))))
                  (else
                    (br $B7
                      (i32.const 0))))
                (call_indirect $table (type $t9)
                  (local.tee $clos.1
                    (local.get $r))
                  (local.get $e)
                  (i32.load offset=5
                    (local.get $clos.1)))
                (local.set $switch_out
                  (i32.const 1))
                (i32.const 1))
              (then)
              (else
                (call $print_ptr
                  (i32.const 65680)
                  (i32.const 14))
                (unreachable))))))))
  (func $fail (type $t9) (param $clos i32) (param $e i32)
    (local $ks i32) (local $result i32) (local $rs i32) (local $switch_in i32) (local $switch_out i32) (local $opt_scrut i32) (local $rs_ i32) (local $clos.1 i32) (local $new_val i32) (local $new_val.1 i32) (local $new_val.2 i32) (local $heap_object i32) (local $heap_object.1 i32)
    (local.set $ks
      (i32.load offset=13
        (local.get $clos)))
    (local.set $result
      (i32.load offset=17
        (local.get $clos)))
    (local.set $rs
      (i32.load offset=21
        (local.get $clos)))
    (local.set $switch_in
      (i32.load offset=5
        (local.get $result)))
    (if $I2
      (block $B0 (result i32)
        (if $I1
          (i32.eq
            (local.get $switch_in)
            (i32.const 5))
          (then)
          (else
            (br $B0
              (i32.const 0))))
        (i32.store offset=1
          (local.tee $heap_object.1
            (call $alloc_words
              (i32.const 2)))
          (i32.const 8))
        (local.get $heap_object.1)
        (i32.store offset=1
          (local.tee $heap_object
            (call $alloc_words
              (i32.const 3)))
          (i32.const 9))
        (i32.store offset=5
          (local.get $heap_object)
          (i32.const 1932118984))
        (i32.store offset=9
          (local.get $heap_object)
          (local.get $e))
        (local.get $heap_object)
        (i32.store offset=5)
        (local.set $new_val.2
          (local.get $heap_object.1))
        (i32.store offset=5
          (local.get $result)
          (local.get $new_val.2))
        (local.set $rs_
          (i32.load offset=5
            (local.get $rs)))
        (local.set $new_val.1
          (i32.const 65751))
        (i32.store offset=5
          (local.get $ks)
          (local.get $new_val.1))
        (local.set $new_val
          (i32.const 65739))
        (i32.store offset=5
          (local.get $rs)
          (local.get $new_val))
        (call_indirect $table (type $t9)
          (local.tee $clos.1
            (local.get $rs_))
          (local.get $e)
          (i32.load offset=5
            (local.get $clos.1)))
        (local.set $switch_out
          (i32.const 1))
        (i32.const 1))
      (then)
      (else
        (if $I6
          (block $B3 (result i32)
            (if $I4
              (i32.ne
                (local.tee $opt_scrut
                  (local.get $switch_in))
                (i32.const 5))
              (then)
              (else
                (br $B3
                  (i32.const 0))))
            (block $B5
              (call $print_ptr
                (i32.const 65696)
                (i32.const 41))
              (unreachable))
            (local.set $switch_out
              (i32.const 1))
            (i32.const 1))
          (then)
          (else
            (call $print_ptr
              (i32.const 65680)
              (i32.const 14))
            (unreachable))))))
  (func $fulfill (type $t9) (param $clos i32) (param $t i32)
    (local $ks i32) (local $result i32) (local $rs i32) (local $switch_in i32) (local $switch_out i32) (local $opt_scrut i32) (local $ks_ i32) (local $clos.1 i32) (local $new_val i32) (local $new_val.1 i32) (local $new_val.2 i32) (local $heap_object i32) (local $heap_object.1 i32)
    (local.set $ks
      (i32.load offset=13
        (local.get $clos)))
    (local.set $result
      (i32.load offset=17
        (local.get $clos)))
    (local.set $rs
      (i32.load offset=21
        (local.get $clos)))
    (local.set $switch_in
      (i32.load offset=5
        (local.get $result)))
    (if $I2
      (block $B0 (result i32)
        (if $I1
          (i32.eq
            (local.get $switch_in)
            (i32.const 5))
          (then)
          (else
            (br $B0
              (i32.const 0))))
        (i32.store offset=1
          (local.tee $heap_object.1
            (call $alloc_words
              (i32.const 2)))
          (i32.const 8))
        (local.get $heap_object.1)
        (i32.store offset=1
          (local.tee $heap_object
            (call $alloc_words
              (i32.const 3)))
          (i32.const 9))
        (i32.store offset=5
          (local.get $heap_object)
          (i32.const 24860))
        (i32.store offset=9
          (local.get $heap_object)
          (local.get $t))
        (local.get $heap_object)
        (i32.store offset=5)
        (local.set $new_val.2
          (local.get $heap_object.1))
        (i32.store offset=5
          (local.get $result)
          (local.get $new_val.2))
        (local.set $ks_
          (i32.load offset=5
            (local.get $ks)))
        (local.set $new_val.1
          (i32.const 65751))
        (i32.store offset=5
          (local.get $ks)
          (local.get $new_val.1))
        (local.set $new_val
          (i32.const 65739))
        (i32.store offset=5
          (local.get $rs)
          (local.get $new_val))
        (call_indirect $table (type $t9)
          (local.tee $clos.1
            (local.get $ks_))
          (local.get $t)
          (i32.load offset=5
            (local.get $clos.1)))
        (local.set $switch_out
          (i32.const 1))
        (i32.const 1))
      (then)
      (else
        (if $I6
          (block $B3 (result i32)
            (if $I4
              (i32.ne
                (local.tee $opt_scrut
                  (local.get $switch_in))
                (i32.const 5))
              (then)
              (else
                (br $B3
                  (i32.const 0))))
            (block $B5
              (call $print_ptr
                (i32.const 65764)
                (i32.const 41))
              (unreachable))
            (local.set $switch_out
              (i32.const 1))
            (i32.const 1))
          (then)
          (else
            (call $print_ptr
              (i32.const 65680)
              (i32.const 14))
            (unreachable))))))
  (func $obj_idx (type $t6) (param $x i32) (param $hash i32) (result i32)
    (local $h_ptr i32) (local $n i32) (local $i i32)
    (local.set $h_ptr
      (i32.load offset=9
        (local.get $x)))
    (local.set $n
      (i32.load offset=5
        (local.get $x)))
    (local.set $i
      (i32.const 0))
    (loop $L0
      (if $I1
        (i32.lt_u
          (local.get $i)
          (local.get $n))
        (then
          (if $I2
            (i32.eq
              (i32.load offset=1
                (i32.add
                  (i32.mul
                    (local.get $i)
                    (i32.const 4))
                  (local.get $h_ptr)))
              (local.get $hash))
            (then
              (return
                (i32.add
                  (i32.mul
                    (i32.add
                      (local.get $i)
                      (i32.const 3))
                    (i32.const 4))
                  (local.get $x)))))
          (local.set $i
            (i32.add
              (local.get $i)
              (i32.const 1)))
          (br $L0))))
    (call $print_ptr
      (i32.const 65844)
      (i32.const 38))
    (unreachable))
  (func $Text.compare_eq (type $t6) (param $x i32) (param $y i32) (result i32)
    (i32.eq
      (call $text_compare
        (local.get $x)
        (local.get $y))
      (i32.const 0)))
  (func $unbox_i32 (type $t5) (param $n i32) (result i32)
    (if $I0 (result i32)
      (call $is_unboxed
        (local.get $n))
      (then
        (i32.shr_u
          (local.get $n)
          (i32.const 2)))
      (else
        (i32.load offset=5
          (local.get $n)))))
  (func $is_unboxed (type $t5) (param $x i32) (result i32)
    (i32.eqz
      (i32.and
        (local.get $x)
        (i32.const 2))))
  (func $unbox_i64 (type $t8) (param $n i32) (result i64)
    (if $I0 (result i64)
      (call $is_unboxed
        (local.get $n))
      (then
        (i64.extend_i32_u
          (i32.shr_u
            (local.get $n)
            (i32.const 2))))
      (else
        (i64.load offset=5 align=4
          (local.get $n)))))
  (func $Word32->Char (type $t5) (param $n i32) (result i32)
    (if $I0
      (i32.or
        (i32.and
          (i32.ge_u
            (local.get $n)
            (i32.const 55296))
          (i32.lt_u
            (local.get $n)
            (i32.const 57344)))
        (i32.gt_u
          (local.get $n)
          (i32.const 1114111)))
      (then
        (call $print_ptr
          (i32.const 66092)
          (i32.const 22))
        (unreachable)))
    (i32.shl
      (local.get $n)
      (i32.const 8)))
  (func $B_add (type $t6) (param $a i32) (param $b i32) (result i32)
    (local $res i32) (local $res64 i64)
    (if $I0 (result i32)
      (call $is_unboxed
        (i32.or
          (local.get $a)
          (local.get $b)))
      (then
        (if $I1 (result i32)
          (i64.eqz
            (i64.and
              (i64.xor
                (local.tee $res64
                  (i64.add
                    (i64.extend_i32_s
                      (i32.rotr
                        (local.get $a)
                        (i32.const 1)))
                    (i64.extend_i32_s
                      (i32.rotr
                        (local.get $b)
                        (i32.const 1)))))
                (i64.shl
                  (local.get $res64)
                  (i64.const 1)))
              (i64.const -4294967296)))
          (then
            (i32.rotl
              (i32.wrap_i64
                (local.get $res64))
              (i32.const 1)))
          (else
            (call $bigint_of_word64_signed
              (i64.shr_s
                (local.get $res64)
                (i64.const 1))))))
      (else
        (if $I4 (result i32)
          (i32.le_u
            (call $bigint_2complement_bits
              (local.tee $res
                (call $bigint_add
                  (if $I2 (result i32)
                    (call $is_unboxed
                      (local.get $a))
                    (then
                      (call $bigint_of_word64_signed
                        (i64.shr_s
                          (i64.extend_i32_s
                            (i32.rotr
                              (local.get $a)
                              (i32.const 1)))
                          (i64.const 1))))
                    (else
                      (local.get $a)))
                  (if $I3 (result i32)
                    (call $is_unboxed
                      (local.get $b))
                    (then
                      (call $bigint_of_word64_signed
                        (i64.shr_s
                          (i64.extend_i32_s
                            (i32.rotr
                              (local.get $b)
                              (i32.const 1)))
                          (i64.const 1))))
                    (else
                      (local.get $b))))))
            (i32.const 31))
          (then
            (i32.rotl
              (i32.shl
                (call $bigint_to_word32_wrap
                  (local.get $res))
                (i32.const 1))
              (i32.const 1)))
          (else
            (local.get $res))))))
  (func $B_lt (type $t6) (param $a i32) (param $b i32) (result i32)
    (if $I0 (result i32)
      (call $is_unboxed
        (i32.or
          (local.get $a)
          (local.get $b)))
      (then
        (i64.lt_s
          (i64.extend_i32_s
            (i32.rotr
              (local.get $a)
              (i32.const 1)))
          (i64.extend_i32_s
            (i32.rotr
              (local.get $b)
              (i32.const 1)))))
      (else
        (call $bigint_lt
          (if $I1 (result i32)
            (call $is_unboxed
              (local.get $a))
            (then
              (call $bigint_of_word64_signed
                (i64.shr_s
                  (i64.extend_i32_s
                    (i32.rotr
                      (local.get $a)
                      (i32.const 1)))
                  (i64.const 1))))
            (else
              (local.get $a)))
          (if $I2 (result i32)
            (call $is_unboxed
              (local.get $b))
            (then
              (call $bigint_of_word64_signed
                (i64.shr_s
                  (i64.extend_i32_s
                    (i32.rotr
                      (local.get $b)
                      (i32.const 1)))
                  (i64.const 1))))
            (else
              (local.get $b)))))))
  (func $B_eq (type $t6) (param $a i32) (param $b i32) (result i32)
    (if $I0 (result i32)
      (call $is_unboxed
        (i32.or
          (local.get $a)
          (local.get $b)))
      (then
        (i64.eq
          (i64.extend_i32_s
            (i32.rotr
              (local.get $a)
              (i32.const 1)))
          (i64.extend_i32_s
            (i32.rotr
              (local.get $b)
              (i32.const 1)))))
      (else
        (call $bigint_eq
          (if $I1 (result i32)
            (call $is_unboxed
              (local.get $a))
            (then
              (call $bigint_of_word64_signed
                (i64.shr_s
                  (i64.extend_i32_s
                    (i32.rotr
                      (local.get $a)
                      (i32.const 1)))
                  (i64.const 1))))
            (else
              (local.get $a)))
          (if $I2 (result i32)
            (call $is_unboxed
              (local.get $b))
            (then
              (call $bigint_of_word64_signed
                (i64.shr_s
                  (i64.extend_i32_s
                    (i32.rotr
                      (local.get $b)
                      (i32.const 1)))
                  (i64.const 1))))
            (else
              (local.get $b)))))))
  (func $B_gt (type $t6) (param $a i32) (param $b i32) (result i32)
    (if $I0 (result i32)
      (call $is_unboxed
        (i32.or
          (local.get $a)
          (local.get $b)))
      (then
        (i64.gt_s
          (i64.extend_i32_s
            (i32.rotr
              (local.get $a)
              (i32.const 1)))
          (i64.extend_i32_s
            (i32.rotr
              (local.get $b)
              (i32.const 1)))))
      (else
        (call $bigint_gt
          (if $I1 (result i32)
            (call $is_unboxed
              (local.get $a))
            (then
              (call $bigint_of_word64_signed
                (i64.shr_s
                  (i64.extend_i32_s
                    (i32.rotr
                      (local.get $a)
                      (i32.const 1)))
                  (i64.const 1))))
            (else
              (local.get $a)))
          (if $I2 (result i32)
            (call $is_unboxed
              (local.get $b))
            (then
              (call $bigint_of_word64_signed
                (i64.shr_s
                  (i64.extend_i32_s
                    (i32.rotr
                      (local.get $b)
                      (i32.const 1)))
                  (i64.const 1))))
            (else
              (local.get $b)))))))
  (func $B_sub (type $t6) (param $a i32) (param $b i32) (result i32)
    (local $res i32) (local $res64 i64)
    (if $I0 (result i32)
      (call $is_unboxed
        (i32.or
          (local.get $a)
          (local.get $b)))
      (then
        (if $I1 (result i32)
          (i64.eqz
            (i64.and
              (i64.xor
                (local.tee $res64
                  (call $nat_sub
                    (i64.extend_i32_s
                      (i32.rotr
                        (local.get $a)
                        (i32.const 1)))
                    (i64.extend_i32_s
                      (i32.rotr
                        (local.get $b)
                        (i32.const 1)))))
                (i64.shl
                  (local.get $res64)
                  (i64.const 1)))
              (i64.const -4294967296)))
          (then
            (i32.rotl
              (i32.wrap_i64
                (local.get $res64))
              (i32.const 1)))
          (else
            (call $bigint_of_word64_signed
              (i64.shr_s
                (local.get $res64)
                (i64.const 1))))))
      (else
        (if $I4 (result i32)
          (i32.le_u
            (call $bigint_2complement_bits
              (local.tee $res
                (call $assert_nonneg
                  (call $bigint_sub
                    (if $I2 (result i32)
                      (call $is_unboxed
                        (local.get $a))
                      (then
                        (call $bigint_of_word64_signed
                          (i64.shr_s
                            (i64.extend_i32_s
                              (i32.rotr
                                (local.get $a)
                                (i32.const 1)))
                            (i64.const 1))))
                      (else
                        (local.get $a)))
                    (if $I3 (result i32)
                      (call $is_unboxed
                        (local.get $b))
                      (then
                        (call $bigint_of_word64_signed
                          (i64.shr_s
                            (i64.extend_i32_s
                              (i32.rotr
                                (local.get $b)
                                (i32.const 1)))
                            (i64.const 1))))
                      (else
                        (local.get $b)))))))
            (i32.const 31))
          (then
            (i32.rotl
              (i32.shl
                (call $bigint_to_word32_wrap
                  (local.get $res))
                (i32.const 1))
              (i32.const 1)))
          (else
            (local.get $res))))))
  (func $assert_nonneg (type $t5) (param $n i32) (result i32)
    (if $I0
      (call $bigint_isneg
        (local.get $n))
      (then
        (call $print_ptr
          (i32.const 66152)
          (i32.const 29))
        (unreachable)))
    (local.get $n))
  (func $nat_sub (type $t16) (param $n1 i64) (param $n2 i64) (result i64)
    (if $I0
      (i64.lt_u
        (local.get $n1)
        (local.get $n2))
      (then
        (call $print_ptr
          (i32.const 66152)
          (i32.const 29))
        (unreachable)))
    (i64.sub
      (local.get $n1)
      (local.get $n2)))
  (func $B_div (type $t6) (param $a i32) (param $b i32) (result i32)
    (local $res i32) (local $res64 i64)
    (if $I0 (result i32)
      (call $is_unboxed
        (i32.or
          (local.get $a)
          (local.get $b)))
      (then
        (if $I1 (result i32)
          (i64.eqz
            (i64.and
              (i64.xor
                (local.tee $res64
                  (i64.shl
                    (i64.div_u
                      (i64.extend_i32_s
                        (i32.rotr
                          (local.get $a)
                          (i32.const 1)))
                      (i64.extend_i32_s
                        (i32.rotr
                          (local.get $b)
                          (i32.const 1))))
                    (i64.const 1)))
                (i64.shl
                  (local.get $res64)
                  (i64.const 1)))
              (i64.const -4294967296)))
          (then
            (i32.rotl
              (i32.wrap_i64
                (local.get $res64))
              (i32.const 1)))
          (else
            (call $bigint_of_word64_signed
              (i64.shr_s
                (local.get $res64)
                (i64.const 1))))))
      (else
        (if $I4 (result i32)
          (i32.le_u
            (call $bigint_2complement_bits
              (local.tee $res
                (call $bigint_div
                  (if $I2 (result i32)
                    (call $is_unboxed
                      (local.get $a))
                    (then
                      (call $bigint_of_word64_signed
                        (i64.shr_s
                          (i64.extend_i32_s
                            (i32.rotr
                              (local.get $a)
                              (i32.const 1)))
                          (i64.const 1))))
                    (else
                      (local.get $a)))
                  (if $I3 (result i32)
                    (call $is_unboxed
                      (local.get $b))
                    (then
                      (call $bigint_of_word64_signed
                        (i64.shr_s
                          (i64.extend_i32_s
                            (i32.rotr
                              (local.get $b)
                              (i32.const 1)))
                          (i64.const 1))))
                    (else
                      (local.get $b))))))
            (i32.const 31))
          (then
            (i32.rotl
              (i32.shl
                (call $bigint_to_word32_wrap
                  (local.get $res))
                (i32.const 1))
              (i32.const 1)))
          (else
            (local.get $res))))))
  (func $B_rem (type $t6) (param $a i32) (param $b i32) (result i32)
    (local $res i32) (local $res64 i64)
    (if $I0 (result i32)
      (call $is_unboxed
        (i32.or
          (local.get $a)
          (local.get $b)))
      (then
        (if $I1 (result i32)
          (i64.eqz
            (i64.and
              (i64.xor
                (local.tee $res64
                  (i64.rem_u
                    (i64.extend_i32_s
                      (i32.rotr
                        (local.get $a)
                        (i32.const 1)))
                    (i64.extend_i32_s
                      (i32.rotr
                        (local.get $b)
                        (i32.const 1)))))
                (i64.shl
                  (local.get $res64)
                  (i64.const 1)))
              (i64.const -4294967296)))
          (then
            (i32.rotl
              (i32.wrap_i64
                (local.get $res64))
              (i32.const 1)))
          (else
            (call $bigint_of_word64_signed
              (i64.shr_s
                (local.get $res64)
                (i64.const 1))))))
      (else
        (if $I4 (result i32)
          (i32.le_u
            (call $bigint_2complement_bits
              (local.tee $res
                (call $bigint_rem
                  (if $I2 (result i32)
                    (call $is_unboxed
                      (local.get $a))
                    (then
                      (call $bigint_of_word64_signed
                        (i64.shr_s
                          (i64.extend_i32_s
                            (i32.rotr
                              (local.get $a)
                              (i32.const 1)))
                          (i64.const 1))))
                    (else
                      (local.get $a)))
                  (if $I3 (result i32)
                    (call $is_unboxed
                      (local.get $b))
                    (then
                      (call $bigint_of_word64_signed
                        (i64.shr_s
                          (i64.extend_i32_s
                            (i32.rotr
                              (local.get $b)
                              (i32.const 1)))
                          (i64.const 1))))
                    (else
                      (local.get $b))))))
            (i32.const 31))
          (then
            (i32.rotl
              (i32.shl
                (call $bigint_to_word32_wrap
                  (local.get $res))
                (i32.const 1))
              (i32.const 1)))
          (else
            (local.get $res))))))
  (func $next (type $t5) (param $clos i32) (result i32)
    (local $i i32) (local $heap_object i32)
    (if $I0 (result i32)
      (call $text_iter_done
        (local.tee $i
          (i32.load offset=13
            (local.get $clos))))
      (then
        (i32.const 5))
      (else
        (i32.store offset=1
          (local.tee $heap_object
            (call $alloc_words
              (i32.const 2)))
          (i32.const 8))
        (i32.store offset=5
          (local.get $heap_object)
          (i32.shl
            (call $text_iter_next
              (local.get $i))
            (i32.const 8)))
        (local.get $heap_object))))
  (func $anon-func-93.3 (type $t5) (param $clos i32) (result i32)
    (local $xs i32) (local $i i32) (local $next i32) (local $obj i32) (local $next_clos i32)
    (local.set $i
      (call $text_iter
        (local.tee $xs
          (i32.load offset=13
            (local.get $clos)))))
    (i32.store offset=1
      (local.tee $next_clos
        (call $alloc_words
          (i32.const 4)))
      (i32.const 7))
    (i32.store offset=5
      (local.get $next_clos)
      (i32.const 9))
    (i32.store offset=9
      (local.get $next_clos)
      (i32.const 1))
    (i32.store offset=13
      (local.get $next_clos)
      (local.get $i))
    (local.set $next
      (local.get $next_clos))
    (i32.store offset=1
      (local.tee $obj
        (call $alloc_words
          (i32.const 4)))
      (i32.const 1))
    (i32.store offset=5
      (local.get $obj)
      (i32.const 1))
    (i32.store offset=9
      (local.get $obj)
      (i32.const 66203))
    (i32.store offset=13
      (local.get $obj)
      (local.get $next))
    (local.get $obj))
  (func $anon-func-91.3 (type $t5) (param $clos i32) (result i32)
    (local $xs i32) (local $a i32)
    (if $I0 (result i32)
      (i32.and
        (local.tee $a
          (call $text_len
            (local.tee $xs
              (i32.load offset=13
                (local.get $clos)))))
        (i32.const -1073741824))
      (then
        (call $bigint_of_word64
          (i64.extend_i32_u
            (local.get $a))))
      (else
        (i32.rotl
          (local.get $a)
          (i32.const 2)))))
  (func $next.1 (type $t5) (param $clos i32) (result i32)
    (local $i i32) (local $heap_object i32)
    (if $I0 (result i32)
      (call $blob_iter_done
        (local.tee $i
          (i32.load offset=13
            (local.get $clos))))
      (then
        (i32.const 5))
      (else
        (i32.store offset=1
          (local.tee $heap_object
            (call $alloc_words
              (i32.const 2)))
          (i32.const 8))
        (i32.store offset=5
          (local.get $heap_object)
          (i32.shl
            (call $blob_iter_next
              (local.get $i))
            (i32.const 24)))
        (local.get $heap_object))))
  (func $anon-func-80.3 (type $t5) (param $clos i32) (result i32)
    (local $xs i32) (local $i i32) (local $next i32) (local $obj i32) (local $next_clos i32)
    (local.set $i
      (call $blob_iter
        (local.tee $xs
          (i32.load offset=13
            (local.get $clos)))))
    (i32.store offset=1
      (local.tee $next_clos
        (call $alloc_words
          (i32.const 4)))
      (i32.const 7))
    (i32.store offset=5
      (local.get $next_clos)
      (i32.const 12))
    (i32.store offset=9
      (local.get $next_clos)
      (i32.const 1))
    (i32.store offset=13
      (local.get $next_clos)
      (local.get $i))
    (local.set $next
      (local.get $next_clos))
    (i32.store offset=1
      (local.tee $obj
        (call $alloc_words
          (i32.const 4)))
      (i32.const 1))
    (i32.store offset=5
      (local.get $obj)
      (i32.const 1))
    (i32.store offset=9
      (local.get $obj)
      (i32.const 66203))
    (i32.store offset=13
      (local.get $obj)
      (local.get $next))
    (local.get $obj))
  (func $anon-func-78.3 (type $t5) (param $clos i32) (result i32)
    (local $xs i32) (local $a i32)
    (if $I0 (result i32)
      (i32.and
        (local.tee $a
          (i32.load offset=5
            (local.tee $xs
              (i32.load offset=13
                (local.get $clos)))))
        (i32.const -1073741824))
      (then
        (call $bigint_of_word64
          (i64.extend_i32_u
            (local.get $a))))
      (else
        (i32.rotl
          (local.get $a)
          (i32.const 2)))))
  (func $B_ge (type $t6) (param $a i32) (param $b i32) (result i32)
    (if $I0 (result i32)
      (call $is_unboxed
        (i32.or
          (local.get $a)
          (local.get $b)))
      (then
        (i64.ge_s
          (i64.extend_i32_s
            (i32.rotr
              (local.get $a)
              (i32.const 1)))
          (i64.extend_i32_s
            (i32.rotr
              (local.get $b)
              (i32.const 1)))))
      (else
        (call $bigint_ge
          (if $I1 (result i32)
            (call $is_unboxed
              (local.get $a))
            (then
              (call $bigint_of_word64_signed
                (i64.shr_s
                  (i64.extend_i32_s
                    (i32.rotr
                      (local.get $a)
                      (i32.const 1)))
                  (i64.const 1))))
            (else
              (local.get $a)))
          (if $I2 (result i32)
            (call $is_unboxed
              (local.get $b))
            (then
              (call $bigint_of_word64_signed
                (i64.shr_s
                  (i64.extend_i32_s
                    (i32.rotr
                      (local.get $b)
                      (i32.const 1)))
                  (i64.const 1))))
            (else
              (local.get $b)))))))
  (func $Array.idx_bigint (type $t6) (param $array i32) (param $idx i32) (result i32)
    (local $a i32) (local $err_msg i32)
    (local.get $array)
    (local.get $idx)
    (local.set $err_msg
      (i32.const 66235))
    (if $I0 (result i32)
      (call $is_unboxed
        (local.tee $a))
      (then
        (i32.shr_s
          (i32.rotr
            (local.get $a)
            (i32.const 1))
          (i32.const 1)))
      (else
        (call $bigint_to_word32_trap_with
          (local.get $a)
          (local.get $err_msg))))
    (call $Array.idx))
  (func $Array.idx (type $t6) (param $array i32) (param $idx i32) (result i32)
    (if $I0
      (i32.lt_u
        (local.get $idx)
        (i32.load offset=5
          (local.get $array)))
      (then)
      (else
        (call $print_ptr
          (i32.const 66208)
          (i32.const 25))
        (unreachable)))
    (i32.add
      (i32.mul
        (i32.add
          (local.get $idx)
          (i32.const 2))
        (i32.const 4))
      (local.get $array)))
  (func $next.2 (type $t5) (param $clos i32) (result i32)
    (local $i i32) (local $l i32) (local $xs i32) (local $j i32) (local $heap_object i32) (local $new_val i32)
    (local.set $i
      (i32.load offset=13
        (local.get $clos)))
    (local.set $l
      (i32.load offset=17
        (local.get $clos)))
    (local.set $xs
      (i32.load offset=21
        (local.get $clos)))
    (if $I0 (result i32)
      (call $B_ge
        (i32.load offset=5
          (local.get $i))
        (local.get $l))
      (then
        (i32.const 5))
      (else
        (local.set $j
          (i32.load offset=5
            (local.get $i)))
        (local.set $new_val
          (call $B_add
            (i32.load offset=5
              (local.get $i))
            (i32.const 4)))
        (i32.store offset=5
          (local.get $i)
          (local.get $new_val))
        (i32.store offset=1
          (local.tee $heap_object
            (call $alloc_words
              (i32.const 2)))
          (i32.const 8))
        (i32.store offset=5
          (local.get $heap_object)
          (i32.load offset=1
            (call $Array.idx_bigint
              (local.get $xs)
              (local.get $j))))
        (local.get $heap_object))))
  (func $anon-func-72.3 (type $t5) (param $clos i32) (result i32)
    (local $xs i32) (local $i i32) (local $heap_object i32) (local $l i32) (local $next i32) (local $obj i32) (local $next_clos i32) (local $clos.1 i32) (local $new_val i32)
    (local.set $xs
      (i32.load offset=13
        (local.get $clos)))
    (i32.store offset=1
      (local.tee $heap_object
        (call $alloc_words
          (i32.const 2)))
      (i32.const 6))
    (i32.store offset=5
      (local.get $heap_object)
      (i32.const 0))
    (local.set $i
      (local.get $heap_object))
    (local.set $new_val
      (i32.const 0))
    (i32.store offset=5
      (local.get $i)
      (local.get $new_val))
    (local.set $l
      (call_indirect $table (type $t5)
        (local.tee $clos.1
          (call $@mut_array_size
            (i32.const 0)
            (local.get $xs)))
        (i32.load offset=5
          (local.get $clos.1))))
    (i32.store offset=1
      (local.tee $next_clos
        (call $alloc_words
          (i32.const 6)))
      (i32.const 7))
    (i32.store offset=5
      (local.get $next_clos)
      (i32.const 15))
    (i32.store offset=9
      (local.get $next_clos)
      (i32.const 3))
    (i32.store offset=13
      (local.get $next_clos)
      (local.get $i))
    (i32.store offset=17
      (local.get $next_clos)
      (local.get $l))
    (i32.store offset=21
      (local.get $next_clos)
      (local.get $xs))
    (local.set $next
      (local.get $next_clos))
    (i32.store offset=1
      (local.tee $obj
        (call $alloc_words
          (i32.const 4)))
      (i32.const 1))
    (i32.store offset=5
      (local.get $obj)
      (i32.const 1))
    (i32.store offset=9
      (local.get $obj)
      (i32.const 66203))
    (i32.store offset=13
      (local.get $obj)
      (local.get $next))
    (local.get $obj))
  (func $next.3 (type $t5) (param $clos i32) (result i32)
    (local $i i32) (local $l i32) (local $xs i32) (local $j i32) (local $heap_object i32) (local $new_val i32)
    (local.set $i
      (i32.load offset=13
        (local.get $clos)))
    (local.set $l
      (i32.load offset=17
        (local.get $clos)))
    (local.set $xs
      (i32.load offset=21
        (local.get $clos)))
    (if $I0 (result i32)
      (call $B_ge
        (i32.load offset=5
          (local.get $i))
        (local.get $l))
      (then
        (i32.const 5))
      (else
        (local.set $j
          (i32.load offset=5
            (local.get $i)))
        (local.set $new_val
          (call $B_add
            (i32.load offset=5
              (local.get $i))
            (i32.const 4)))
        (i32.store offset=5
          (local.get $i)
          (local.get $new_val))
        (i32.store offset=1
          (local.tee $heap_object
            (call $alloc_words
              (i32.const 2)))
          (i32.const 8))
        (i32.store offset=5
          (local.get $heap_object)
          (i32.load offset=1
            (call $Array.idx_bigint
              (local.get $xs)
              (local.get $j))))
        (local.get $heap_object))))
  (func $anon-func-66.3 (type $t5) (param $clos i32) (result i32)
    (local $xs i32) (local $i i32) (local $heap_object i32) (local $l i32) (local $next i32) (local $obj i32) (local $next_clos i32) (local $clos.1 i32) (local $new_val i32)
    (local.set $xs
      (i32.load offset=13
        (local.get $clos)))
    (i32.store offset=1
      (local.tee $heap_object
        (call $alloc_words
          (i32.const 2)))
      (i32.const 6))
    (i32.store offset=5
      (local.get $heap_object)
      (i32.const 0))
    (local.set $i
      (local.get $heap_object))
    (local.set $new_val
      (i32.const 0))
    (i32.store offset=5
      (local.get $i)
      (local.get $new_val))
    (local.set $l
      (call_indirect $table (type $t5)
        (local.tee $clos.1
          (call $@immut_array_size
            (i32.const 0)
            (local.get $xs)))
        (i32.load offset=5
          (local.get $clos.1))))
    (i32.store offset=1
      (local.tee $next_clos
        (call $alloc_words
          (i32.const 6)))
      (i32.const 7))
    (i32.store offset=5
      (local.get $next_clos)
      (i32.const 17))
    (i32.store offset=9
      (local.get $next_clos)
      (i32.const 3))
    (i32.store offset=13
      (local.get $next_clos)
      (local.get $i))
    (i32.store offset=17
      (local.get $next_clos)
      (local.get $l))
    (i32.store offset=21
      (local.get $next_clos)
      (local.get $xs))
    (local.set $next
      (local.get $next_clos))
    (i32.store offset=1
      (local.tee $obj
        (call $alloc_words
          (i32.const 4)))
      (i32.const 1))
    (i32.store offset=5
      (local.get $obj)
      (i32.const 1))
    (i32.store offset=9
      (local.get $obj)
      (i32.const 66203))
    (i32.store offset=13
      (local.get $obj)
      (local.get $next))
    (local.get $obj))
  (func $next.4 (type $t5) (param $clos i32) (result i32)
    (local $i i32) (local $l i32) (local $j i32) (local $heap_object i32) (local $new_val i32)
    (local.set $i
      (i32.load offset=13
        (local.get $clos)))
    (local.set $l
      (i32.load offset=17
        (local.get $clos)))
    (if $I0 (result i32)
      (call $B_ge
        (i32.load offset=5
          (local.get $i))
        (local.get $l))
      (then
        (i32.const 5))
      (else
        (local.set $j
          (i32.load offset=5
            (local.get $i)))
        (local.set $new_val
          (call $B_add
            (i32.load offset=5
              (local.get $i))
            (i32.const 4)))
        (i32.store offset=5
          (local.get $i)
          (local.get $new_val))
        (i32.store offset=1
          (local.tee $heap_object
            (call $alloc_words
              (i32.const 2)))
          (i32.const 8))
        (i32.store offset=5
          (local.get $heap_object)
          (local.get $j))
        (local.get $heap_object))))
  (func $anon-func-60.3 (type $t5) (param $clos i32) (result i32)
    (local $xs i32) (local $i i32) (local $heap_object i32) (local $l i32) (local $next i32) (local $obj i32) (local $next_clos i32) (local $clos.1 i32) (local $new_val i32)
    (local.set $xs
      (i32.load offset=13
        (local.get $clos)))
    (i32.store offset=1
      (local.tee $heap_object
        (call $alloc_words
          (i32.const 2)))
      (i32.const 6))
    (i32.store offset=5
      (local.get $heap_object)
      (i32.const 0))
    (local.set $i
      (local.get $heap_object))
    (local.set $new_val
      (i32.const 0))
    (i32.store offset=5
      (local.get $i)
      (local.get $new_val))
    (local.set $l
      (call_indirect $table (type $t5)
        (local.tee $clos.1
          (call $@mut_array_size
            (i32.const 0)
            (local.get $xs)))
        (i32.load offset=5
          (local.get $clos.1))))
    (i32.store offset=1
      (local.tee $next_clos
        (call $alloc_words
          (i32.const 5)))
      (i32.const 7))
    (i32.store offset=5
      (local.get $next_clos)
      (i32.const 19))
    (i32.store offset=9
      (local.get $next_clos)
      (i32.const 2))
    (i32.store offset=13
      (local.get $next_clos)
      (local.get $i))
    (i32.store offset=17
      (local.get $next_clos)
      (local.get $l))
    (local.set $next
      (local.get $next_clos))
    (i32.store offset=1
      (local.tee $obj
        (call $alloc_words
          (i32.const 4)))
      (i32.const 1))
    (i32.store offset=5
      (local.get $obj)
      (i32.const 1))
    (i32.store offset=9
      (local.get $obj)
      (i32.const 66203))
    (i32.store offset=13
      (local.get $obj)
      (local.get $next))
    (local.get $obj))
  (func $next.5 (type $t5) (param $clos i32) (result i32)
    (local $i i32) (local $l i32) (local $j i32) (local $heap_object i32) (local $new_val i32)
    (local.set $i
      (i32.load offset=13
        (local.get $clos)))
    (local.set $l
      (i32.load offset=17
        (local.get $clos)))
    (if $I0 (result i32)
      (call $B_ge
        (i32.load offset=5
          (local.get $i))
        (local.get $l))
      (then
        (i32.const 5))
      (else
        (local.set $j
          (i32.load offset=5
            (local.get $i)))
        (local.set $new_val
          (call $B_add
            (i32.load offset=5
              (local.get $i))
            (i32.const 4)))
        (i32.store offset=5
          (local.get $i)
          (local.get $new_val))
        (i32.store offset=1
          (local.tee $heap_object
            (call $alloc_words
              (i32.const 2)))
          (i32.const 8))
        (i32.store offset=5
          (local.get $heap_object)
          (local.get $j))
        (local.get $heap_object))))
  (func $anon-func-54.3 (type $t5) (param $clos i32) (result i32)
    (local $xs i32) (local $i i32) (local $heap_object i32) (local $l i32) (local $next i32) (local $obj i32) (local $next_clos i32) (local $clos.1 i32) (local $new_val i32)
    (local.set $xs
      (i32.load offset=13
        (local.get $clos)))
    (i32.store offset=1
      (local.tee $heap_object
        (call $alloc_words
          (i32.const 2)))
      (i32.const 6))
    (i32.store offset=5
      (local.get $heap_object)
      (i32.const 0))
    (local.set $i
      (local.get $heap_object))
    (local.set $new_val
      (i32.const 0))
    (i32.store offset=5
      (local.get $i)
      (local.get $new_val))
    (local.set $l
      (call_indirect $table (type $t5)
        (local.tee $clos.1
          (call $@immut_array_size
            (i32.const 0)
            (local.get $xs)))
        (i32.load offset=5
          (local.get $clos.1))))
    (i32.store offset=1
      (local.tee $next_clos
        (call $alloc_words
          (i32.const 5)))
      (i32.const 7))
    (i32.store offset=5
      (local.get $next_clos)
      (i32.const 21))
    (i32.store offset=9
      (local.get $next_clos)
      (i32.const 2))
    (i32.store offset=13
      (local.get $next_clos)
      (local.get $i))
    (i32.store offset=17
      (local.get $next_clos)
      (local.get $l))
    (local.set $next
      (local.get $next_clos))
    (i32.store offset=1
      (local.tee $obj
        (call $alloc_words
          (i32.const 4)))
      (i32.const 1))
    (i32.store offset=5
      (local.get $obj)
      (i32.const 1))
    (i32.store offset=9
      (local.get $obj)
      (i32.const 66203))
    (i32.store offset=13
      (local.get $obj)
      (local.get $next))
    (local.get $obj))
  (func $anon-func-52.3 (type $t1) (param $clos i32) (param $n i32) (param $x i32)
    (local $xs i32)
    (i32.store offset=1
      (call $Array.idx_bigint
        (local.tee $xs
          (i32.load offset=13
            (local.get $clos)))
        (local.get $n))
      (local.get $x)))
  (func $anon-func-50.3 (type $t5) (param $clos i32) (result i32)
    (local $xs i32) (local $a i32)
    (if $I0 (result i32)
      (i32.and
        (local.tee $a
          (i32.load offset=5
            (local.tee $xs
              (i32.load offset=13
                (local.get $clos)))))
        (i32.const -1073741824))
      (then
        (call $bigint_of_word64
          (i64.extend_i32_u
            (local.get $a))))
      (else
        (i32.rotl
          (local.get $a)
          (i32.const 2)))))
  (func $anon-func-48.3 (type $t5) (param $clos i32) (result i32)
    (local $xs i32) (local $a i32)
    (if $I0 (result i32)
      (i32.and
        (local.tee $a
          (i32.load offset=5
            (local.tee $xs
              (i32.load offset=13
                (local.get $clos)))))
        (i32.const -1073741824))
      (then
        (call $bigint_of_word64
          (i64.extend_i32_u
            (local.get $a))))
      (else
        (i32.rotl
          (local.get $a)
          (i32.const 2)))))
  (func $anon-func-46.3 (type $t6) (param $clos i32) (param $n i32) (result i32)
    (local $xs i32)
    (i32.load offset=1
      (call $Array.idx_bigint
        (local.tee $xs
          (i32.load offset=13
            (local.get $clos)))
        (local.get $n))))
  (func $anon-func-44.3 (type $t6) (param $clos i32) (param $n i32) (result i32)
    (local $xs i32)
    (i32.load offset=1
      (call $Array.idx_bigint
        (local.tee $xs
          (i32.load offset=13
            (local.get $clos)))
        (local.get $n))))
  (func $start (type $t15)
    (if $I0
      (i32.eq
        (call $fib
          (i32.const 0)
          (i32.const 655360))
        (i32.const 3604480))
      (then)
      (else
        (call $print_ptr
          (i32.const 65584)
          (i32.const 73))
        (unreachable))))
  (func $trans_state4 (type $t15)
    (block $B0
      (if $I1
        (i32.eq
          (i32.load
            (i32.const 65536))
          (i32.const 3))
        (then
          (br $B0)))
      (if $I2
        (i32.eq
          (i32.load
            (i32.const 65536))
          (i32.const 5))
        (then
          (br $B0)))
      (if $I3
        (i32.eq
          (i32.load
            (i32.const 65536))
          (i32.const 10))
        (then
          (br $B0)))
      (call $print_ptr
        (i32.const 66272)
        (i32.const 46))
      (unreachable))
    (i32.store
      (i32.const 65536)
      (i32.const 4)))
  (func $trans_state3 (type $t15)
    (block $B0
      (if $I1
        (i32.eq
          (i32.load
            (i32.const 65536))
          (i32.const 0))
        (then
          (br $B0)))
      (call $print_ptr
        (i32.const 66320)
        (i32.const 48))
      (unreachable))
    (i32.store
      (i32.const 65536)
      (i32.const 3)))
  (func $_start (export "_start") (type $t15)
    (call $trans_state3)
    (call $start)
    (call $trans_state4))
  (func $rts_start (type $t15)
    (global.set $g0
      (global.get $g8))
    (i32.store
      (i32.const 65536)
      (i32.const 0)))
  (func $__wasm_call_ctors (type $t21)
    (call $__wasm_apply_relocs))
  (func $__wasm_apply_relocs (type $t21)
    (i32.store
      (i32.add
        (i32.const 66384)
        (i32.const 28))
      (i32.add
        (i32.const 66384)
        (i32.const 24)))
    (i32.store
      (i32.add
        (i32.const 66384)
        (i32.const 32))
      (i32.add
        (i32.const 28)
        (i32.const 0))))
  (func $alloc_blob (type $t19) (param $p0 i32) (result i32)
    (local $l1 i32)
    (i32.store
      (i32.add
        (local.tee $l1
          (call $alloc_bytes
            (i32.add
              (local.get $p0)
              (i32.const 8))))
        (i32.const 5))
      (local.get $p0))
    (i32.store
      (i32.add
        (local.get $l1)
        (i32.const 1))
      (i32.const 10))
    (local.get $l1))
  (func $alloc (type $t19) (param $p0 i32) (result i32)
    (local $l1 i32)
    (i32.store
      (i32.add
        (local.tee $l1
          (call $alloc_bytes
            (i32.add
              (local.get $p0)
              (i32.const 8))))
        (i32.const 5))
      (local.get $p0))
    (i32.store
      (i32.add
        (local.get $l1)
        (i32.const 1))
      (i32.const 10))
    (i32.add
      (local.get $l1)
      (i32.const 9)))
  (func $as_memcpy (type $t22) (param $p0 i32) (param $p1 i32) (param $p2 i32)
    (block $B0
      (br_if $B0
        (i32.eqz
          (local.get $p2)))
      (loop $L1
        (i32.store8
          (local.get $p0)
          (i32.load8_u
            (local.get $p1)))
        (local.set $p1
          (i32.add
            (local.get $p1)
            (i32.const 1)))
        (local.set $p0
          (i32.add
            (local.get $p0)
            (i32.const 1)))
        (br_if $L1
          (local.tee $p2
            (i32.add
              (local.get $p2)
              (i32.const -1)))))))
  (func $as_memcmp (type $t18) (param $p0 i32) (param $p1 i32) (param $p2 i32) (result i32)
    (local $l3 i32) (local $l4 i32) (local $l5 i32)
    (local.set $l3
      (i32.const 0))
    (block $B0
      (br_if $B0
        (i32.eqz
          (local.get $p2)))
      (block $B1
        (loop $L2
          (br_if $B1
            (i32.ne
              (local.tee $l4
                (i32.load8_u
                  (local.get $p0)))
              (local.tee $l5
                (i32.load8_u
                  (local.get $p1)))))
          (local.set $p0
            (i32.add
              (local.get $p0)
              (i32.const 1)))
          (local.set $p1
            (i32.add
              (local.get $p1)
              (i32.const 1)))
          (br_if $B0
            (i32.eqz
              (local.tee $p2
                (i32.add
                  (local.get $p2)
                  (i32.const -1)))))
          (br $L2)))
      (local.set $l3
        (i32.sub
          (local.get $l4)
          (local.get $l5))))
    (local.get $l3))
  (func $as_strlen (type $t19) (param $p0 i32) (result i32)
    (local $l1 i32) (local $l2 i32) (local $l3 i32)
    (local.set $l1
      (i32.const 0))
    (loop $L0
      (local.set $l2
        (i32.add
          (local.get $p0)
          (local.get $l1)))
      (local.set $l1
        (local.tee $l3
          (i32.add
            (local.get $l1)
            (i32.const 1))))
      (br_if $L0
        (i32.load8_u
          (local.get $l2))))
    (i32.add
      (local.get $l3)
      (i32.const -1)))
  (func $trap_with_prefix (type $t20) (param $p0 i32) (param $p1 i32)
    (local $l2 i32) (local $l3 i32) (local $l4 i32) (local $l5 i32) (local $l6 i32)
    (drop
      (local.tee $l2
        (global.get $g4)))
    (local.set $l3
      (i32.const -1))
    (loop $L0
      (local.set $l4
        (i32.add
          (local.get $p0)
          (local.get $l3)))
      (local.set $l3
        (local.tee $l5
          (i32.add
            (local.get $l3)
            (i32.const 1))))
      (br_if $L0
        (i32.load8_u
          (i32.add
            (local.get $l4)
            (i32.const 1)))))
    (local.set $l3
      (i32.const 0))
    (loop $L1
      (local.set $l6
        (i32.add
          (local.get $p1)
          (local.get $l3)))
      (local.set $l3
        (local.tee $l4
          (i32.add
            (local.get $l3)
            (i32.const 1))))
      (br_if $L1
        (i32.load8_u
          (local.get $l6))))
    (global.set $g4
      (local.tee $l3
        (i32.sub
          (local.get $l2)
          (i32.and
            (i32.add
              (local.tee $l6
                (i32.add
                  (local.get $l5)
                  (local.get $l4)))
              (i32.const 14))
            (i32.const -16)))))
    (call $as_memcpy
      (local.get $l3)
      (local.get $p0)
      (local.get $l5))
    (call $as_memcpy
      (i32.add
        (local.get $l3)
        (local.get $l5))
      (local.get $p1)
      (i32.add
        (local.get $l4)
        (i32.const -1)))
    (call $rts_trap
      (local.get $l3)
      (i32.add
        (local.get $l6)
        (i32.const -1)))
    (unreachable))
  (func $idl_trap_with (type $t23) (param $p0 i32)
    (call $trap_with_prefix
      (i32.add
        (i32.const 66384)
        (i32.const 0))
      (local.get $p0))
    (unreachable))
  (func $rts_trap_with (type $t23) (param $p0 i32)
    (call $trap_with_prefix
      (i32.add
        (i32.const 66384)
        (i32.const 12))
      (local.get $p0))
    (unreachable))
  (func $get_version (type $t17) (result i32)
    (call $text_of_cstr
      (i32.load
        (i32.add
          (i32.const 66384)
          (i32.const 28)))))
  (func $version (type $t17) (result i32)
    (call_indirect $table (type $t17)
      (i32.load
        (i32.add
          (i32.const 66384)
          (i32.const 32)))))
  (func $leb128_encode (type $t20) (param $p0 i32) (param $p1 i32)
    (local $l2 i32) (local $l3 i32)
    (i32.store8
      (local.get $p1)
      (local.get $p0))
    (block $B0
      (br_if $B0
        (i32.eqz
          (local.tee $l2
            (i32.shr_u
              (local.get $p0)
              (i32.const 7)))))
      (loop $L1
        (i32.store8 offset=1
          (local.get $p1)
          (local.get $l2))
        (i32.store8
          (local.get $p1)
          (i32.or
            (local.get $p0)
            (i32.const 128)))
        (local.set $p1
          (i32.add
            (local.get $p1)
            (i32.const 1)))
        (local.set $p0
          (local.get $l2))
        (local.set $l2
          (local.tee $l3
            (i32.shr_u
              (local.get $l2)
              (i32.const 7))))
        (br_if $L1
          (local.get $l3)))))
  (func $sleb128_encode (type $t20) (param $p0 i32) (param $p1 i32)
    (i32.store8
      (local.get $p1)
      (i32.and
        (local.get $p0)
        (i32.const 127)))
    (block $B0
      (br_if $B0
        (i32.lt_u
          (i32.add
            (local.get $p0)
            (i32.const 64))
          (i32.const 128)))
      (loop $L1
        (i32.store8
          (local.get $p1)
          (i32.or
            (local.get $p0)
            (i32.const 128)))
        (i32.store8 offset=1
          (local.get $p1)
          (i32.and
            (local.tee $p0
              (i32.shr_s
                (local.get $p0)
                (i32.const 7)))
            (i32.const 127)))
        (local.set $p1
          (i32.add
            (local.get $p1)
            (i32.const 1)))
        (br_if $L1
          (i32.ge_u
            (i32.add
              (local.get $p0)
              (i32.const 64))
            (i32.const 128))))))
  (func $read_u32_of_leb128 (type $t19) (param $p0 i32) (result i32)
    (local $l1 i32) (local $l2 i32) (local $l3 i32)
    (local.set $l1
      (i32.const 0))
    (local.set $l2
      (i32.const 0))
    (block $B0
      (block $B1
        (loop $L2
          (local.set $l3
            (call $read_byte
              (local.get $p0)))
          (block $B3
            (br_if $B3
              (i32.eqz
                (local.get $l1)))
            (br_if $B1
              (i32.eqz
                (local.get $l3))))
          (block $B4
            (br_if $B4
              (i32.ne
                (local.get $l1)
                (i32.const 28)))
            (br_if $B0
              (i32.ge_u
                (local.get $l3)
                (i32.const 16))))
          (local.set $l2
            (i32.add
              (i32.shl
                (i32.and
                  (local.get $l3)
                  (i32.const 127))
                (local.get $l1))
              (local.get $l2)))
          (local.set $l1
            (i32.add
              (local.get $l1)
              (i32.const 7)))
          (br_if $L2
            (i32.and
              (local.get $l3)
              (i32.const 128))))
        (return
          (local.get $l2)))
      (call $idl_trap_with
        (i32.add
          (i32.const 66384)
          (i32.const 36)))
      (unreachable))
    (call $idl_trap_with
      (i32.add
        (i32.const 66384)
        (i32.const 58)))
    (unreachable))
  (func $read_i32_of_sleb128 (type $t19) (param $p0 i32) (result i32)
    (local $l1 i32) (local $l2 i32) (local $l3 i32) (local $l4 i32) (local $l5 i32) (local $l6 i32)
    (local.set $l1
      (i32.const 0))
    (local.set $l2
      (i32.const 0))
    (local.set $l3
      (i32.const 0))
    (block $B0
      (block $B1
        (loop $L2
          (local.set $l4
            (call $read_byte
              (local.get $p0)))
          (block $B3
            (br_if $B3
              (i32.eqz
                (local.get $l1)))
            (block $B4
              (br_if $B4
                (i32.ne
                  (local.get $l1)
                  (i32.const 28)))
              (br_if $B4
                (i32.eqz
                  (local.tee $l5
                    (i32.and
                      (local.get $l4)
                      (i32.const 240)))))
              (br_if $B1
                (i32.ne
                  (local.get $l5)
                  (i32.const 112))))
            (br_if $B0
              (i32.eq
                (select
                  (i32.eq
                    (local.get $l4)
                    (i32.const 127))
                  (i32.eqz
                    (local.get $l4))
                  (i32.and
                    (local.get $l3)
                    (i32.const 1)))
                (i32.const 1))))
          (local.set $l3
            (i32.shr_u
              (local.tee $l6
                (i32.and
                  (local.get $l4)
                  (i32.const 64)))
              (i32.const 6)))
          (local.set $l2
            (i32.add
              (i32.shl
                (i32.and
                  (local.get $l4)
                  (i32.const 127))
                (local.get $l1))
              (local.get $l2)))
          (local.set $l1
            (local.tee $l5
              (i32.add
                (local.get $l1)
                (i32.const 7))))
          (br_if $L2
            (i32.and
              (local.get $l4)
              (i32.const 128))))
        (return
          (i32.or
            (select
              (i32.const 0)
              (select
                (i32.shl
                  (i32.const -1)
                  (local.get $l5))
                (i32.const 0)
                (local.get $l6))
              (i32.gt_u
                (local.get $l5)
                (i32.const 31)))
            (local.get $l2))))
      (call $idl_trap_with
        (i32.add
          (i32.const 66384)
          (i32.const 58)))
      (unreachable))
    (call $idl_trap_with
      (i32.add
        (i32.const 66384)
        (i32.const 36)))
    (unreachable))
  (func $parse_idl_header (type $t24) (param $p0 i32) (param $p1 i32) (param $p2 i32) (param $p3 i32)
    (local $l4 i32) (local $l5 i32) (local $l6 i32) (local $l7 i32) (local $l8 i32)
    (block $B0
      (block $B1
        (block $B2
          (block $B3
            (br_if $B3
              (i32.eq
                (i32.load
                  (local.get $p1))
                (i32.load offset=4
                  (local.get $p1))))
            (block $B4
              (br_if $B4
                (i32.ne
                  (call $read_word
                    (local.get $p1))
                  (i32.const 1279543620)))
              (block $B5
                (br_if $B5
                  (i32.le_s
                    (local.tee $l4
                      (call $read_u32_of_leb128
                        (local.get $p1)))
                    (i32.const -1)))
                (block $B6
                  (br_if $B6
                    (i32.ge_u
                      (i32.add
                        (i32.load
                          (local.get $p1))
                        (local.get $l4))
                      (i32.load offset=4
                        (local.get $p1))))
                  (local.set $l5
                    (call $alloc
                      (i32.shl
                        (local.get $l4)
                        (i32.const 2))))
                  (local.set $l6
                    (i32.load
                      (local.get $p1)))
                  (br_if $B0
                    (i32.lt_s
                      (local.get $l4)
                      (i32.const 1)))
                  (local.set $l7
                    (i32.const 0))
                  (loop $L7
                    (i32.store
                      (i32.add
                        (local.get $l5)
                        (i32.shl
                          (local.get $l7)
                          (i32.const 2)))
                      (local.get $l6))
                    (block $B8
                      (block $B9
                        (br_if $B9
                          (i32.ne
                            (local.tee $l6
                              (call $read_i32_of_sleb128
                                (local.get $p1)))
                            (i32.const 1)))
                        (br_if $B9
                          (i32.eqz
                            (local.get $p0)))
                        (block $B10
                          (block $B11
                            (br_if $B11
                              (i32.gt_s
                                (local.tee $l6
                                  (call $read_i32_of_sleb128
                                    (local.get $p1)))
                                (i32.const -1)))
                            (br_if $B8
                              (i32.gt_s
                                (local.get $l6)
                                (i32.const -18)))
                            (br_if $B10
                              (i32.ne
                                (local.get $l6)
                                (i32.const -24)))
                            (br $B8))
                          (br_if $B8
                            (i32.lt_u
                              (local.get $l6)
                              (local.get $l4))))
                        (call $idl_trap_with
                          (i32.add
                            (i32.const 66384)
                            (i32.const 402)))
                        (unreachable))
                      (block $B12
                        (block $B13
                          (block $B14
                            (block $B15
                              (block $B16
                                (br_if $B16
                                  (i32.ge_s
                                    (local.get $l6)
                                    (i32.const 0)))
                                (br_if $B15
                                  (i32.gt_s
                                    (local.get $l6)
                                    (i32.const -18)))
                                (br_if $B15
                                  (i32.eq
                                    (local.get $l6)
                                    (i32.const -24)))
                                (block $B17
                                  (br_if $B17
                                    (i32.gt_u
                                      (local.tee $l6
                                        (i32.add
                                          (local.get $l6)
                                          (i32.const 23)))
                                      (i32.const 5)))
                                  (block $B18
                                    (block $B19
                                      (block $B20
                                        (block $B21
                                          (block $B22
                                            (block $B23
                                              (br_table $B18 $B19 $B20 $B21 $B22 $B23 $B18
                                                (local.get $l6)))
                                            (block $B24
                                              (block $B25
                                                (br_if $B25
                                                  (i32.gt_s
                                                    (local.tee $l6
                                                      (call $read_i32_of_sleb128
                                                        (local.get $p1)))
                                                    (i32.const -1)))
                                                (br_if $B8
                                                  (i32.gt_s
                                                    (local.get $l6)
                                                    (i32.const -18)))
                                                (br_if $B24
                                                  (i32.ne
                                                    (local.get $l6)
                                                    (i32.const -24)))
                                                (br $B8))
                                              (br_if $B8
                                                (i32.lt_u
                                                  (local.get $l6)
                                                  (local.get $l4))))
                                            (call $idl_trap_with
                                              (i32.add
                                                (i32.const 66384)
                                                (i32.const 402)))
                                            (unreachable))
                                          (block $B26
                                            (block $B27
                                              (br_if $B27
                                                (i32.gt_s
                                                  (local.tee $l6
                                                    (call $read_i32_of_sleb128
                                                      (local.get $p1)))
                                                  (i32.const -1)))
                                              (br_if $B8
                                                (i32.gt_s
                                                  (local.get $l6)
                                                  (i32.const -18)))
                                              (br_if $B26
                                                (i32.ne
                                                  (local.get $l6)
                                                  (i32.const -24)))
                                              (br $B8))
                                            (br_if $B8
                                              (i32.lt_u
                                                (local.get $l6)
                                                (local.get $l4))))
                                          (call $idl_trap_with
                                            (i32.add
                                              (i32.const 66384)
                                              (i32.const 402)))
                                          (unreachable))
                                        (br_if $B8
                                          (i32.eqz
                                            (local.tee $l8
                                              (call $read_u32_of_leb128
                                                (local.get $p1)))))
                                        (loop $L28
                                          (drop
                                            (call $read_u32_of_leb128
                                              (local.get $p1)))
                                          (block $B29
                                            (block $B30
                                              (br_if $B30
                                                (i32.gt_s
                                                  (local.tee $l6
                                                    (call $read_i32_of_sleb128
                                                      (local.get $p1)))
                                                  (i32.const -1)))
                                              (br_if $B29
                                                (i32.gt_s
                                                  (local.get $l6)
                                                  (i32.const -18)))
                                              (br_if $B29
                                                (i32.eq
                                                  (local.get $l6)
                                                  (i32.const -24)))
                                              (br $B1))
                                            (br_if $B1
                                              (i32.ge_u
                                                (local.get $l6)
                                                (local.get $l4))))
                                          (br_if $L28
                                            (local.tee $l8
                                              (i32.add
                                                (local.get $l8)
                                                (i32.const -1))))
                                          (br $B8)))
                                      (br_if $B8
                                        (i32.eqz
                                          (local.tee $l8
                                            (call $read_u32_of_leb128
                                              (local.get $p1)))))
                                      (loop $L31
                                        (drop
                                          (call $read_u32_of_leb128
                                            (local.get $p1)))
                                        (block $B32
                                          (block $B33
                                            (br_if $B33
                                              (i32.gt_s
                                                (local.tee $l6
                                                  (call $read_i32_of_sleb128
                                                    (local.get $p1)))
                                                (i32.const -1)))
                                            (br_if $B32
                                              (i32.gt_s
                                                (local.get $l6)
                                                (i32.const -18)))
                                            (br_if $B32
                                              (i32.eq
                                                (local.get $l6)
                                                (i32.const -24)))
                                            (br $B2))
                                          (br_if $B2
                                            (i32.ge_u
                                              (local.get $l6)
                                              (local.get $l4))))
                                        (br_if $L31
                                          (local.tee $l8
                                            (i32.add
                                              (local.get $l8)
                                              (i32.const -1))))
                                        (br $B8)))
                                    (br_if $B12
                                      (i32.eqz
                                        (local.tee $l8
                                          (call $read_u32_of_leb128
                                            (local.get $p1)))))
                                    (loop $L34
                                      (block $B35
                                        (block $B36
                                          (br_if $B36
                                            (i32.gt_s
                                              (local.tee $l6
                                                (call $read_i32_of_sleb128
                                                  (local.get $p1)))
                                              (i32.const -1)))
                                          (br_if $B35
                                            (i32.gt_s
                                              (local.get $l6)
                                              (i32.const -18)))
                                          (br_if $B35
                                            (i32.eq
                                              (local.get $l6)
                                              (i32.const -24)))
                                          (br $B13))
                                        (br_if $B13
                                          (i32.ge_u
                                            (local.get $l6)
                                            (local.get $l4))))
                                      (br_if $B12
                                        (i32.eqz
                                          (local.tee $l8
                                            (i32.add
                                              (local.get $l8)
                                              (i32.const -1)))))
                                      (br $L34)))
                                  (br_if $B8
                                    (i32.eqz
                                      (local.tee $l8
                                        (call $read_u32_of_leb128
                                          (local.get $p1)))))
                                  (loop $L37
                                    (i32.store
                                      (local.get $p1)
                                      (i32.add
                                        (call $read_u32_of_leb128
                                          (local.get $p1))
                                        (i32.load
                                          (local.get $p1))))
                                    (block $B38
                                      (block $B39
                                        (br_if $B39
                                          (i32.gt_s
                                            (local.tee $l6
                                              (call $read_i32_of_sleb128
                                                (local.get $p1)))
                                            (i32.const -1)))
                                        (br_if $B38
                                          (i32.gt_s
                                            (local.get $l6)
                                            (i32.const -18)))
                                        (br_if $B38
                                          (i32.eq
                                            (local.get $l6)
                                            (i32.const -24)))
                                        (br $B14))
                                      (br_if $B14
                                        (i32.ge_u
                                          (local.get $l6)
                                          (local.get $l4))))
                                    (br_if $L37
                                      (local.tee $l8
                                        (i32.add
                                          (local.get $l8)
                                          (i32.const -1))))
                                    (br $B8)))
                                (call $advance
                                  (local.get $p1)
                                  (call $read_u32_of_leb128
                                    (local.get $p1)))
                                (br $B8))
                              (call $idl_trap_with
                                (i32.add
                                  (i32.const 66384)
                                  (i32.const 146)))
                              (unreachable))
                            (call $idl_trap_with
                              (i32.add
                                (i32.const 66384)
                                (i32.const 165)))
                            (unreachable))
                          (call $idl_trap_with
                            (i32.add
                              (i32.const 66384)
                              (i32.const 402)))
                          (unreachable))
                        (call $idl_trap_with
                          (i32.add
                            (i32.const 66384)
                            (i32.const 402)))
                        (unreachable))
                      (block $B40
                        (br_if $B40
                          (i32.eqz
                            (local.tee $l8
                              (call $read_u32_of_leb128
                                (local.get $p1)))))
                        (block $B41
                          (loop $L42
                            (block $B43
                              (block $B44
                                (br_if $B44
                                  (i32.gt_s
                                    (local.tee $l6
                                      (call $read_i32_of_sleb128
                                        (local.get $p1)))
                                    (i32.const -1)))
                                (br_if $B43
                                  (i32.gt_s
                                    (local.get $l6)
                                    (i32.const -18)))
                                (br_if $B43
                                  (i32.eq
                                    (local.get $l6)
                                    (i32.const -24)))
                                (br $B41))
                              (br_if $B41
                                (i32.ge_u
                                  (local.get $l6)
                                  (local.get $l4))))
                            (br_if $B40
                              (i32.eqz
                                (local.tee $l8
                                  (i32.add
                                    (local.get $l8)
                                    (i32.const -1)))))
                            (br $L42)))
                        (call $idl_trap_with
                          (i32.add
                            (i32.const 66384)
                            (i32.const 402)))
                        (unreachable))
                      (br_if $B8
                        (i32.eqz
                          (local.tee $l6
                            (call $read_u32_of_leb128
                              (local.get $p1)))))
                      (i32.store
                        (local.get $p1)
                        (i32.add
                          (i32.load
                            (local.get $p1))
                          (local.get $l6))))
                    (local.set $l6
                      (i32.load
                        (local.get $p1)))
                    (br_if $L7
                      (i32.ne
                        (local.tee $l7
                          (i32.add
                            (local.get $l7)
                            (i32.const 1)))
                        (local.get $l4)))
                    (br $B0)))
                (call $idl_trap_with
                  (i32.add
                    (i32.const 66384)
                    (i32.const 131)))
                (unreachable))
              (call $idl_trap_with
                (i32.add
                  (i32.const 66384)
                  (i32.const 103)))
              (unreachable))
            (call $idl_trap_with
              (i32.add
                (i32.const 66384)
                (i32.const 83)))
            (unreachable))
          (call $idl_trap_with
            (i32.add
              (i32.const 66384)
              (i32.const 71)))
          (unreachable))
        (call $idl_trap_with
          (i32.add
            (i32.const 66384)
            (i32.const 402)))
        (unreachable))
      (call $idl_trap_with
        (i32.add
          (i32.const 66384)
          (i32.const 402)))
      (unreachable))
    (i32.store
      (local.get $p3)
      (local.get $l6))
    (block $B45
      (block $B46
        (br_if $B46
          (i32.eqz
            (local.tee $l7
              (call $read_u32_of_leb128
                (local.get $p1)))))
        (loop $L47
          (block $B48
            (block $B49
              (br_if $B49
                (i32.gt_s
                  (local.tee $l6
                    (call $read_i32_of_sleb128
                      (local.get $p1)))
                  (i32.const -1)))
              (br_if $B48
                (i32.gt_s
                  (local.get $l6)
                  (i32.const -18)))
              (br_if $B48
                (i32.eq
                  (local.get $l6)
                  (i32.const -24)))
              (br $B45))
            (br_if $B45
              (i32.ge_u
                (local.get $l6)
                (local.get $l4))))
          (br_if $L47
            (local.tee $l7
              (i32.add
                (local.get $l7)
                (i32.const -1))))))
      (i32.store
        (local.get $p2)
        (local.get $l5))
      (return))
    (call $idl_trap_with
      (i32.add
        (i32.const 66384)
        (i32.const 402)))
    (unreachable))
  (func $skip_leb128 (type $t23) (param $p0 i32)
    (loop $L0
      (br_if $L0
        (i32.lt_s
          (i32.shr_s
            (i32.shl
              (call $read_byte
                (local.get $p0))
              (i32.const 24))
            (i32.const 24))
          (i32.const 0)))))
  (func $skip_any (type $t24) (param $p0 i32) (param $p1 i32) (param $p2 i32) (param $p3 i32)
    (local $l4 i32) (local $l5 i32) (local $l6 i32)
    (global.set $g4
      (local.tee $l4
        (i32.sub
          (global.get $g4)
          (i32.const 16))))
    (block $B0
      (block $B1
        (block $B2
          (br_if $B2
            (i32.ge_s
              (local.get $p3)
              (i32.const 101)))
          (block $B3
            (block $B4
              (block $B5
                (br_if $B5
                  (i32.gt_s
                    (local.get $p2)
                    (i32.const -1)))
                (block $B6
                  (br_if $B6
                    (i32.gt_u
                      (local.tee $p2
                        (i32.add
                          (local.get $p2)
                          (i32.const 24)))
                      (i32.const 23)))
                  (block $B7
                    (block $B8
                      (block $B9
                        (block $B10
                          (block $B11
                            (block $B12
                              (block $B13
                                (br_table $B7 $B6 $B6 $B6 $B6 $B6 $B6 $B8 $B3 $B9 $B10 $B11 $B10 $B11 $B12 $B4 $B10 $B11 $B12 $B4 $B13 $B13 $B4 $B3 $B7
                                  (local.get $p2)))
                              (loop $L14
                                (br_if $L14
                                  (i32.lt_s
                                    (i32.shr_s
                                      (i32.shl
                                        (call $read_byte
                                          (local.get $p0))
                                        (i32.const 24))
                                      (i32.const 24))
                                    (i32.const 0)))
                                (br $B3)))
                            (call $advance
                              (local.get $p0)
                              (i32.const 2))
                            (br $B3))
                          (call $advance
                            (local.get $p0)
                            (i32.const 4))
                          (br $B3))
                        (call $advance
                          (local.get $p0)
                          (i32.const 8))
                        (br $B3))
                      (call $advance
                        (local.get $p0)
                        (call $read_u32_of_leb128
                          (local.get $p0)))
                      (br $B3))
                    (call $idl_trap_with
                      (i32.add
                        (i32.const 66384)
                        (i32.const 229)))
                    (unreachable))
                  (br_if $B3
                    (i32.eqz
                      (call $read_byte
                        (local.get $p0))))
                  (call $advance
                    (local.get $p0)
                    (call $read_u32_of_leb128
                      (local.get $p0)))
                  (br $B3))
                (call $idl_trap_with
                  (i32.add
                    (i32.const 66384)
                    (i32.const 257)))
                (unreachable))
              (i32.store offset=12
                (local.get $l4)
                (i32.load offset=4
                  (local.get $p0)))
              (i32.store offset=8
                (local.get $l4)
                (i32.load
                  (i32.add
                    (local.get $p1)
                    (i32.shl
                      (local.get $p2)
                      (i32.const 2)))))
              (block $B15
                (block $B16
                  (block $B17
                    (block $B18
                      (br_if $B18
                        (i32.le_u
                          (local.tee $l6
                            (i32.add
                              (local.tee $l5
                                (call $read_i32_of_sleb128
                                  (i32.add
                                    (local.get $l4)
                                    (i32.const 8))))
                              (i32.const 23)))
                          (i32.const 5)))
                      (br_if $B17
                        (i32.eq
                          (local.get $l5)
                          (i32.const 1)))
                      (local.set $p2
                        (call $read_u32_of_leb128
                          (local.get $p0)))
                      (local.set $p1
                        (call $read_u32_of_leb128
                          (local.get $p0)))
                      (call $advance
                        (local.get $p0)
                        (local.get $p2))
                      (br_if $B15
                        (i32.eqz
                          (local.get $p1)))
                      (call $idl_trap_with
                        (i32.add
                          (i32.const 66384)
                          (i32.const 372)))
                      (unreachable))
                    (block $B19
                      (block $B20
                        (block $B21
                          (block $B22
                            (block $B23
                              (block $B24
                                (br_table $B19 $B20 $B21 $B22 $B23 $B24 $B19
                                  (local.get $l6)))
                              (local.set $p2
                                (call $read_i32_of_sleb128
                                  (i32.add
                                    (local.get $l4)
                                    (i32.const 8))))
                              (br_if $B15
                                (i32.eqz
                                  (call $read_byte
                                    (local.get $p0))))
                              (call $skip_any
                                (local.get $p0)
                                (local.get $p1)
                                (local.get $p2)
                                (i32.const 0))
                              (br $B15))
                            (local.set $l6
                              (call $read_i32_of_sleb128
                                (i32.add
                                  (local.get $l4)
                                  (i32.const 8))))
                            (br_if $B15
                              (i32.eqz
                                (local.tee $p2
                                  (call $read_u32_of_leb128
                                    (local.get $p0)))))
                            (loop $L25
                              (call $skip_any
                                (local.get $p0)
                                (local.get $p1)
                                (local.get $l6)
                                (i32.const 0))
                              (br_if $L25
                                (local.tee $p2
                                  (i32.add
                                    (local.get $p2)
                                    (i32.const -1))))
                              (br $B15)))
                          (br_if $B15
                            (i32.eqz
                              (local.tee $l6
                                (call $read_u32_of_leb128
                                  (i32.add
                                    (local.get $l4)
                                    (i32.const 8))))))
                          (local.set $l5
                            (i32.add
                              (local.get $p3)
                              (i32.const 1)))
                          (loop $L26
                            (br_if $L26
                              (i32.lt_s
                                (i32.shr_s
                                  (i32.shl
                                    (call $read_byte
                                      (i32.add
                                        (local.get $l4)
                                        (i32.const 8)))
                                    (i32.const 24))
                                  (i32.const 24))
                                (i32.const 0)))
                            (br_if $B1
                              (i32.eq
                                (local.tee $p3
                                  (call $read_i32_of_sleb128
                                    (i32.add
                                      (local.get $l4)
                                      (i32.const 8))))
                                (local.get $p2)))
                            (call $skip_any
                              (local.get $p0)
                              (local.get $p1)
                              (local.get $p3)
                              (local.get $l5))
                            (br_if $L26
                              (local.tee $l6
                                (i32.add
                                  (local.get $l6)
                                  (i32.const -1))))
                            (br $B15)))
                        (local.set $l6
                          (call $read_u32_of_leb128
                            (i32.add
                              (local.get $l4)
                              (i32.const 8))))
                        (br_if $B0
                          (i32.ge_u
                            (local.tee $p2
                              (call $read_u32_of_leb128
                                (local.get $p0)))
                            (local.get $l6)))
                        (loop $L27
                          (br_if $L27
                            (i32.lt_s
                              (i32.shr_s
                                (i32.shl
                                  (call $read_byte
                                    (i32.add
                                      (local.get $l4)
                                      (i32.const 8)))
                                  (i32.const 24))
                                (i32.const 24))
                              (i32.const 0)))
                          (br_if $B16
                            (i32.eqz
                              (local.get $p2)))
                          (loop $L28
                            (br_if $L28
                              (i32.lt_s
                                (i32.shr_s
                                  (i32.shl
                                    (call $read_byte
                                      (i32.add
                                        (local.get $l4)
                                        (i32.const 8)))
                                    (i32.const 24))
                                  (i32.const 24))
                                (i32.const 0))))
                          (local.set $p2
                            (i32.add
                              (local.get $p2)
                              (i32.const -1)))
                          (br $L27)))
                      (call $idl_trap_with
                        (i32.add
                          (i32.const 66384)
                          (i32.const 339)))
                      (unreachable))
                    (call $idl_trap_with
                      (i32.add
                        (i32.const 66384)
                        (i32.const 354)))
                    (unreachable))
                  (local.set $p2
                    (call $read_i32_of_sleb128
                      (i32.add
                        (local.get $l4)
                        (i32.const 8))))
                  (block $B29
                    (br_if $B29
                      (call $read_byte
                        (local.get $p0)))
                    (call $advance
                      (local.get $p0)
                      (i32.const 8))
                    (call $skip_any
                      (local.get $p0)
                      (local.get $p1)
                      (local.get $p2)
                      (i32.const 0))
                    (br $B15))
                  (call $advance
                    (local.get $p0)
                    (i32.const 4))
                  (br $B15))
                (call $skip_any
                  (local.get $p0)
                  (local.get $p1)
                  (call $read_i32_of_sleb128
                    (i32.add
                      (local.get $l4)
                      (i32.const 8)))
                  (i32.const 0)))
              (global.set $g4
                (i32.add
                  (local.get $l4)
                  (i32.const 16)))
              (return))
            (call $advance
              (local.get $p0)
              (i32.const 1)))
          (global.set $g4
            (i32.add
              (local.get $l4)
              (i32.const 16)))
          (return))
        (call $idl_trap_with
          (i32.add
            (i32.const 66384)
            (i32.const 194)))
        (unreachable))
      (call $idl_trap_with
        (i32.add
          (i32.const 66384)
          (i32.const 280)))
      (unreachable))
    (call $idl_trap_with
      (i32.add
        (i32.const 66384)
        (i32.const 307)))
    (unreachable))
  (func $find_field (type $t25) (param $p0 i32) (param $p1 i32) (param $p2 i32) (param $p3 i32) (param $p4 i32) (result i32)
    (local $l5 i32) (local $l6 i32)
    (local.set $l5
      (i32.const 0))
    (block $B0
      (br_if $B0
        (i32.eqz
          (i32.load
            (local.get $p4))))
      (loop $L1
        (local.set $l5
          (i32.load
            (local.get $p0)))
        (block $B2
          (br_if $B2
            (i32.lt_u
              (local.tee $l6
                (call $read_u32_of_leb128
                  (local.get $p0)))
              (local.get $p3)))
          (block $B3
            (br_if $B3
              (i32.ne
                (local.get $l6)
                (local.get $p3)))
            (i32.store
              (local.get $p4)
              (i32.add
                (i32.load
                  (local.get $p4))
                (i32.const -1)))
            (return
              (i32.const 1)))
          (i32.store
            (local.get $p0)
            (local.get $l5))
          (return
            (i32.const 0)))
        (local.set $l5
          (i32.const 0))
        (call $skip_any
          (local.get $p1)
          (local.get $p2)
          (call $read_i32_of_sleb128
            (local.get $p0))
          (i32.const 0))
        (i32.store
          (local.get $p4)
          (local.tee $l6
            (i32.add
              (i32.load
                (local.get $p4))
              (i32.const -1))))
        (br_if $L1
          (local.get $l6))))
    (local.get $l5))
  (func $skip_fields (type $t24) (param $p0 i32) (param $p1 i32) (param $p2 i32) (param $p3 i32)
    (local $l4 i32)
    (block $B0
      (br_if $B0
        (i32.eqz
          (i32.load8_u
            (local.get $p3))))
      (loop $L1
        (br_if $L1
          (i32.lt_s
            (i32.shr_s
              (i32.shl
                (call $read_byte
                  (local.get $p0))
                (i32.const 24))
              (i32.const 24))
            (i32.const 0)))
        (call $skip_any
          (local.get $p1)
          (local.get $p2)
          (call $read_i32_of_sleb128
            (local.get $p0))
          (i32.const 0))
        (i32.store8
          (local.get $p3)
          (local.tee $l4
            (i32.add
              (i32.load8_u
                (local.get $p3))
              (i32.const -1))))
        (br_if $L1
          (i32.and
            (local.get $l4)
            (i32.const 255))))))
  (func $mp_calloc (type $t26) (param $p0 i32) (param $p1 i32) (result i32)
    (local $l2 i32)
    (local.set $l2
      (call $alloc
        (local.tee $p0
          (i32.mul
            (local.get $p1)
            (local.get $p0)))))
    (block $B0
      (br_if $B0
        (i32.eqz
          (local.get $p0)))
      (local.set $p1
        (local.get $l2))
      (loop $L1
        (i32.store8
          (local.get $p1)
          (i32.const 0))
        (local.set $p1
          (i32.add
            (local.get $p1)
            (i32.const 1)))
        (br_if $L1
          (local.tee $p0
            (i32.add
              (local.get $p0)
              (i32.const -1))))))
    (local.get $l2))
  (func $mp_realloc (type $t18) (param $p0 i32) (param $p1 i32) (param $p2 i32) (result i32)
    (local $l3 i32) (local $l4 i32)
    (block $B0
      (br_if $B0
        (i32.ne
          (i32.load
            (i32.add
              (local.get $p0)
              (i32.const -8)))
          (i32.const 10)))
      (block $B1
        (br_if $B1
          (i32.ge_u
            (local.tee $l4
              (i32.load
                (local.tee $l3
                  (i32.add
                    (i32.add
                      (local.get $p0)
                      (i32.const -9))
                    (i32.const 5)))))
            (local.get $p2)))
        (local.set $p2
          (call $alloc
            (local.get $p2)))
        (br_if $B0
          (i32.ne
            (i32.load
              (local.get $l3))
            (local.get $p1)))
        (call $as_memcpy
          (local.get $p2)
          (local.get $p0)
          (local.get $p1))
        (return
          (local.get $p2)))
      (br_if $B0
        (i32.ne
          (local.get $l4)
          (local.get $p2)))
      (return
        (local.get $p0)))
    (call $bigint_trap)
    (unreachable))
  (func $mp_free (type $t20) (param $p0 i32) (param $p1 i32))
  (func $bigint_alloc (type $t17) (result i32)
    (local $l0 i32)
    (i32.store
      (i32.add
        (local.tee $l0
          (call $alloc_bytes
            (i32.const 20)))
        (i32.const 1))
      (i32.const 13))
    (block $B0
      (br_if $B0
        (i32.eqz
          (call $mp_init
            (i32.add
              (local.get $l0)
              (i32.const 5)))))
      (call $bigint_trap)
      (unreachable))
    (local.get $l0))
  (func $bigint_of_word32 (type $t19) (param $p0 i32) (result i32)
    (local $l1 i32)
    (call $mp_set_u32
      (i32.add
        (local.tee $l1
          (call $bigint_alloc))
        (i32.const 5))
      (local.get $p0))
    (local.get $l1))
  (func $bigint_of_word32_signed (type $t19) (param $p0 i32) (result i32)
    (local $l1 i32)
    (call $mp_set_i32
      (i32.add
        (local.tee $l1
          (call $bigint_alloc))
        (i32.const 5))
      (local.get $p0))
    (local.get $l1))
  (func $bigint_to_word32_wrap (type $t19) (param $p0 i32) (result i32)
    (call $mp_get_i32
      (i32.add
        (local.get $p0)
        (i32.const 5))))
  (func $bigint_to_word32_trap (type $t19) (param $p0 i32) (result i32)
    (block $B0
      (br_if $B0
        (i32.load
          (i32.add
            (local.get $p0)
            (i32.const 13))))
      (br_if $B0
        (i32.ge_s
          (call $mp_count_bits
            (local.tee $p0
              (i32.add
                (local.get $p0)
                (i32.const 5))))
          (i32.const 33)))
      (return
        (call $mp_get_i32
          (local.get $p0))))
    (call $bigint_trap)
    (unreachable))
  (func $bigint_to_word32_trap_with (type $t26) (param $p0 i32) (param $p1 i32) (result i32)
    (block $B0
      (block $B1
        (br_if $B1
          (i32.load
            (i32.add
              (local.get $p0)
              (i32.const 13))))
        (br_if $B0
          (i32.lt_s
            (call $mp_count_bits
              (local.tee $p0
                (i32.add
                  (local.get $p0)
                  (i32.const 5))))
            (i32.const 33))))
      (call $rts_trap
        (i32.add
          (local.get $p1)
          (i32.const 9))
        (i32.load
          (i32.add
            (local.get $p1)
            (i32.const 5))))
      (unreachable))
    (call $mp_get_i32
      (local.get $p0)))
  (func $bigint_to_word32_signed_trap (type $t19) (param $p0 i32) (result i32)
    (local $l1 i32) (local $l2 i32)
    (block $B0
      (br_if $B0
        (i32.ge_s
          (call $mp_count_bits
            (local.tee $l1
              (i32.add
                (local.get $p0)
                (i32.const 5))))
          (i32.const 33)))
      (local.set $l2
        (i32.load offset=12
          (i32.add
            (local.get $p0)
            (i32.const 1))))
      (local.set $p0
        (call $mp_get_mag_u32
          (local.get $l1)))
      (block $B1
        (br_if $B1
          (i32.eqz
            (local.get $l2)))
        (br_if $B0
          (i32.le_s
            (local.get $p0)
            (i32.const 0)))
        (return
          (i32.sub
            (i32.const 0)
            (local.get $p0))))
      (br_if $B0
        (i32.le_s
          (local.get $p0)
          (i32.const -1)))
      (return
        (local.get $p0)))
    (call $bigint_trap)
    (unreachable))
  (func $bigint_to_word64_wrap (type $t27) (param $p0 i32) (result i64)
    (call $mp_get_i64
      (i32.add
        (local.get $p0)
        (i32.const 5))))
  (func $bigint_to_word64_trap (type $t27) (param $p0 i32) (result i64)
    (block $B0
      (br_if $B0
        (i32.load
          (i32.add
            (local.get $p0)
            (i32.const 13))))
      (br_if $B0
        (i32.ge_s
          (call $mp_count_bits
            (local.tee $p0
              (i32.add
                (local.get $p0)
                (i32.const 5))))
          (i32.const 65)))
      (return
        (call $mp_get_i64
          (local.get $p0))))
    (call $bigint_trap)
    (unreachable))
  (func $bigint_to_word64_signed_trap (type $t27) (param $p0 i32) (result i64)
    (local $l1 i32) (local $l2 i64)
    (block $B0
      (br_if $B0
        (i32.ge_s
          (call $mp_count_bits
            (local.tee $l1
              (i32.add
                (local.get $p0)
                (i32.const 5))))
          (i32.const 65)))
      (local.set $p0
        (i32.load offset=12
          (i32.add
            (local.get $p0)
            (i32.const 1))))
      (local.set $l2
        (call $mp_get_mag_u64
          (local.get $l1)))
      (block $B1
        (br_if $B1
          (i32.eqz
            (local.get $p0)))
        (br_if $B0
          (i64.le_s
            (local.get $l2)
            (i64.const 0)))
        (return
          (i64.sub
            (i64.const 0)
            (local.get $l2))))
      (br_if $B0
        (i64.le_s
          (local.get $l2)
          (i64.const -1)))
      (return
        (local.get $l2)))
    (call $bigint_trap)
    (unreachable))
  (func $bigint_of_word64 (type $t28) (param $p0 i64) (result i32)
    (local $l1 i32)
    (call $mp_set_u64
      (i32.add
        (local.tee $l1
          (call $bigint_alloc))
        (i32.const 5))
      (local.get $p0))
    (local.get $l1))
  (func $bigint_of_word64_signed (type $t28) (param $p0 i64) (result i32)
    (local $l1 i32)
    (call $mp_set_i64
      (i32.add
        (local.tee $l1
          (call $bigint_alloc))
        (i32.const 5))
      (local.get $p0))
    (local.get $l1))
  (func $bigint_eq (type $t26) (param $p0 i32) (param $p1 i32) (result i32)
    (i32.eqz
      (call $mp_cmp
        (i32.add
          (local.get $p0)
          (i32.const 5))
        (i32.add
          (local.get $p1)
          (i32.const 5)))))
  (func $bigint_ne (type $t26) (param $p0 i32) (param $p1 i32) (result i32)
    (i32.ne
      (call $mp_cmp
        (i32.add
          (local.get $p0)
          (i32.const 5))
        (i32.add
          (local.get $p1)
          (i32.const 5)))
      (i32.const 0)))
  (func $bigint_lt (type $t26) (param $p0 i32) (param $p1 i32) (result i32)
    (i32.shr_u
      (call $mp_cmp
        (i32.add
          (local.get $p0)
          (i32.const 5))
        (i32.add
          (local.get $p1)
          (i32.const 5)))
      (i32.const 31)))
  (func $bigint_gt (type $t26) (param $p0 i32) (param $p1 i32) (result i32)
    (i32.gt_s
      (call $mp_cmp
        (i32.add
          (local.get $p0)
          (i32.const 5))
        (i32.add
          (local.get $p1)
          (i32.const 5)))
      (i32.const 0)))
  (func $bigint_le (type $t26) (param $p0 i32) (param $p1 i32) (result i32)
    (i32.lt_s
      (call $mp_cmp
        (i32.add
          (local.get $p0)
          (i32.const 5))
        (i32.add
          (local.get $p1)
          (i32.const 5)))
      (i32.const 1)))
  (func $bigint_ge (type $t26) (param $p0 i32) (param $p1 i32) (result i32)
    (i32.shr_u
      (i32.xor
        (call $mp_cmp
          (i32.add
            (local.get $p0)
            (i32.const 5))
          (i32.add
            (local.get $p1)
            (i32.const 5)))
        (i32.const -1))
      (i32.const 31)))
  (func $bigint_add (type $t26) (param $p0 i32) (param $p1 i32) (result i32)
    (block $B0
      (br_if $B0
        (i32.eqz
          (call $mp_add
            (i32.add
              (local.get $p0)
              (i32.const 5))
            (i32.add
              (local.get $p1)
              (i32.const 5))
            (i32.add
              (local.tee $p0
                (call $bigint_alloc))
              (i32.const 5)))))
      (call $bigint_trap)
      (unreachable))
    (local.get $p0))
  (func $bigint_sub (type $t26) (param $p0 i32) (param $p1 i32) (result i32)
    (block $B0
      (br_if $B0
        (i32.eqz
          (call $mp_sub
            (i32.add
              (local.get $p0)
              (i32.const 5))
            (i32.add
              (local.get $p1)
              (i32.const 5))
            (i32.add
              (local.tee $p0
                (call $bigint_alloc))
              (i32.const 5)))))
      (call $bigint_trap)
      (unreachable))
    (local.get $p0))
  (func $bigint_mul (type $t26) (param $p0 i32) (param $p1 i32) (result i32)
    (block $B0
      (br_if $B0
        (i32.eqz
          (call $mp_mul
            (i32.add
              (local.get $p0)
              (i32.const 5))
            (i32.add
              (local.get $p1)
              (i32.const 5))
            (i32.add
              (local.tee $p0
                (call $bigint_alloc))
              (i32.const 5)))))
      (call $bigint_trap)
      (unreachable))
    (local.get $p0))
  (func $bigint_pow (type $t26) (param $p0 i32) (param $p1 i32) (result i32)
    (block $B0
      (br_if $B0
        (i32.eqz
          (call $mp_expt_u32
            (i32.add
              (local.get $p0)
              (i32.const 5))
            (call $bigint_to_word32_trap
              (local.get $p1))
            (i32.add
              (local.tee $p1
                (call $bigint_alloc))
              (i32.const 5)))))
      (call $bigint_trap)
      (unreachable))
    (local.get $p1))
  (func $bigint_div (type $t26) (param $p0 i32) (param $p1 i32) (result i32)
    (local $l2 i32) (local $l3 i32)
    (global.set $g4
      (local.tee $l2
        (i32.sub
          (global.get $g4)
          (i32.const 16))))
    (local.set $l3
      (call $bigint_alloc))
    (block $B0
      (br_if $B0
        (call $mp_init
          (local.get $l2)))
      (br_if $B0
        (call $mp_div
          (i32.add
            (local.get $p0)
            (i32.const 5))
          (i32.add
            (local.get $p1)
            (i32.const 5))
          (i32.add
            (local.get $l3)
            (i32.const 5))
          (local.get $l2)))
      (global.set $g4
        (i32.add
          (local.get $l2)
          (i32.const 16)))
      (return
        (local.get $l3)))
    (call $bigint_trap)
    (unreachable))
  (func $bigint_rem (type $t26) (param $p0 i32) (param $p1 i32) (result i32)
    (local $l2 i32) (local $l3 i32)
    (global.set $g4
      (local.tee $l2
        (i32.sub
          (global.get $g4)
          (i32.const 16))))
    (local.set $l3
      (call $bigint_alloc))
    (block $B0
      (br_if $B0
        (call $mp_init
          (local.get $l2)))
      (br_if $B0
        (call $mp_div
          (i32.add
            (local.get $p0)
            (i32.const 5))
          (i32.add
            (local.get $p1)
            (i32.const 5))
          (local.get $l2)
          (i32.add
            (local.get $l3)
            (i32.const 5))))
      (global.set $g4
        (i32.add
          (local.get $l2)
          (i32.const 16)))
      (return
        (local.get $l3)))
    (call $bigint_trap)
    (unreachable))
  (func $bigint_neg (type $t19) (param $p0 i32) (result i32)
    (block $B0
      (br_if $B0
        (i32.eqz
          (call $mp_neg
            (i32.add
              (local.get $p0)
              (i32.const 5))
            (i32.add
              (local.tee $p0
                (call $bigint_alloc))
              (i32.const 5)))))
      (call $bigint_trap)
      (unreachable))
    (local.get $p0))
  (func $bigint_abs (type $t19) (param $p0 i32) (result i32)
    (block $B0
      (br_if $B0
        (i32.eqz
          (call $mp_abs
            (i32.add
              (local.get $p0)
              (i32.const 5))
            (i32.add
              (local.tee $p0
                (call $bigint_alloc))
              (i32.const 5)))))
      (call $bigint_trap)
      (unreachable))
    (local.get $p0))
  (func $bigint_isneg (type $t19) (param $p0 i32) (result i32)
    (i32.ne
      (i32.load
        (i32.add
          (local.get $p0)
          (i32.const 13)))
      (i32.const 0)))
  (func $bigint_lsh (type $t26) (param $p0 i32) (param $p1 i32) (result i32)
    (block $B0
      (br_if $B0
        (i32.eqz
          (call $mp_mul_2d
            (i32.add
              (local.get $p0)
              (i32.const 5))
            (local.get $p1)
            (i32.add
              (local.tee $p0
                (call $bigint_alloc))
              (i32.const 5)))))
      (call $bigint_trap)
      (unreachable))
    (local.get $p0))
  (func $bigint_count_bits (type $t19) (param $p0 i32) (result i32)
    (call $mp_count_bits
      (i32.add
        (local.get $p0)
        (i32.const 5))))
  (func $bigint_leb128_size (type $t19) (param $p0 i32) (result i32)
    (block $B0
      (br_if $B0
        (i32.load
          (local.tee $p0
            (i32.add
              (local.get $p0)
              (i32.const 5)))))
      (return
        (i32.const 1)))
    (i32.div_s
      (i32.add
        (call $mp_count_bits
          (local.get $p0))
        (i32.const 6))
      (i32.const 7)))
  (func $bigint_leb128_encode_go (type $t22) (param $p0 i32) (param $p1 i32) (param $p2 i32)
    (local $l3 i32)
    (block $B0
      (block $B1
        (br_if $B1
          (i32.load offset=8
            (local.get $p0)))
        (i32.store8
          (local.get $p1)
          (call $mp_get_i32
            (local.get $p0)))
        (br_if $B1
          (call $mp_div_2d
            (local.get $p0)
            (i32.const 7)
            (local.get $p0)
            (i32.const 0)))
        (loop $L2
          (block $B3
            (block $B4
              (br_if $B4
                (i32.eqz
                  (i32.load
                    (local.get $p0))))
              (local.set $l3
                (i32.load8_u
                  (local.get $p1)))
              (br $B3))
            (br_if $B0
              (i32.eqz
                (local.get $p2)))
            (br_if $B0
              (i32.eqz
                (i32.and
                  (local.tee $l3
                    (i32.load8_u
                      (local.get $p1)))
                  (i32.const 64)))))
          (i32.store8
            (local.get $p1)
            (i32.or
              (local.get $l3)
              (i32.const 128)))
          (i32.store8 offset=1
            (local.get $p1)
            (call $mp_get_i32
              (local.get $p0)))
          (local.set $p1
            (i32.add
              (local.get $p1)
              (i32.const 1)))
          (br_if $L2
            (i32.eqz
              (call $mp_div_2d
                (local.get $p0)
                (i32.const 7)
                (local.get $p0)
                (i32.const 0))))))
      (call $bigint_trap)
      (unreachable)))
  (func $bigint_leb128_encode (type $t20) (param $p0 i32) (param $p1 i32)
    (local $l2 i32)
    (global.set $g4
      (local.tee $l2
        (i32.sub
          (global.get $g4)
          (i32.const 16))))
    (block $B0
      (br_if $B0
        (i32.eqz
          (call $mp_init_copy
            (local.get $l2)
            (i32.add
              (local.get $p0)
              (i32.const 5)))))
      (call $bigint_trap)
      (unreachable))
    (call $bigint_leb128_encode_go
      (local.get $l2)
      (local.get $p1)
      (i32.const 0))
    (global.set $g4
      (i32.add
        (local.get $l2)
        (i32.const 16))))
  (func $bigint_2complement_bits (type $t19) (param $p0 i32) (result i32)
    (local $l1 i32) (local $l2 i32)
    (global.set $g4
      (local.tee $l1
        (i32.sub
          (global.get $g4)
          (i32.const 16))))
    (local.set $l2
      (i32.add
        (local.get $p0)
        (i32.const 5)))
    (block $B0
      (block $B1
        (block $B2
          (br_if $B2
            (i32.eqz
              (i32.load
                (i32.add
                  (local.get $p0)
                  (i32.const 13)))))
          (br_if $B0
            (call $mp_init_copy
              (local.get $l1)
              (local.get $l2)))
          (br_if $B0
            (call $mp_incr
              (local.get $l1)))
          (local.set $p0
            (call $mp_count_bits
              (local.get $l1)))
          (br $B1))
        (local.set $p0
          (call $mp_count_bits
            (local.get $l2))))
      (global.set $g4
        (i32.add
          (local.get $l1)
          (i32.const 16)))
      (return
        (i32.add
          (local.get $p0)
          (i32.const 1))))
    (call $bigint_trap)
    (unreachable))
  (func $bigint_sleb128_size (type $t19) (param $p0 i32) (result i32)
    (i32.div_s
      (i32.add
        (call $bigint_2complement_bits
          (local.get $p0))
        (i32.const 6))
      (i32.const 7)))
  (func $bigint_sleb128_encode (type $t20) (param $p0 i32) (param $p1 i32)
    (local $l2 i32)
    (global.set $g4
      (local.tee $l2
        (i32.sub
          (global.get $g4)
          (i32.const 32))))
    (block $B0
      (br_if $B0
        (call $mp_init_copy
          (i32.add
            (local.get $l2)
            (i32.const 16))
          (i32.add
            (local.get $p0)
            (i32.const 5))))
      (block $B1
        (block $B2
          (br_if $B2
            (i32.eqz
              (i32.load offset=24
                (local.get $l2))))
          (local.set $p0
            (call $bigint_2complement_bits
              (local.get $p0)))
          (br_if $B0
            (call $mp_init
              (local.get $l2)))
          (br_if $B0
            (call $mp_2expt
              (local.get $l2)
              (i32.sub
                (local.tee $p0
                  (i32.add
                    (local.get $p0)
                    (i32.const 6)))
                (i32.rem_s
                  (local.get $p0)
                  (i32.const 7)))))
          (br_if $B0
            (call $mp_add
              (i32.add
                (local.get $l2)
                (i32.const 16))
              (local.get $l2)
              (i32.add
                (local.get $l2)
                (i32.const 16))))
          (call $bigint_leb128_encode_go
            (i32.add
              (local.get $l2)
              (i32.const 16))
            (local.get $p1)
            (i32.const 0))
          (br $B1))
        (call $bigint_leb128_encode_go
          (i32.add
            (local.get $l2)
            (i32.const 16))
          (local.get $p1)
          (i32.const 1)))
      (global.set $g4
        (i32.add
          (local.get $l2)
          (i32.const 32)))
      (return))
    (call $bigint_trap)
    (unreachable))
  (func $bigint_leb128_decode (type $t19) (param $p0 i32) (result i32)
    (local $l1 i32) (local $l2 i32) (local $l3 i32) (local $l4 i32) (local $l5 i32)
    (global.set $g4
      (local.tee $l1
        (i32.sub
          (global.get $g4)
          (i32.const 16))))
    (call $mp_zero
      (local.tee $l3
        (i32.add
          (local.tee $l2
            (call $bigint_alloc))
          (i32.const 5))))
    (block $B0
      (br_if $B0
        (call $mp_init
          (local.get $l1)))
      (local.set $l4
        (i32.const 0))
      (block $B1
        (block $B2
          (loop $L3
            (local.set $l5
              (call $read_byte
                (local.get $p0)))
            (block $B4
              (br_if $B4
                (i32.eqz
                  (local.get $l4)))
              (br_if $B2
                (i32.eqz
                  (local.get $l5))))
            (br_if $B1
              (i32.ge_u
                (local.get $l4)
                (i32.const -7)))
            (call $mp_set_u32
              (local.get $l1)
              (i32.and
                (local.get $l5)
                (i32.const 127)))
            (br_if $B0
              (call $mp_mul_2d
                (local.get $l1)
                (local.get $l4)
                (local.get $l1)))
            (br_if $B0
              (call $mp_add
                (local.get $l3)
                (local.get $l1)
                (local.get $l3)))
            (local.set $l4
              (i32.add
                (local.get $l4)
                (i32.const 7)))
            (br_if $L3
              (i32.and
                (local.get $l5)
                (i32.const 128))))
          (global.set $g4
            (i32.add
              (local.get $l1)
              (i32.const 16)))
          (return
            (local.get $l2)))
        (call $idl_trap_with
          (i32.add
            (i32.const 66384)
            (i32.const 424)))
        (unreachable))
      (call $idl_trap_with
        (i32.add
          (i32.const 66384)
          (i32.const 446)))
      (unreachable))
    (call $bigint_trap)
    (unreachable))
  (func $bigint_sleb128_decode (type $t19) (param $p0 i32) (result i32)
    (local $l1 i32) (local $l2 i32) (local $l3 i32) (local $l4 i32) (local $l5 i32) (local $l6 i32) (local $l7 i32) (local $l8 i32)
    (global.set $g4
      (local.tee $l1
        (i32.sub
          (global.get $g4)
          (i32.const 32))))
    (call $mp_zero
      (local.tee $l3
        (i32.add
          (local.tee $l2
            (call $bigint_alloc))
          (i32.const 5))))
    (block $B0
      (br_if $B0
        (call $mp_init
          (i32.add
            (local.get $l1)
            (i32.const 16))))
      (local.set $l4
        (i32.const 0))
      (local.set $l5
        (i32.const 0))
      (block $B1
        (block $B2
          (loop $L3
            (local.set $l6
              (call $read_byte
                (local.get $p0)))
            (local.set $l7
              (i32.const 7))
            (block $B4
              (br_if $B4
                (i32.eqz
                  (local.get $l4)))
              (br_if $B2
                (i32.eq
                  (select
                    (i32.eq
                      (local.get $l6)
                      (i32.const 127))
                    (i32.eqz
                      (local.get $l6))
                    (i32.and
                      (local.get $l5)
                      (i32.const 1)))
                  (i32.const 1)))
              (br_if $B1
                (i32.ge_u
                  (local.get $l4)
                  (i32.const -7)))
              (local.set $l7
                (i32.add
                  (local.get $l4)
                  (i32.const 7))))
            (call $mp_set_u32
              (i32.add
                (local.get $l1)
                (i32.const 16))
              (i32.and
                (local.get $l6)
                (i32.const 127)))
            (br_if $B0
              (call $mp_mul_2d
                (i32.add
                  (local.get $l1)
                  (i32.const 16))
                (local.get $l4)
                (i32.add
                  (local.get $l1)
                  (i32.const 16))))
            (br_if $B0
              (call $mp_add
                (local.get $l3)
                (i32.add
                  (local.get $l1)
                  (i32.const 16))
                (local.get $l3)))
            (local.set $l5
              (i32.shr_u
                (local.tee $l8
                  (i32.and
                    (local.get $l6)
                    (i32.const 64)))
                (i32.const 6)))
            (local.set $l4
              (local.get $l7))
            (br_if $L3
              (i32.and
                (local.get $l6)
                (i32.const 128))))
          (block $B5
            (br_if $B5
              (i32.eqz
                (local.get $l8)))
            (br_if $B0
              (call $mp_init
                (local.get $l1)))
            (br_if $B0
              (call $mp_2expt
                (local.get $l1)
                (local.get $l7)))
            (br_if $B0
              (call $mp_sub
                (local.get $l3)
                (local.get $l1)
                (local.get $l3))))
          (global.set $g4
            (i32.add
              (local.get $l1)
              (i32.const 32)))
          (return
            (local.get $l2)))
        (call $idl_trap_with
          (i32.add
            (i32.const 66384)
            (i32.const 424)))
        (unreachable))
      (call $idl_trap_with
        (i32.add
          (i32.const 66384)
          (i32.const 446)))
      (unreachable))
    (call $bigint_trap)
    (unreachable))
  (func $float_fmt (type $t29) (param $p0 f64) (result i32)
    (local $l1 i32) (local $l2 i32)
    (global.set $g4
      (local.tee $l1
        (i32.sub
          (global.get $g4)
          (i32.const 80))))
    (f64.store
      (local.get $l1)
      (local.get $p0))
    (local.set $l2
      (call $text_of_ptr_size
        (i32.add
          (local.get $l1)
          (i32.const 16))
        (call $snprintf
          (i32.add
            (local.get $l1)
            (i32.const 16))
          (i32.const 50)
          (i32.add
            (i32.const 66384)
            (i32.const 468))
          (local.get $l1))))
    (global.set $g4
      (i32.add
        (local.get $l1)
        (i32.const 80)))
    (local.get $l2))
  (func $float_pow (type $t30) (param $p0 f64) (param $p1 f64) (result f64)
    (call $pow
      (local.get $p0)
      (local.get $p1)))
  (func $float_sin (type $t31) (param $p0 f64) (result f64)
    (call $sin
      (local.get $p0)))
  (func $float_cos (type $t31) (param $p0 f64) (result f64)
    (call $cos
      (local.get $p0)))
  (func $float_tan (type $t31) (param $p0 f64) (result f64)
    (call $tan
      (local.get $p0)))
  (func $float_arcsin (type $t31) (param $p0 f64) (result f64)
    (call $asin
      (local.get $p0)))
  (func $float_arccos (type $t31) (param $p0 f64) (result f64)
    (call $acos
      (local.get $p0)))
  (func $float_arctan (type $t31) (param $p0 f64) (result f64)
    (call $atan
      (local.get $p0)))
  (func $float_arctan2 (type $t30) (param $p0 f64) (param $p1 f64) (result f64)
    (call $atan2
      (local.get $p0)
      (local.get $p1)))
  (func $float_exp (type $t31) (param $p0 f64) (result f64)
    (call $exp
      (local.get $p0)))
  (func $float_log (type $t31) (param $p0 f64) (result f64)
    (call $log
      (local.get $p0)))
  (func $read_byte (type $t19) (param $p0 i32) (result i32)
    (local $l1 i32)
    (block $B0
      (br_if $B0
        (i32.lt_u
          (local.tee $l1
            (i32.load
              (local.get $p0)))
          (i32.load offset=4
            (local.get $p0))))
      (call $idl_trap_with
        (i32.add
          (i32.const 66384)
          (i32.const 471)))
      (unreachable))
    (i32.store
      (local.get $p0)
      (i32.add
        (local.get $l1)
        (i32.const 1)))
    (i32.load8_u
      (local.get $l1)))
  (func $read_word (type $t19) (param $p0 i32) (result i32)
    (local $l1 i32) (local $l2 i32)
    (block $B0
      (br_if $B0
        (i32.le_u
          (local.tee $l2
            (i32.add
              (local.tee $l1
                (i32.load
                  (local.get $p0)))
              (i32.const 4)))
          (i32.load offset=4
            (local.get $p0))))
      (call $idl_trap_with
        (i32.add
          (i32.const 66384)
          (i32.const 495)))
      (unreachable))
    (i32.store
      (local.get $p0)
      (local.get $l2))
    (i32.load
      (local.get $l1)))
  (func $advance (type $t20) (param $p0 i32) (param $p1 i32)
    (local $l2 i32)
    (block $B0
      (br_if $B0
        (i32.ge_u
          (i32.sub
            (i32.load offset=4
              (local.get $p0))
            (local.tee $l2
              (i32.load
                (local.get $p0))))
          (local.get $p1)))
      (call $idl_trap_with
        (i32.add
          (i32.const 66384)
          (i32.const 519)))
      (unreachable))
    (i32.store
      (local.get $p0)
      (i32.add
        (local.get $l2)
        (local.get $p1))))
  (func $utf8_check (type $t18) (param $p0 i32) (param $p1 i32) (param $p2 i32) (result i32)
    (local $l3 i32) (local $l4 i32) (local $l5 i32) (local $l6 i32) (local $l7 i32) (local $l8 i32)
    (global.set $g4
      (local.tee $l3
        (i32.sub
          (global.get $g4)
          (i32.const 16))))
    (local.set $l5
      (i32.add
        (local.tee $l4
          (i32.add
            (local.get $p0)
            (local.get $p1)))
        (i32.const -3)))
    (local.set $p1
      (local.get $p0))
    (loop $L0 (result i32)
      (local.set $l6
        (local.get $p1))
      (block $B1
        (block $B2
          (block $B3
            (br_if $B3
              (i32.lt_u
                (local.get $p1)
                (local.get $l5)))
            (block $B4
              (br_if $B4
                (i32.ne
                  (local.get $p1)
                  (local.get $l4)))
              (local.set $p1
                (local.get $l4))
              (br $B2))
            (i32.store offset=12 align=1
              (local.get $l3)
              (i32.const 0))
            (call $as_memcpy
              (i32.add
                (local.get $l3)
                (i32.const 12))
              (local.get $p1)
              (i32.sub
                (local.get $l4)
                (local.get $p1)))
            (local.set $l6
              (i32.add
                (local.get $l3)
                (i32.const 12))))
          (local.set $l7
            (i32.const 1))
          (br_if $B1
            (i32.eqz
              (i32.and
                (local.tee $l8
                  (i32.load8_u
                    (local.get $l6)))
                (i32.const 128))))
          (block $B5
            (br_if $B5
              (i32.ne
                (i32.and
                  (local.tee $l7
                    (i32.or
                      (i32.shl
                        (local.get $l8)
                        (i32.const 8))
                      (i32.load8_u offset=1
                        (local.get $l6))))
                  (i32.const 57536))
                (i32.const 49280)))
            (local.set $l7
              (i32.const 2))
            (br_if $B1
              (i32.and
                (local.get $l8)
                (i32.const 30)))
            (br $B2))
          (block $B6
            (br_if $B6
              (i32.ne
                (i32.and
                  (local.tee $l8
                    (i32.or
                      (local.tee $l7
                        (i32.shl
                          (local.get $l7)
                          (i32.const 8)))
                      (i32.load8_u offset=2
                        (local.get $l6))))
                  (i32.const 15777984))
                (i32.const 14712960)))
            (br_if $B2
              (i32.eqz
                (local.tee $l6
                  (i32.and
                    (local.get $l7)
                    (i32.const 991232)))))
            (local.set $l7
              (i32.const 3))
            (br_if $B1
              (i32.ne
                (local.get $l6)
                (i32.const 860160)))
            (br $B2))
          (br_if $B2
            (i32.ne
              (i32.and
                (i32.or
                  (local.tee $l8
                    (i32.shl
                      (local.get $l8)
                      (i32.const 8)))
                  (i32.load8_u offset=3
                    (local.get $l6)))
                (i32.const -121585472))
              (i32.const -260013952)))
          (local.set $l7
            (i32.const 4))
          (br_if $B1
            (i32.lt_u
              (i32.add
                (i32.and
                  (local.get $l8)
                  (i32.const 120586240))
                (i32.const -1))
              (i32.const 67108864))))
        (block $B7
          (br_if $B7
            (i32.eqz
              (local.get $p2)))
          (i32.store
            (local.get $p2)
            (i32.sub
              (local.get $p1)
              (local.get $p0))))
        (global.set $g4
          (i32.add
            (local.get $l3)
            (i32.const 16)))
        (return
          (i32.eq
            (local.get $p1)
            (local.get $l4))))
      (local.set $p1
        (i32.add
          (local.get $p1)
          (local.get $l7)))
      (br $L0)))
  (func $utf8_validate (type $t20) (param $p0 i32) (param $p1 i32)
    (block $B0
      (br_if $B0
        (i32.eqz
          (call $utf8_check
            (local.get $p0)
            (local.get $p1)
            (i32.const 0))))
      (return))
    (call $idl_trap_with
      (i32.add
        (i32.const 66384)
        (i32.const 541)))
    (unreachable))
  (func $remember_closure (type $t19) (param $p0 i32) (result i32)
    (local $l1 i32) (local $l2 i32) (local $l3 i32) (local $l4 i32) (local $l5 i32) (local $l6 i32) (local $l7 i32)
    (block $B0
      (block $B1
        (br_if $B1
          (local.tee $l1
            (i32.load
              (i32.add
                (i32.const 66384)
                (i32.const 568)))))
        (i32.store
          (i32.add
            (local.tee $l2
              (i32.const 66384))
            (i32.const 568))
          (local.tee $l3
            (call $alloc_words
              (i32.const 258))))
        (i32.store
          (i32.add
            (local.get $l2)
            (i32.const 572))
          (i32.const 0))
        (i64.store align=4
          (i32.add
            (local.get $l3)
            (i32.const 1))
          (i64.const 1099511627779))
        (local.set $l2
          (i32.const 8))
        (loop $L2
          (i32.store
            (i32.add
              (i32.add
                (local.get $l3)
                (local.get $l2))
              (i32.const 1))
            (i32.add
              (local.get $l2)
              (i32.const -4)))
          (local.set $l3
            (i32.load
              (i32.add
                (i32.const 66384)
                (i32.const 568))))
          (br_if $L2
            (i32.ne
              (local.tee $l2
                (i32.add
                  (local.get $l2)
                  (i32.const 4)))
              (i32.const 1028))))
        (i32.store
          (i32.add
            (local.get $l3)
            (i32.const 1029))
          (i32.const -4))
        (local.set $l2
          (i32.const 0))
        (br $B0))
      (block $B3
        (br_if $B3
          (i32.eq
            (local.tee $l2
              (i32.load
                (i32.add
                  (i32.const 66384)
                  (i32.const 572))))
            (i32.const -4)))
        (local.set $l3
          (local.get $l1))
        (br $B0))
      (i32.store
        (i32.add
          (local.tee $l3
            (call $alloc_words
              (i32.add
                (local.tee $l5
                  (i32.shl
                    (local.tee $l4
                      (i32.load
                        (i32.add
                          (local.get $l1)
                          (i32.const 5))))
                    (i32.const 1)))
                (i32.const 2))))
          (i32.const 5))
        (local.get $l5))
      (i32.store
        (local.tee $l6
          (i32.add
            (local.get $l3)
            (i32.const 1)))
        (i32.const 3))
      (block $B4
        (br_if $B4
          (i32.eqz
            (local.get $l4)))
        (local.set $l2
          (i32.add
            (i32.add
              (local.get $l1)
              (i32.const 1))
            (i32.const 8)))
        (local.set $l1
          (i32.add
            (local.get $l6)
            (i32.const 8)))
        (local.set $l7
          (local.get $l4))
        (loop $L5
          (i32.store
            (local.get $l1)
            (i32.load
              (local.get $l2)))
          (local.set $l2
            (i32.add
              (local.get $l2)
              (i32.const 4)))
          (local.set $l1
            (i32.add
              (local.get $l1)
              (i32.const 4)))
          (br_if $L5
            (local.tee $l7
              (i32.add
                (local.get $l7)
                (i32.const -1))))))
      (block $B6
        (br_if $B6
          (i32.ge_u
            (i32.add
              (local.get $l4)
              (i32.const 1))
            (local.get $l5)))
        (local.set $l1
          (i32.add
            (local.get $l4)
            (i32.const -1)))
        (local.set $l2
          (i32.add
            (i32.shl
              (local.get $l4)
              (i32.const 2))
            (i32.const 4)))
        (loop $L7
          (i32.store
            (i32.add
              (i32.add
                (local.get $l6)
                (local.get $l2))
              (i32.const 4))
            (local.get $l2))
          (local.set $l2
            (i32.add
              (local.get $l2)
              (i32.const 4)))
          (br_if $L7
            (local.tee $l1
              (i32.add
                (local.get $l1)
                (i32.const -1))))))
      (i32.store
        (i32.add
          (local.get $l6)
          (i32.or
            (i32.shl
              (local.get $l5)
              (i32.const 2))
            (i32.const 4)))
        (i32.load
          (local.tee $l7
            (i32.add
              (local.tee $l1
                (i32.const 66384))
              (i32.const 572)))))
      (i32.store
        (local.get $l7)
        (local.tee $l2
          (i32.shl
            (local.get $l4)
            (i32.const 2))))
      (i32.store
        (i32.add
          (local.get $l1)
          (i32.const 568))
        (local.get $l3)))
    (block $B8
      (br_if $B8
        (i32.and
          (local.get $p0)
          (i32.const 2)))
      (call $rts_trap_with
        (i32.add
          (i32.const 66384)
          (i32.const 576)))
      (unreachable))
    (i32.store
      (local.tee $l7
        (i32.add
          (local.tee $l1
            (i32.const 66384))
          (i32.const 632)))
      (i32.add
        (i32.load
          (local.get $l7))
        (i32.const 1)))
    (i32.store
      (i32.add
        (local.get $l1)
        (i32.const 572))
      (i32.load
        (local.tee $l3
          (i32.add
            (i32.add
              (i32.shl
                (local.tee $l2
                  (i32.shr_u
                    (local.get $l2)
                    (i32.const 2)))
                (i32.const 2))
              (local.get $l3))
            (i32.const 9)))))
    (i32.store
      (local.get $l3)
      (local.get $p0))
    (local.get $l2))
  (func $recall_closure (type $t19) (param $p0 i32) (result i32)
    (local $l1 i32) (local $l2 i32) (local $l3 i32) (local $l4 i32)
    (block $B0
      (block $B1
        (block $B2
          (br_if $B2
            (i32.eqz
              (local.tee $l1
                (i32.load
                  (i32.add
                    (i32.const 66384)
                    (i32.const 568))))))
          (br_if $B1
            (i32.le_u
              (i32.load
                (i32.add
                  (local.get $l1)
                  (i32.const 5)))
              (local.get $p0)))
          (local.set $l4
            (i32.load
              (local.tee $l3
                (i32.add
                  (local.tee $l2
                    (i32.const 66384))
                  (i32.const 572)))))
          (i32.store
            (local.get $l3)
            (local.tee $p0
              (i32.shl
                (local.get $p0)
                (i32.const 2))))
          (i32.store
            (local.tee $l2
              (i32.add
                (local.get $l2)
                (i32.const 632)))
            (i32.add
              (i32.load
                (local.get $l2))
              (i32.const -1)))
          (local.set $p0
            (i32.load
              (local.tee $l1
                (i32.add
                  (i32.add
                    (local.get $p0)
                    (i32.add
                      (local.get $l1)
                      (i32.const 1)))
                  (i32.const 8)))))
          (i32.store
            (local.get $l1)
            (local.get $l4))
          (br_if $B0
            (i32.eqz
              (i32.and
                (local.get $p0)
                (i32.const 2))))
          (return
            (local.get $p0)))
        (call $rts_trap_with
          (i32.add
            (i32.const 66384)
            (i32.const 636)))
        (unreachable))
      (call $rts_trap_with
        (i32.add
          (i32.const 66384)
          (i32.const 679)))
      (unreachable))
    (call $rts_trap_with
      (i32.add
        (i32.const 66384)
        (i32.const 722)))
    (unreachable))
  (func $closure_count (type $t17) (result i32)
    (i32.load
      (i32.add
        (i32.const 66384)
        (i32.const 632))))
  (func $closure_table_loc (type $t17) (result i32)
    (i32.add
      (i32.add
        (i32.const 66384)
        (i32.const 568))
      (i32.const -1)))
  (func $closure_table_size (type $t17) (result i32)
    (local $l0 i32)
    (block $B0
      (br_if $B0
        (local.tee $l0
          (i32.load
            (i32.add
              (i32.const 66384)
              (i32.const 568)))))
      (return
        (i32.const 0)))
    (i32.load
      (i32.add
        (local.get $l0)
        (i32.const 5))))
  (func $text_of_ptr_size (type $t26) (param $p0 i32) (param $p1 i32) (result i32)
    (local $l2 i32)
    (block $B0
      (br_if $B0
        (i32.lt_u
          (local.get $p1)
          (i32.const 1073741824)))
      (call $rts_trap_with
        (i32.add
          (i32.const 66384)
          (i32.const 827)))
      (unreachable))
    (call $as_memcpy
      (i32.add
        (local.tee $l2
          (call $alloc_blob
            (local.get $p1)))
        (i32.const 9))
      (local.get $p0)
      (local.get $p1))
    (local.get $l2))
  (func $text_of_cstr (type $t19) (param $p0 i32) (result i32)
    (call $text_of_ptr_size
      (local.get $p0)
      (call $as_strlen
        (local.get $p0))))
  (func $text_concat (type $t26) (param $p0 i32) (param $p1 i32) (result i32)
    (local $l2 i32) (local $l3 i32) (local $l4 i32) (local $l5 i32)
    (block $B0
      (br_if $B0
        (local.tee $l2
          (i32.load
            (i32.add
              (local.get $p0)
              (i32.const 5)))))
      (return
        (local.get $p1)))
    (block $B1
      (br_if $B1
        (local.tee $l3
          (i32.load
            (i32.add
              (local.get $p1)
              (i32.const 5)))))
      (return
        (local.get $p0)))
    (block $B2
      (br_if $B2
        (i32.gt_u
          (local.tee $l4
            (i32.add
              (local.get $l3)
              (local.get $l2)))
          (i32.const 8)))
      (call $as_memcpy
        (local.tee $l5
          (i32.add
            (local.tee $l4
              (call $alloc_blob
                (local.get $l4)))
            (i32.const 9)))
        (i32.add
          (i32.add
            (local.get $p0)
            (i32.const 1))
          (i32.const 8))
        (local.get $l2))
      (call $as_memcpy
        (i32.add
          (local.get $l5)
          (local.get $l2))
        (i32.add
          (i32.add
            (local.get $p1)
            (i32.const 1))
          (i32.const 8))
        (local.get $l3))
      (return
        (local.get $l4)))
    (block $B3
      (br_if $B3
        (i32.ge_u
          (local.get $l4)
          (i32.const 1073741824)))
      (i32.store
        (i32.add
          (local.tee $l2
            (call $alloc_words
              (i32.const 4)))
          (i32.const 13))
        (local.get $p1))
      (i32.store
        (i32.add
          (local.get $l2)
          (i32.const 9))
        (local.get $p0))
      (i32.store
        (i32.add
          (local.get $l2)
          (i32.const 5))
        (local.get $l4))
      (i32.store
        (i32.add
          (local.get $l2)
          (i32.const 1))
        (i32.const 14))
      (return
        (local.get $l2)))
    (call $rts_trap_with
      (i32.add
        (i32.const 66384)
        (i32.const 765)))
    (unreachable))
  (func $text_to_buf (type $t20) (param $p0 i32) (param $p1 i32)
    (local $l2 i32) (local $l3 i32) (local $l4 i32)
    (local.set $l2
      (i32.const 0))
    (block $B0
      (loop $L1
        (block $B2
          (br_if $B2
            (i32.ne
              (i32.load
                (local.tee $l3
                  (i32.add
                    (local.get $p0)
                    (i32.const 1))))
              (i32.const 10)))
          (call $as_memcpy
            (local.get $p1)
            (i32.add
              (local.get $p0)
              (i32.const 9))
            (i32.load offset=4
              (local.get $l3)))
          (br_if $B0
            (i32.eqz
              (local.get $l2)))
          (local.set $p0
            (i32.load
              (local.get $l2)))
          (local.set $p1
            (local.get $l2))
          (local.set $l2
            (i32.load offset=4
              (local.get $l2)))
          (br $L1))
        (local.set $l4
          (i32.add
            (local.get $p1)
            (i32.load
              (i32.add
                (local.tee $p0
                  (i32.load offset=8
                    (local.get $l3)))
                (i32.const 5)))))
        (block $B3
          (br_if $B3
            (i32.gt_u
              (i32.load
                (i32.add
                  (local.tee $l3
                    (i32.load offset=12
                      (local.get $l3)))
                  (i32.const 5)))
              (i32.const 7)))
          (call $text_to_buf
            (local.get $l3)
            (local.get $l4))
          (br $L1))
        (i32.store offset=4
          (local.get $l4)
          (local.get $l2))
        (i32.store
          (local.get $l4)
          (local.get $l3))
        (local.set $l2
          (local.get $l4))
        (br $L1))))
  (func $blob_of_text (type $t19) (param $p0 i32) (result i32)
    (local $l1 i32)
    (block $B0
      (br_if $B0
        (i32.ne
          (i32.load
            (i32.add
              (local.get $p0)
              (i32.const 1)))
          (i32.const 10)))
      (return
        (local.get $p0)))
    (block $B1
      (br_if $B1
        (i32.ge_u
          (local.tee $l1
            (i32.load
              (i32.add
                (local.get $p0)
                (i32.const 5))))
          (i32.const 1073741824)))
      (call $text_to_buf
        (local.get $p0)
        (i32.add
          (local.tee $l1
            (call $alloc_blob
              (local.get $l1)))
          (i32.const 9)))
      (return
        (local.get $l1)))
    (call $rts_trap_with
      (i32.add
        (i32.const 66384)
        (i32.const 827)))
    (unreachable))
  (func $text_size (type $t19) (param $p0 i32) (result i32)
    (i32.load
      (i32.add
        (local.get $p0)
        (i32.const 5))))
  (func $blob_compare (type $t26) (param $p0 i32) (param $p1 i32) (result i32)
    (local $l2 i32) (local $l3 i32) (local $l4 i32)
    (select
      (local.tee $l4
        (select
          (local.tee $l3
            (call $as_memcmp
              (i32.add
                (local.get $p0)
                (i32.const 9))
              (i32.add
                (local.get $p1)
                (i32.const 9))
              (select
                (local.tee $p0
                  (i32.load
                    (i32.add
                      (local.get $p0)
                      (i32.const 5))))
                (local.tee $p1
                  (i32.load
                    (i32.add
                      (local.get $p1)
                      (i32.const 5))))
                (local.tee $l2
                  (i32.lt_u
                    (local.get $p0)
                    (local.get $p1))))))
          (i32.const -1)
          (local.get $l3)))
      (select
        (local.get $l4)
        (i32.gt_u
          (local.get $p0)
          (local.get $p1))
        (local.get $l3))
      (local.get $l2)))
  (func $text_compare (type $t26) (param $p0 i32) (param $p1 i32) (result i32)
    (local $l2 i32) (local $l3 i32) (local $l4 i32)
    (block $B0
      (br_if $B0
        (local.tee $p0
          (call $text_compare_range
            (local.get $p0)
            (i32.const 0)
            (local.get $p1)
            (i32.const 0)
            (select
              (local.tee $l2
                (i32.load
                  (i32.add
                    (local.get $p0)
                    (i32.const 5))))
              (local.tee $l3
                (i32.load
                  (i32.add
                    (local.get $p1)
                    (i32.const 5))))
              (local.tee $l4
                (i32.lt_u
                  (local.get $l2)
                  (local.get $l3)))))))
      (return
        (select
          (i32.const 1)
          (select
            (i32.const -1)
            (i32.const 0)
            (local.get $l4))
          (i32.gt_u
            (local.get $l2)
            (local.get $l3)))))
    (local.get $p0))
  (func $text_compare_range (type $t25) (param $p0 i32) (param $p1 i32) (param $p2 i32) (param $p3 i32) (param $p4 i32) (result i32)
    (local $l5 i32) (local $l6 i32) (local $l7 i32) (local $l8 i32) (local $l9 i32) (local $l10 i32) (local $l11 i32) (local $l12 i32) (local $l13 i32)
    (block $B0
      (loop $L1
        (local.set $l5
          (i32.add
            (local.get $p0)
            (i32.const 9)))
        (local.set $l6
          (i32.add
            (local.get $p0)
            (i32.const 1)))
        (loop $L2
          (local.set $l7
            (i32.add
              (local.get $p4)
              (local.get $p1)))
          (local.set $l8
            (i32.load
              (local.get $l6)))
          (block $B3
            (loop $L4
              (local.set $l9
                (i32.add
                  (local.get $p4)
                  (local.get $p3)))
              (loop $L5
                (local.set $l10
                  (local.get $p2))
                (block $B6
                  (br_if $B6
                    (local.tee $l11
                      (i32.ne
                        (local.get $l8)
                        (i32.const 14))))
                  (br_if $B6
                    (i32.lt_u
                      (local.get $p1)
                      (local.tee $l12
                        (i32.load
                          (i32.add
                            (i32.load
                              (local.get $l5))
                            (i32.const 5))))))
                  (local.set $p1
                    (i32.sub
                      (local.get $p1)
                      (local.get $l12)))
                  (local.set $p0
                    (i32.load offset=12
                      (local.get $l6)))
                  (local.set $p2
                    (local.get $l10))
                  (br $L1))
                (block $B7
                  (br_if $B7
                    (local.tee $p2
                      (i32.ne
                        (i32.load
                          (local.tee $l12
                            (i32.add
                              (local.get $l10)
                              (i32.const 1))))
                        (i32.const 14))))
                  (br_if $B7
                    (i32.lt_u
                      (local.get $p3)
                      (local.tee $l13
                        (i32.load
                          (i32.add
                            (i32.load offset=8
                              (local.get $l12))
                            (i32.const 5))))))
                  (local.set $p3
                    (i32.sub
                      (local.get $p3)
                      (local.get $l13)))
                  (local.set $p2
                    (i32.load offset=12
                      (local.get $l12)))
                  (br $L4))
                (block $B8
                  (br_if $B8
                    (local.get $l11))
                  (br_if $B8
                    (i32.lt_u
                      (i32.load
                        (i32.add
                          (local.tee $l13
                            (i32.load
                              (local.get $l5)))
                          (i32.const 5)))
                      (local.get $l7)))
                  (local.set $p0
                    (local.get $l13))
                  (local.set $p2
                    (local.get $l10))
                  (br $L1))
                (block $B9
                  (br_if $B9
                    (i32.eqz
                      (local.get $p2)))
                  (local.set $p2
                    (i32.const 0))
                  (br $B3))
                (br_if $L5
                  (i32.ge_u
                    (i32.load
                      (i32.add
                        (local.tee $p2
                          (i32.load offset=8
                            (local.get $l12)))
                        (i32.const 5)))
                    (local.get $l9)))))
            (local.set $p2
              (i32.const 1)))
          (block $B10
            (br_if $B10
              (local.get $l11))
            (br_if $B0
              (local.tee $l11
                (call $text_compare_range
                  (local.tee $l12
                    (i32.load
                      (local.get $l5)))
                  (local.get $p1)
                  (local.get $l10)
                  (local.get $p3)
                  (local.tee $l12
                    (i32.sub
                      (i32.load
                        (i32.add
                          (local.get $l12)
                          (i32.const 5)))
                      (local.get $p1))))))
            (local.set $p4
              (i32.sub
                (local.get $p4)
                (local.get $l12)))
            (local.set $p3
              (i32.add
                (local.get $l12)
                (local.get $p3)))
            (local.set $p0
              (i32.load offset=12
                (local.get $l6)))
            (local.set $p1
              (i32.const 0))
            (local.set $p2
              (local.get $l10))
            (br $L1))
          (block $B11
            (br_if $B11
              (i32.eqz
                (local.get $p2)))
            (br_if $B0
              (local.tee $l11
                (call $text_compare_range
                  (local.get $p0)
                  (local.get $p1)
                  (local.tee $p2
                    (i32.load offset=8
                      (local.get $l12)))
                  (local.get $p3)
                  (local.tee $p2
                    (i32.sub
                      (i32.load
                        (i32.add
                          (local.get $p2)
                          (i32.const 5)))
                      (local.get $p3))))))
            (local.set $p4
              (i32.sub
                (local.get $p4)
                (local.get $p2)))
            (local.set $p1
              (i32.add
                (local.get $p2)
                (local.get $p1)))
            (local.set $p2
              (i32.load offset=12
                (local.get $l12)))
            (local.set $p3
              (i32.const 0))
            (br $L2))))
      (local.set $l11
        (call $as_memcmp
          (i32.add
            (local.get $l5)
            (local.get $p1))
          (i32.add
            (i32.add
              (local.get $l12)
              (local.get $p3))
            (i32.const 8))
          (local.get $p4))))
    (local.get $l11))
  (func $text_len (type $t19) (param $p0 i32) (result i32)
    (local $l1 i32) (local $l2 i32) (local $l3 i32) (local $l4 i32)
    (block $B0
      (br_if $B0
        (i32.ne
          (i32.load
            (local.tee $l1
              (i32.add
                (local.get $p0)
                (i32.const 1))))
          (i32.const 10)))
      (block $B1
        (br_if $B1
          (local.tee $l2
            (i32.load offset=4
              (local.get $l1))))
        (return
          (i32.const 0)))
      (local.set $l3
        (i32.add
          (local.get $p0)
          (i32.const 9)))
      (local.set $p0
        (i32.const 0))
      (local.set $l1
        (i32.const 0))
      (loop $L2
        (local.set $p0
          (i32.add
            (local.get $p0)
            (i32.const 1)))
        (br_if $L2
          (i32.lt_u
            (local.tee $l1
              (i32.add
                (select
                  (local.tee $l4
                    (select
                      (i32.clz
                        (i32.xor
                          (i32.shl
                            (local.tee $l4
                              (i32.load8_u
                                (i32.add
                                  (local.get $l3)
                                  (local.get $l1))))
                            (i32.const 24))
                          (i32.const -1)))
                      (i32.const 0)
                      (local.get $l4)))
                  (i32.const 1)
                  (local.get $l4))
                (local.get $l1)))
            (local.get $l2))))
      (return
        (local.get $p0)))
    (i32.add
      (call $text_len
        (i32.load offset=8
          (local.get $l1)))
      (call $text_len
        (i32.load offset=12
          (local.get $l1)))))
  (func $text_singleton (type $t19) (param $p0 i32) (result i32)
    (local $l1 i32) (local $l2 i32) (local $l3 i32) (local $l4 i32)
    (global.set $g4
      (local.tee $l1
        (i32.sub
          (global.get $g4)
          (i32.const 16))))
    (block $B0
      (block $B1
        (br_if $B1
          (i32.ge_u
            (local.get $p0)
            (i32.const 128)))
        (local.set $l2
          (i32.const 0))
        (local.set $l3
          (i32.const 127))
        (br $B0))
      (local.set $l3
        (i32.const 127))
      (local.set $l2
        (i32.const 0))
      (loop $L2
        (i32.store8
          (i32.add
            (i32.add
              (local.get $l1)
              (i32.const 12))
            (local.get $l2))
          (i32.or
            (i32.and
              (local.get $p0)
              (i32.const 63))
            (i32.const 128)))
        (local.set $l4
          (select
            (i32.const 1)
            (i32.const 2)
            (local.get $l2)))
        (local.set $l2
          (i32.add
            (local.get $l2)
            (i32.const 1)))
        (br_if $L2
          (i32.gt_u
            (local.tee $p0
              (i32.shr_u
                (local.get $p0)
                (i32.const 6)))
            (local.tee $l3
              (i32.shr_s
                (local.get $l3)
                (local.get $l4)))))))
    (i32.store8
      (i32.add
        (i32.add
          (local.get $l1)
          (i32.const 12))
        (local.get $l2))
      (local.tee $p0
        (i32.or
          (i32.and
            (local.get $p0)
            (local.get $l3))
          (i32.xor
            (i32.shl
              (local.get $l3)
              (i32.const 1))
            (i32.const 254)))))
    (block $B3
      (br_if $B3
        (i32.ge_u
          (local.get $l2)
          (i32.const 1073741823)))
      (i32.store8
        (i32.add
          (local.tee $l4
            (call $alloc_blob
              (i32.add
                (local.get $l2)
                (i32.const 1))))
          (i32.const 9))
        (local.get $p0))
      (block $B4
        (br_if $B4
          (i32.eqz
            (local.get $l2)))
        (local.set $p0
          (i32.add
            (i32.add
              (local.get $l4)
              (i32.const 1))
            (i32.const 9)))
        (local.set $l3
          (i32.add
            (i32.add
              (local.get $l1)
              (i32.const 12))
            (i32.const -1)))
        (loop $L5
          (i32.store8
            (local.get $p0)
            (i32.load8_u
              (i32.add
                (local.get $l3)
                (local.get $l2))))
          (local.set $p0
            (i32.add
              (local.get $p0)
              (i32.const 1)))
          (br_if $L5
            (local.tee $l2
              (i32.add
                (local.get $l2)
                (i32.const -1))))))
      (global.set $g4
        (i32.add
          (local.get $l1)
          (i32.const 16)))
      (return
        (local.get $l4)))
    (call $rts_trap_with
      (i32.add
        (i32.const 66384)
        (i32.const 827)))
    (unreachable))
  (func $text_iter (type $t19) (param $p0 i32) (result i32)
    (local $l1 i32)
    (i64.store align=4
      (i32.add
        (local.tee $l1
          (call $alloc_words
            (i32.const 5)))
        (i32.const 13))
      (i64.const 0))
    (i32.store
      (i32.add
        (local.get $l1)
        (i32.const 1))
      (i32.const 3))
    (i32.store
      (i32.add
        (local.get $l1)
        (i32.const 9))
      (call $find_leaf
        (local.get $p0)
        (i32.add
          (local.get $l1)
          (i32.const 17))))
    (local.get $l1))
  (func $find_leaf (type $t26) (param $p0 i32) (param $p1 i32) (result i32)
    (local $l2 i32)
    (block $B0
      (br_if $B0
        (i32.ne
          (i32.load
            (local.tee $l2
              (i32.add
                (local.get $p0)
                (i32.const 1))))
          (i32.const 14)))
      (loop $L1
        (i32.store
          (i32.add
            (local.tee $p0
              (call $alloc_words
                (i32.const 4)))
            (i32.const 1))
          (i32.const 3))
        (i32.store
          (i32.add
            (local.get $p0)
            (i32.const 9))
          (i32.load offset=12
            (local.get $l2)))
        (i32.store
          (i32.add
            (local.get $p0)
            (i32.const 13))
          (i32.load
            (local.get $p1)))
        (i32.store
          (local.get $p1)
          (local.get $p0))
        (br_if $L1
          (i32.eq
            (i32.load
              (local.tee $l2
                (i32.add
                  (local.tee $p0
                    (i32.load offset=8
                      (local.get $l2)))
                  (i32.const 1))))
            (i32.const 14)))))
    (local.get $p0))
  (func $text_iter_done (type $t19) (param $p0 i32) (result i32)
    (local $l1 i32)
    (local.set $l1
      (i32.const 0))
    (block $B0
      (br_if $B0
        (i32.lt_u
          (i32.shr_u
            (i32.load
              (i32.add
                (local.get $p0)
                (i32.const 13)))
            (i32.const 2))
          (i32.load
            (i32.add
              (i32.load
                (i32.add
                  (local.get $p0)
                  (i32.const 9)))
              (i32.const 5)))))
      (local.set $l1
        (i32.eqz
          (i32.load
            (i32.add
              (local.get $p0)
              (i32.const 17))))))
    (local.get $l1))
  (func $text_iter_next (type $t19) (param $p0 i32) (result i32)
    (local $l1 i32) (local $l2 i32) (local $l3 i32) (local $l4 i32) (local $l5 i32) (local $l6 i32)
    (local.set $l1
      (i32.const 1))
    (local.set $l2
      (i32.add
        (local.get $p0)
        (i32.const 1)))
    (block $B0
      (block $B1
        (block $B2
          (br_if $B2
            (i32.ge_u
              (local.tee $l3
                (i32.shr_u
                  (i32.load
                    (i32.add
                      (local.get $p0)
                      (i32.const 13)))
                  (i32.const 2)))
              (i32.load
                (i32.add
                  (local.tee $p0
                    (i32.load
                      (i32.add
                        (local.get $p0)
                        (i32.const 9))))
                  (i32.const 5)))))
          (local.set $p0
            (i32.add
              (local.get $p0)
              (i32.const 1)))
          (br $B1))
        (local.set $l4
          (i32.add
            (local.get $l2)
            (i32.const 16)))
        (loop $L3
          (br_if $B0
            (i32.eqz
              (local.tee $l5
                (i32.load
                  (local.get $l4)))))
          (block $B4
            (block $B5
              (br_if $B5
                (i32.ne
                  (i32.load
                    (local.tee $p0
                      (i32.add
                        (local.tee $l3
                          (i32.load
                            (local.tee $l6
                              (i32.add
                                (local.get $l5)
                                (i32.const 9)))))
                        (i32.const 1))))
                  (i32.const 14)))
              (i32.store
                (local.get $l6)
                (i32.load offset=12
                  (local.get $p0)))
              (i32.store offset=12
                (local.get $l2)
                (i32.const 0))
              (i32.store offset=8
                (local.get $l2)
                (local.tee $p0
                  (call $find_leaf
                    (i32.load offset=8
                      (local.get $p0))
                    (local.get $l4))))
              (local.set $p0
                (i32.add
                  (local.get $p0)
                  (i32.const 1)))
              (local.set $l6
                (i32.load offset=12
                  (local.get $l2)))
              (br $B4))
            (i32.store offset=8
              (local.get $l2)
              (local.get $l3))
            (local.set $l6
              (i32.const 0))
            (i32.store offset=12
              (local.get $l2)
              (i32.const 0))
            (i32.store offset=16
              (local.get $l2)
              (i32.load
                (i32.add
                  (local.get $l5)
                  (i32.const 13)))))
          (br_if $L3
            (i32.ge_u
              (local.tee $l3
                (i32.shr_u
                  (local.get $l6)
                  (i32.const 2)))
              (i32.load offset=4
                (local.get $p0))))))
      (local.set $l5
        (i32.and
          (i32.xor
            (i32.shl
              (i32.const -1)
              (i32.sub
                (i32.const 8)
                (local.tee $l4
                  (select
                    (i32.clz
                      (i32.xor
                        (i32.shl
                          (local.tee $p0
                            (i32.load8_s
                              (i32.add
                                (local.tee $l6
                                  (i32.add
                                    (local.get $p0)
                                    (local.get $l3)))
                                (i32.const 8))))
                          (i32.const 24))
                        (i32.const -1)))
                    (i32.const 0)
                    (i32.and
                      (local.get $p0)
                      (i32.const 255))))))
            (i32.const -1))
          (local.get $p0)))
      (block $B6
        (br_if $B6
          (i32.lt_u
            (local.get $l4)
            (i32.const 2)))
        (local.set $p0
          (i32.add
            (local.get $l6)
            (i32.const 9)))
        (local.set $l6
          (i32.const -1))
        (loop $L7
          (local.set $l5
            (i32.or
              (i32.shl
                (local.get $l5)
                (i32.const 6))
              (i32.and
                (i32.load8_u
                  (local.get $p0))
                (i32.const 63))))
          (local.set $p0
            (i32.add
              (local.get $p0)
              (i32.const 1)))
          (br_if $L7
            (i32.gt_s
              (i32.add
                (i32.add
                  (local.get $l4)
                  (local.tee $l6
                    (i32.add
                      (local.get $l6)
                      (i32.const -1))))
                (i32.const 2))
              (i32.const 2))))
        (local.set $l1
          (i32.sub
            (i32.const 0)
            (local.get $l6))))
      (i32.store offset=12
        (local.get $l2)
        (i32.shl
          (i32.add
            (local.get $l1)
            (local.get $l3))
          (i32.const 2)))
      (return
        (local.get $l5)))
    (call $rts_trap_with
      (i32.add
        (i32.const 66384)
        (i32.const 793)))
    (unreachable))
  (func $compute_crc32 (type $t19) (param $p0 i32) (result i32)
    (local $l1 i32) (local $l2 i32) (local $l3 i32)
    (block $B0
      (br_if $B0
        (i32.ne
          (i32.load
            (local.tee $l1
              (i32.add
                (local.get $p0)
                (i32.const 1))))
          (i32.const 10)))
      (local.set $l2
        (i32.const 0))
      (block $B1
        (br_if $B1
          (i32.le_u
            (i32.add
              (local.tee $p0
                (i32.add
                  (local.get $l1)
                  (i32.const 8)))
              (local.tee $l3
                (i32.load offset=4
                  (local.get $l1))))
            (local.get $p0)))
        (local.set $l1
          (i32.const -1))
        (loop $L2
          (local.set $l1
            (i32.xor
              (i32.load
                (i32.add
                  (i32.add
                    (i32.const 66384)
                    (i32.const 896))
                  (i32.shl
                    (i32.xor
                      (i32.and
                        (local.get $l1)
                        (i32.const 255))
                      (i32.load8_u
                        (local.get $p0)))
                    (i32.const 2))))
              (i32.shr_u
                (local.get $l1)
                (i32.const 8))))
          (local.set $p0
            (i32.add
              (local.get $p0)
              (i32.const 1)))
          (br_if $L2
            (local.tee $l3
              (i32.add
                (local.get $l3)
                (i32.const -1)))))
        (local.set $l2
          (i32.xor
            (local.get $l1)
            (i32.const -1))))
      (return
        (local.get $l2)))
    (call $rts_trap_with
      (i32.add
        (i32.const 66384)
        (i32.const 854)))
    (unreachable))
  (func $blob_iter (type $t19) (param $p0 i32) (result i32)
    (local $l1 i32)
    (i32.store
      (i32.add
        (local.tee $l1
          (call $alloc_words
            (i32.const 4)))
        (i32.const 13))
      (i32.const 0))
    (i32.store
      (i32.add
        (local.get $l1)
        (i32.const 9))
      (local.get $p0))
    (i32.store
      (i32.add
        (local.get $l1)
        (i32.const 1))
      (i32.const 3))
    (local.get $l1))
  (func $blob_iter_done (type $t19) (param $p0 i32) (result i32)
    (i32.ge_u
      (i32.shr_u
        (i32.load
          (i32.add
            (local.get $p0)
            (i32.const 13)))
        (i32.const 2))
      (i32.load
        (i32.add
          (i32.load
            (i32.add
              (local.get $p0)
              (i32.const 9)))
          (i32.const 5)))))
  (func $blob_iter_next (type $t19) (param $p0 i32) (result i32)
    (local $l1 i32)
    (i32.store
      (local.tee $l1
        (i32.add
          (local.get $p0)
          (i32.const 13)))
      (i32.and
        (i32.add
          (local.tee $l1
            (i32.load
              (local.get $l1)))
          (i32.const 4))
        (i32.const -4)))
    (i32.load8_u
      (i32.add
        (i32.add
          (i32.load
            (i32.add
              (local.get $p0)
              (i32.const 9)))
          (i32.shr_u
            (local.get $l1)
            (i32.const 2)))
        (i32.const 9))))
  (func $blob_of_ic_url (type $t19) (param $p0 i32) (result i32)
    (local $l1 i32) (local $l2 i32) (local $l3 i32) (local $l4 i32) (local $l5 i32) (local $l6 i32) (local $l7 i32)
    (block $B0
      (block $B1
        (block $B2
          (block $B3
            (br_if $B3
              (i32.le_u
                (local.tee $p0
                  (i32.load
                    (i32.add
                      (local.tee $l1
                        (call $blob_of_text
                          (local.get $p0)))
                      (i32.const 5))))
                (i32.const 2)))
            (br_if $B2
              (i32.ne
                (i32.or
                  (i32.load8_u offset=8
                    (local.tee $l1
                      (i32.add
                        (local.get $l1)
                        (i32.const 1))))
                  (i32.const 32))
                (i32.const 105)))
            (br_if $B2
              (i32.ne
                (i32.or
                  (i32.load8_u offset=1
                    (local.tee $l2
                      (i32.add
                        (local.get $l1)
                        (i32.const 8))))
                  (i32.const 32))
                (i32.const 99)))
            (br_if $B2
              (i32.ne
                (i32.and
                  (i32.load8_u
                    (i32.add
                      (local.get $l1)
                      (i32.const 10)))
                  (i32.const 255))
                (i32.const 58)))
            (local.set $l3
              (i32.add
                (local.get $l2)
                (local.get $p0)))
            (local.set $l1
              (i32.add
                (local.get $p0)
                (i32.const -3)))
            (local.set $l4
              (i32.add
                (local.get $p0)
                (i32.const -5)))
            (local.set $p0
              (local.tee $l2
                (i32.add
                  (local.get $l2)
                  (i32.const 3))))
            (block $B4
              (loop $L5
                (br_if $B4
                  (i32.eqz
                    (local.get $l1)))
                (local.set $l1
                  (i32.add
                    (local.get $l1)
                    (i32.const -1)))
                (local.set $l5
                  (i32.load8_u
                    (local.get $p0)))
                (local.set $p0
                  (local.tee $l6
                    (i32.add
                      (local.get $p0)
                      (i32.const 1))))
                (br_if $L5
                  (i32.lt_u
                    (i32.and
                      (i32.add
                        (local.get $l5)
                        (i32.const -48))
                      (i32.const 255))
                    (i32.const 10)))
                (local.set $p0
                  (local.get $l6))
                (br_if $L5
                  (i32.lt_u
                    (i32.and
                      (i32.add
                        (local.get $l5)
                        (i32.const -65))
                      (i32.const 255))
                    (i32.const 6))))
              (call $rts_trap_with
                (i32.add
                  (i32.const 66384)
                  (i32.const 2072)))
              (unreachable))
            (br_if $B1
              (i32.and
                (local.get $l4)
                (i32.const 1)))
            (local.set $l5
              (i32.add
                (local.tee $l7
                  (call $alloc_blob
                    (local.tee $l6
                      (i32.shr_u
                        (local.get $l4)
                        (i32.const 1)))))
                (i32.const 9)))
            (block $B6
              (br_if $B6
                (i32.eqz
                  (local.get $l4)))
              (local.set $p0
                (local.get $l5))
              (loop $L7
                (i32.store8
                  (local.get $p0)
                  (i32.or
                    (i32.shl
                      (i32.add
                        (select
                          (i32.const 9)
                          (i32.const 0)
                          (i32.gt_u
                            (i32.and
                              (i32.add
                                (local.tee $l1
                                  (i32.load8_u
                                    (local.get $l2)))
                                (i32.const -48))
                              (i32.const 255))
                            (i32.const 9)))
                        (local.get $l1))
                      (i32.const 4))
                    (i32.add
                      (select
                        (i32.const -48)
                        (i32.const -55)
                        (i32.lt_u
                          (i32.and
                            (i32.add
                              (local.tee $l1
                                (i32.load8_u
                                  (i32.add
                                    (local.get $l2)
                                    (i32.const 1))))
                              (i32.const -48))
                            (i32.const 255))
                          (i32.const 10)))
                      (local.get $l1))))
                (local.set $l2
                  (i32.add
                    (local.get $l2)
                    (i32.const 2)))
                (local.set $p0
                  (i32.add
                    (local.get $p0)
                    (i32.const 1)))
                (br_if $L7
                  (local.tee $l4
                    (i32.add
                      (local.get $l4)
                      (i32.const -2))))))
            (br_if $B0
              (i32.ne
                (call $compute_crc8
                  (local.get $l5)
                  (local.get $l6))
                (i32.and
                  (i32.or
                    (i32.shl
                      (i32.add
                        (select
                          (i32.const 9)
                          (i32.const 0)
                          (i32.gt_u
                            (i32.and
                              (i32.add
                                (local.tee $l1
                                  (i32.load8_u
                                    (local.tee $p0
                                      (i32.add
                                        (local.get $l3)
                                        (i32.const -2)))))
                                (i32.const -48))
                              (i32.const 255))
                            (i32.const 9)))
                        (local.get $l1))
                      (i32.const 4))
                    (i32.add
                      (select
                        (i32.const -48)
                        (i32.const -55)
                        (i32.lt_u
                          (i32.and
                            (i32.add
                              (local.tee $p0
                                (i32.load8_u offset=1
                                  (local.get $p0)))
                              (i32.const -48))
                            (i32.const 255))
                          (i32.const 10)))
                      (local.get $p0)))
                  (i32.const 255))))
            (return
              (local.get $l7)))
          (call $rts_trap_with
            (i32.add
              (i32.const 66384)
              (i32.const 1920)))
          (unreachable))
        (call $rts_trap_with
          (i32.add
            (i32.const 66384)
            (i32.const 2028)))
        (unreachable))
      (call $rts_trap_with
        (i32.add
          (i32.const 66384)
          (i32.const 1946)))
      (unreachable))
    (call $rts_trap_with
      (i32.add
        (i32.const 66384)
        (i32.const 1994)))
    (unreachable))
  (func $compute_crc8 (type $t26) (param $p0 i32) (param $p1 i32) (result i32)
    (local $l2 i32) (local $l3 i32) (local $l4 i32) (local $l5 i32)
    (block $B0
      (block $B1
        (br_if $B1
          (local.get $p1))
        (local.set $l2
          (i32.const 0))
        (br $B0))
      (local.set $l3
        (i32.const 0))
      (local.set $l2
        (i32.const 0))
      (loop $L2
        (local.set $l2
          (i32.xor
            (i32.load8_u
              (i32.add
                (local.get $p0)
                (local.get $l3)))
            (local.get $l2)))
        (local.set $l4
          (i32.const 8))
        (loop $L3
          (local.set $l2
            (select
              (i32.xor
                (local.tee $l5
                  (i32.and
                    (i32.shl
                      (local.get $l2)
                      (i32.const 1))
                    (i32.const 510)))
                (i32.const 7))
              (local.get $l5)
              (i32.and
                (local.get $l2)
                (i32.const 128))))
          (br_if $L3
            (local.tee $l4
              (i32.add
                (local.get $l4)
                (i32.const -1)))))
        (br_if $L2
          (i32.ne
            (local.tee $l3
              (i32.add
                (local.get $l3)
                (i32.const 1)))
            (local.get $p1)))))
    (i32.and
      (local.get $l2)
      (i32.const 255)))
  (func $ic_url_of_blob (type $t19) (param $p0 i32) (result i32)
    (local $l1 i32) (local $l2 i32) (local $l3 i32) (local $l4 i32) (local $l5 i32) (local $l6 i32) (local $l7 i32)
    (local.set $l1
      (i32.const 66384))
    (call $as_memcpy
      (i32.add
        (local.tee $l3
          (call $alloc_blob
            (i32.add
              (i32.shl
                (local.tee $l2
                  (i32.load
                    (i32.add
                      (local.get $p0)
                      (i32.const 5))))
                (i32.const 1))
              (i32.const 5))))
        (i32.const 9))
      (i32.add
        (local.get $l1)
        (i32.const 2024))
      (i32.const 3))
    (local.set $l4
      (i32.add
        (local.get $p0)
        (i32.const 9)))
    (local.set $l5
      (i32.add
        (local.get $p0)
        (i32.const 1)))
    (local.set $p0
      (i32.add
        (local.get $l3)
        (i32.const 12)))
    (block $B0
      (br_if $B0
        (i32.eqz
          (local.get $l2)))
      (local.set $l1
        (local.get $l4))
      (loop $L1
        (i32.store8
          (local.get $p0)
          (select
            (i32.or
              (local.tee $l7
                (i32.shr_u
                  (local.tee $l6
                    (i32.load8_u
                      (local.get $l1)))
                  (i32.const 4)))
              (i32.const 48))
            (i32.add
              (local.get $l7)
              (i32.const 55))
            (i32.lt_u
              (local.get $l6)
              (i32.const 160))))
        (i32.store8
          (i32.add
            (local.get $p0)
            (i32.const 1))
          (select
            (i32.or
              (local.tee $l6
                (i32.and
                  (i32.load8_u
                    (local.get $l1))
                  (i32.const 15)))
              (i32.const 48))
            (i32.add
              (local.get $l6)
              (i32.const 55))
            (i32.lt_u
              (local.get $l6)
              (i32.const 10))))
        (local.set $p0
          (i32.add
            (local.get $p0)
            (i32.const 2)))
        (local.set $l1
          (i32.add
            (local.get $l1)
            (i32.const 1)))
        (br_if $L1
          (local.tee $l2
            (i32.add
              (local.get $l2)
              (i32.const -1))))))
    (i32.store8 offset=1
      (local.get $p0)
      (select
        (i32.or
          (local.tee $l6
            (i32.and
              (local.tee $l1
                (call $compute_crc8
                  (local.get $l4)
                  (i32.load offset=4
                    (local.get $l5))))
              (i32.const 15)))
          (i32.const 48))
        (i32.add
          (local.get $l6)
          (i32.const 55))
        (i32.lt_u
          (local.get $l6)
          (i32.const 10))))
    (i32.store8
      (local.get $p0)
      (select
        (i32.or
          (local.tee $l6
            (i32.shr_u
              (local.get $l1)
              (i32.const 4)))
          (i32.const 48))
        (i32.add
          (local.get $l6)
          (i32.const 55))
        (i32.lt_u
          (local.get $l1)
          (i32.const 160))))
    (local.get $l3))
  (func $mp_init (type $t19) (param $p0 i32) (result i32)
    (local $l1 i32)
    (i32.store offset=12
      (local.get $p0)
      (local.tee $l1
        (call $mp_calloc
          (i32.const 32)
          (i32.const 4))))
    (block $B0
      (br_if $B0
        (local.get $l1))
      (return
        (i32.const -2)))
    (i32.store offset=8
      (local.get $p0)
      (i32.const 0))
    (i64.store align=4
      (local.get $p0)
      (i64.const 137438953472))
    (i32.const 0))
  (func $mp_add (type $t18) (param $p0 i32) (param $p1 i32) (param $p2 i32) (result i32)
    (local $l3 i32) (local $l4 i32)
    (block $B0
      (br_if $B0
        (i32.ne
          (local.tee $l3
            (i32.load offset=8
              (local.get $p0)))
          (local.tee $l4
            (i32.load offset=8
              (local.get $p1)))))
      (i32.store offset=8
        (local.get $p2)
        (local.get $l3))
      (return
        (call $s_mp_add
          (local.get $p0)
          (local.get $p1)
          (local.get $p2))))
    (block $B1
      (br_if $B1
        (i32.ne
          (call $mp_cmp_mag
            (local.get $p0)
            (local.get $p1))
          (i32.const -1)))
      (i32.store offset=8
        (local.get $p2)
        (local.get $l4))
      (return
        (call $s_mp_sub
          (local.get $p1)
          (local.get $p0)
          (local.get $p2))))
    (i32.store offset=8
      (local.get $p2)
      (local.get $l3))
    (call $s_mp_sub
      (local.get $p0)
      (local.get $p1)
      (local.get $p2)))
  (func $mp_sub (type $t18) (param $p0 i32) (param $p1 i32) (param $p2 i32) (result i32)
    (local $l3 i32)
    (block $B0
      (br_if $B0
        (i32.eq
          (local.tee $l3
            (i32.load offset=8
              (local.get $p0)))
          (i32.load offset=8
            (local.get $p1))))
      (i32.store offset=8
        (local.get $p2)
        (local.get $l3))
      (return
        (call $s_mp_add
          (local.get $p0)
          (local.get $p1)
          (local.get $p2))))
    (block $B1
      (br_if $B1
        (i32.eq
          (call $mp_cmp_mag
            (local.get $p0)
            (local.get $p1))
          (i32.const -1)))
      (i32.store offset=8
        (local.get $p2)
        (local.get $l3))
      (return
        (call $s_mp_sub
          (local.get $p0)
          (local.get $p1)
          (local.get $p2))))
    (i32.store offset=8
      (local.get $p2)
      (i32.eqz
        (local.get $l3)))
    (call $s_mp_sub
      (local.get $p1)
      (local.get $p0)
      (local.get $p2)))
  (func $mp_mul (type $t18) (param $p0 i32) (param $p1 i32) (param $p2 i32) (result i32)
    (local $l3 i32) (local $l4 i32) (local $l5 i32) (local $l6 i32) (local $l7 i32) (local $l8 i32)
    (local.set $l3
      (i32.load offset=8
        (local.get $p1)))
    (local.set $l4
      (i32.load offset=8
        (local.get $p0)))
    (block $B0
      (block $B1
        (br_if $B1
          (i32.lt_s
            (local.tee $l7
              (select
                (local.tee $l5
                  (i32.load
                    (local.get $p0)))
                (local.tee $l6
                  (i32.load
                    (local.get $p1)))
                (i32.gt_s
                  (local.get $l5)
                  (local.get $l6))))
            (i32.shl
              (local.tee $l8
                (select
                  (local.get $l5)
                  (local.get $l6)
                  (i32.lt_s
                    (local.get $l5)
                    (local.get $l6))))
              (i32.const 1))))
        (br_if $B1
          (i32.lt_s
            (local.get $l8)
            (i32.const 80)))
        (br_if $B1
          (i32.lt_s
            (local.get $l7)
            (i32.const 160)))
        (local.set $l5
          (call $s_mp_balance_mul
            (local.get $p0)
            (local.get $p1)
            (local.get $p2)))
        (br $B0))
      (block $B2
        (br_if $B2
          (i32.lt_s
            (local.get $l8)
            (i32.const 350)))
        (local.set $l5
          (call $s_mp_toom_mul
            (local.get $p0)
            (local.get $p1)
            (local.get $p2)))
        (br $B0))
      (block $B3
        (br_if $B3
          (i32.lt_s
            (local.get $l8)
            (i32.const 80)))
        (local.set $l5
          (call $s_mp_karatsuba_mul
            (local.get $p0)
            (local.get $p1)
            (local.get $p2)))
        (br $B0))
      (local.set $l5
        (i32.add
          (local.tee $l6
            (i32.add
              (local.get $l6)
              (local.get $l5)))
          (i32.const 1)))
      (block $B4
        (br_if $B4
          (i32.gt_s
            (local.get $l6)
            (i32.const 510)))
        (local.set $l5
          (call $s_mp_mul_digs_fast
            (local.get $p0)
            (local.get $p1)
            (local.get $p2)
            (local.get $l5)))
        (br $B0))
      (local.set $l5
        (call $s_mp_mul_digs
          (local.get $p0)
          (local.get $p1)
          (local.get $p2)
          (local.get $l5))))
    (i32.store offset=8
      (local.get $p2)
      (i32.and
        (i32.ne
          (local.get $l4)
          (local.get $l3))
        (i32.gt_s
          (i32.load
            (local.get $p2))
          (i32.const 0))))
    (local.get $l5))
  (func $mp_zero (type $t23) (param $p0 i32)
    (local $l1 i32)
    (i32.store
      (local.get $p0)
      (i32.const 0))
    (i32.store offset=8
      (local.get $p0)
      (i32.const 0))
    (block $B0
      (br_if $B0
        (i32.lt_s
          (local.tee $l1
            (i32.load offset=4
              (local.get $p0)))
          (i32.const 1)))
      (local.set $l1
        (i32.add
          (local.get $l1)
          (i32.const 1)))
      (local.set $p0
        (i32.load offset=12
          (local.get $p0)))
      (loop $L1
        (i32.store
          (local.get $p0)
          (i32.const 0))
        (local.set $p0
          (i32.add
            (local.get $p0)
            (i32.const 4)))
        (br_if $L1
          (i32.gt_s
            (local.tee $l1
              (i32.add
                (local.get $l1)
                (i32.const -1)))
            (i32.const 1))))))
  (func $mp_cmp (type $t26) (param $p0 i32) (param $p1 i32) (result i32)
    (local $l2 i32)
    (block $B0
      (br_if $B0
        (i32.eq
          (local.tee $l2
            (i32.load offset=8
              (local.get $p0)))
          (i32.load offset=8
            (local.get $p1))))
      (return
        (select
          (i32.const -1)
          (i32.const 1)
          (i32.eq
            (local.get $l2)
            (i32.const 1)))))
    (block $B1
      (br_if $B1
        (i32.ne
          (local.get $l2)
          (i32.const 1)))
      (return
        (call $mp_cmp_mag
          (local.get $p1)
          (local.get $p0))))
    (call $mp_cmp_mag
      (local.get $p0)
      (local.get $p1)))
  (func $mp_set_u32 (type $t20) (param $p0 i32) (param $p1 i32)
    (local $l2 i32) (local $l3 i32) (local $l4 i32)
    (local.set $l2
      (i32.load offset=12
        (local.get $p0)))
    (local.set $l3
      (i32.const 0))
    (block $B0
      (br_if $B0
        (i32.eqz
          (local.get $p1)))
      (local.set $l3
        (i32.const 0))
      (local.set $l4
        (local.get $l2))
      (loop $L1
        (i32.store
          (local.get $l4)
          (i32.and
            (local.get $p1)
            (i32.const 268435455)))
        (local.set $l4
          (i32.add
            (local.get $l4)
            (i32.const 4)))
        (local.set $l3
          (i32.add
            (local.get $l3)
            (i32.const 1)))
        (br_if $L1
          (local.tee $p1
            (i32.shr_u
              (local.get $p1)
              (i32.const 28))))))
    (i32.store offset=8
      (local.get $p0)
      (i32.const 0))
    (i32.store
      (local.get $p0)
      (local.get $l3))
    (block $B2
      (br_if $B2
        (i32.lt_s
          (local.tee $p1
            (i32.sub
              (i32.load offset=4
                (local.get $p0))
              (local.get $l3)))
          (i32.const 1)))
      (local.set $l4
        (i32.add
          (local.get $p1)
          (i32.const 1)))
      (local.set $p1
        (i32.add
          (local.get $l2)
          (i32.shl
            (local.get $l3)
            (i32.const 2))))
      (loop $L3
        (i32.store
          (local.get $p1)
          (i32.const 0))
        (local.set $p1
          (i32.add
            (local.get $p1)
            (i32.const 4)))
        (br_if $L3
          (i32.gt_s
            (local.tee $l4
              (i32.add
                (local.get $l4)
                (i32.const -1)))
            (i32.const 1))))))
  (func $mp_set_i32 (type $t20) (param $p0 i32) (param $p1 i32)
    (local $l2 i32)
    (call $mp_set_u32
      (local.get $p0)
      (i32.xor
        (i32.add
          (local.get $p1)
          (local.tee $l2
            (i32.shr_s
              (local.get $p1)
              (i32.const 31))))
        (local.get $l2)))
    (block $B0
      (br_if $B0
        (i32.gt_s
          (local.get $p1)
          (i32.const -1)))
      (i32.store offset=8
        (local.get $p0)
        (i32.const 1))))
  (func $mp_get_i32 (type $t19) (param $p0 i32) (result i32)
    (local $l1 i32)
    (select
      (i32.sub
        (i32.const 0)
        (local.tee $l1
          (call $mp_get_mag_u32
            (local.get $p0))))
      (local.get $l1)
      (i32.eq
        (i32.load offset=8
          (local.get $p0))
        (i32.const 1))))
  (func $mp_get_mag_u32 (type $t19) (param $p0 i32) (result i32)
    (local $l1 i32) (local $l2 i32)
    (block $B0
      (br_if $B0
        (local.tee $l1
          (select
            (local.tee $l1
              (i32.load
                (local.get $p0)))
            (i32.const 2)
            (i32.lt_u
              (local.get $l1)
              (i32.const 2)))))
      (return
        (i32.const 0)))
    (local.set $l1
      (i32.shl
        (local.get $l1)
        (i32.const 2)))
    (local.set $l2
      (i32.add
        (i32.load offset=12
          (local.get $p0))
        (i32.const -4)))
    (local.set $p0
      (i32.const 0))
    (loop $L1
      (local.set $p0
        (i32.or
          (i32.load
            (i32.add
              (local.get $l2)
              (local.get $l1)))
          (i32.shl
            (local.get $p0)
            (i32.const 28))))
      (br_if $L1
        (local.tee $l1
          (i32.add
            (local.get $l1)
            (i32.const -4)))))
    (local.get $p0))
  (func $mp_set_u64 (type $t32) (param $p0 i32) (param $p1 i64)
    (local $l2 i32) (local $l3 i32) (local $l4 i32)
    (local.set $l2
      (i32.load offset=12
        (local.get $p0)))
    (local.set $l3
      (i32.const 0))
    (block $B0
      (br_if $B0
        (i64.eqz
          (local.get $p1)))
      (local.set $l3
        (i32.const 0))
      (local.set $l4
        (local.get $l2))
      (loop $L1
        (i32.store
          (local.get $l4)
          (i32.and
            (i32.wrap_i64
              (local.get $p1))
            (i32.const 268435455)))
        (local.set $l4
          (i32.add
            (local.get $l4)
            (i32.const 4)))
        (local.set $l3
          (i32.add
            (local.get $l3)
            (i32.const 1)))
        (br_if $L1
          (i64.ne
            (local.tee $p1
              (i64.shr_u
                (local.get $p1)
                (i64.const 28)))
            (i64.const 0)))))
    (i32.store offset=8
      (local.get $p0)
      (i32.const 0))
    (i32.store
      (local.get $p0)
      (local.get $l3))
    (block $B2
      (br_if $B2
        (i32.lt_s
          (local.tee $l4
            (i32.sub
              (i32.load offset=4
                (local.get $p0))
              (local.get $l3)))
          (i32.const 1)))
      (local.set $p0
        (i32.add
          (local.get $l4)
          (i32.const 1)))
      (local.set $l4
        (i32.add
          (local.get $l2)
          (i32.shl
            (local.get $l3)
            (i32.const 2))))
      (loop $L3
        (i32.store
          (local.get $l4)
          (i32.const 0))
        (local.set $l4
          (i32.add
            (local.get $l4)
            (i32.const 4)))
        (br_if $L3
          (i32.gt_s
            (local.tee $p0
              (i32.add
                (local.get $p0)
                (i32.const -1)))
            (i32.const 1))))))
  (func $mp_set_i64 (type $t32) (param $p0 i32) (param $p1 i64)
    (local $l2 i64)
    (call $mp_set_u64
      (local.get $p0)
      (i64.xor
        (i64.add
          (local.get $p1)
          (local.tee $l2
            (i64.shr_s
              (local.get $p1)
              (i64.const 63))))
        (local.get $l2)))
    (block $B0
      (br_if $B0
        (i64.gt_s
          (local.get $p1)
          (i64.const -1)))
      (i32.store offset=8
        (local.get $p0)
        (i32.const 1))))
  (func $mp_get_i64 (type $t27) (param $p0 i32) (result i64)
    (local $l1 i64)
    (select
      (i64.sub
        (i64.const 0)
        (local.tee $l1
          (call $mp_get_mag_u64
            (local.get $p0))))
      (local.get $l1)
      (i32.eq
        (i32.load offset=8
          (local.get $p0))
        (i32.const 1))))
  (func $mp_get_mag_u64 (type $t27) (param $p0 i32) (result i64)
    (local $l1 i32) (local $l2 i64)
    (block $B0
      (br_if $B0
        (local.tee $l1
          (select
            (local.tee $l1
              (i32.load
                (local.get $p0)))
            (i32.const 3)
            (i32.lt_u
              (local.get $l1)
              (i32.const 3)))))
      (return
        (i64.const 0)))
    (local.set $l1
      (i32.shl
        (local.get $l1)
        (i32.const 2)))
    (local.set $p0
      (i32.add
        (i32.load offset=12
          (local.get $p0))
        (i32.const -4)))
    (local.set $l2
      (i64.const 0))
    (loop $L1
      (local.set $l2
        (i64.or
          (i64.shl
            (local.get $l2)
            (i64.const 28))
          (i64.load32_u
            (i32.add
              (local.get $p0)
              (local.get $l1)))))
      (br_if $L1
        (local.tee $l1
          (i32.add
            (local.get $l1)
            (i32.const -4)))))
    (local.get $l2))
  (func $mp_div (type $t33) (param $p0 i32) (param $p1 i32) (param $p2 i32) (param $p3 i32) (result i32)
    (local $l4 i32) (local $l5 i32) (local $l6 i32) (local $l7 i32) (local $l8 i32) (local $l9 i32) (local $l10 i32) (local $l11 i32) (local $l12 i32) (local $l13 i32) (local $l14 i32) (local $l15 i32) (local $l16 i32) (local $l17 i32) (local $l18 i64) (local $l19 i32)
    (global.set $g4
      (local.tee $l4
        (i32.sub
          (global.get $g4)
          (i32.const 80))))
    (block $B0
      (block $B1
        (br_if $B1
          (i32.load
            (local.get $p1)))
        (local.set $l5
          (i32.const -3))
        (br $B0))
      (block $B2
        (br_if $B2
          (i32.ne
            (call $mp_cmp_mag
              (local.get $p0)
              (local.get $p1))
            (i32.const -1)))
        (block $B3
          (block $B4
            (br_if $B4
              (local.get $p3))
            (local.set $l5
              (i32.const 0))
            (br $B3))
          (local.set $l5
            (call $mp_copy
              (local.get $p0)
              (local.get $p3))))
        (br_if $B0
          (i32.eqz
            (local.get $p2)))
        (call $mp_zero
          (local.get $p2))
        (br $B0))
      (br_if $B0
        (local.tee $l5
          (call $mp_init_size
            (i32.add
              (local.get $l4)
              (i32.const 64))
            (i32.add
              (i32.load
                (local.get $p0))
              (i32.const 2)))))
      (i32.store offset=64
        (local.get $l4)
        (i32.add
          (i32.load
            (local.get $p0))
          (i32.const 2)))
      (block $B5
        (br_if $B5
          (local.tee $l5
            (call $mp_init
              (i32.add
                (local.get $l4)
                (i32.const 16)))))
        (block $B6
          (br_if $B6
            (local.tee $l5
              (call $mp_init
                (local.get $l4))))
          (block $B7
            (br_if $B7
              (local.tee $l5
                (call $mp_init_copy
                  (i32.add
                    (local.get $l4)
                    (i32.const 48))
                  (local.get $p0))))
            (block $B8
              (br_if $B8
                (local.tee $l5
                  (call $mp_init_copy
                    (i32.add
                      (local.get $l4)
                      (i32.const 32))
                    (local.get $p1))))
              (local.set $l6
                (i32.const 0))
              (i32.store offset=40
                (local.get $l4)
                (i32.const 0))
              (i32.store offset=56
                (local.get $l4)
                (i32.const 0))
              (local.set $l7
                (i32.load offset=8
                  (local.get $p1)))
              (local.set $l8
                (i32.load offset=8
                  (local.get $p0)))
              (block $B9
                (block $B10
                  (br_if $B10
                    (i32.gt_s
                      (local.tee $p1
                        (i32.rem_s
                          (call $mp_count_bits
                            (i32.add
                              (local.get $l4)
                              (i32.const 32)))
                          (i32.const 28)))
                      (i32.const 26)))
                  (br_if $B9
                    (local.tee $l5
                      (call $mp_mul_2d
                        (i32.add
                          (local.get $l4)
                          (i32.const 48))
                        (local.tee $l6
                          (i32.sub
                            (i32.const 27)
                            (local.get $p1)))
                        (i32.add
                          (local.get $l4)
                          (i32.const 48)))))
                  (br_if $B9
                    (local.tee $l5
                      (call $mp_mul_2d
                        (i32.add
                          (local.get $l4)
                          (i32.const 32))
                        (local.get $l6)
                        (i32.add
                          (local.get $l4)
                          (i32.const 32))))))
                (br_if $B9
                  (local.tee $l5
                    (call $mp_lshd
                      (i32.add
                        (local.get $l4)
                        (i32.const 32))
                      (local.tee $l13
                        (i32.sub
                          (local.tee $l10
                            (i32.add
                              (local.tee $l9
                                (i32.load offset=48
                                  (local.get $l4)))
                              (i32.const -1)))
                          (local.tee $l12
                            (i32.add
                              (local.tee $l11
                                (i32.load offset=32
                                  (local.get $l4)))
                              (i32.const -1))))))))
                (local.set $l14
                  (i32.ne
                    (local.get $l8)
                    (local.get $l7)))
                (local.set $l7
                  (i32.shl
                    (local.get $l13)
                    (i32.const 2)))
                (block $B11
                  (loop $L12
                    (br_if $B11
                      (i32.eq
                        (call $mp_cmp
                          (i32.add
                            (local.get $l4)
                            (i32.const 48))
                          (i32.add
                            (local.get $l4)
                            (i32.const 32)))
                        (i32.const -1)))
                    (i32.store
                      (local.tee $p1
                        (i32.add
                          (i32.load offset=76
                            (local.get $l4))
                          (local.get $l7)))
                      (i32.add
                        (i32.load
                          (local.get $p1))
                        (i32.const 1)))
                    (br_if $L12
                      (i32.eqz
                        (local.tee $l5
                          (call $mp_sub
                            (i32.add
                              (local.get $l4)
                              (i32.const 48))
                            (i32.add
                              (local.get $l4)
                              (i32.const 32))
                            (i32.add
                              (local.get $l4)
                              (i32.const 48))))))
                    (br $B9)))
                (call $mp_rshd
                  (i32.add
                    (local.get $l4)
                    (i32.const 32))
                  (local.get $l13))
                (local.set $p1
                  (i32.load offset=48
                    (local.get $l4)))
                (block $B13
                  (br_if $B13
                    (i32.le_s
                      (local.get $l9)
                      (local.get $l11)))
                  (local.set $l15
                    (i32.shl
                      (i32.add
                        (local.get $l11)
                        (i32.const -2))
                      (i32.const 2)))
                  (loop $L14
                    (block $B15
                      (block $B16
                        (br_if $B16
                          (i32.le_s
                            (local.tee $l13
                              (local.get $l10))
                            (local.get $p1)))
                        (local.set $l10
                          (i32.add
                            (local.get $l13)
                            (i32.const -1)))
                        (br $B15))
                      (block $B17
                        (block $B18
                          (br_if $B18
                            (i32.ne
                              (local.tee $l7
                                (i32.load
                                  (i32.add
                                    (local.tee $l5
                                      (i32.load offset=60
                                        (local.get $l4)))
                                    (local.tee $l16
                                      (i32.shl
                                        (local.get $l13)
                                        (i32.const 2))))))
                              (local.tee $l8
                                (i32.load
                                  (i32.add
                                    (i32.load offset=44
                                      (local.get $l4))
                                    (local.tee $l9
                                      (i32.shl
                                        (local.get $l12)
                                        (i32.const 2))))))))
                          (local.set $l5
                            (i32.const 268435455))
                          (i32.store
                            (i32.add
                              (local.tee $p1
                                (i32.load offset=76
                                  (local.get $l4)))
                              (i32.shl
                                (local.tee $l17
                                  (i32.sub
                                    (local.get $l13)
                                    (local.get $l11)))
                                (i32.const 2)))
                            (i32.const 268435455))
                          (local.set $l10
                            (i32.add
                              (local.get $l13)
                              (i32.const -1)))
                          (br $B17))
                        (i32.store
                          (i32.add
                            (local.tee $p1
                              (i32.load offset=76
                                (local.get $l4)))
                            (i32.shl
                              (local.tee $l17
                                (i32.sub
                                  (local.get $l13)
                                  (local.get $l11)))
                              (i32.const 2)))
                          (local.tee $l5
                            (i32.wrap_i64
                              (select
                                (local.tee $l18
                                  (i64.div_u
                                    (i64.or
                                      (i64.shl
                                        (i64.extend_i32_u
                                          (local.get $l7))
                                        (i64.const 28))
                                      (i64.load32_u
                                        (i32.add
                                          (local.get $l5)
                                          (i32.shl
                                            (local.tee $l10
                                              (i32.add
                                                (local.get $l13)
                                                (i32.const -1)))
                                            (i32.const 2)))))
                                    (i64.extend_i32_u
                                      (local.get $l8))))
                                (i64.const 268435455)
                                (i64.lt_u
                                  (local.get $l18)
                                  (i64.const 268435455)))))))
                      (i32.store
                        (i32.add
                          (local.get $p1)
                          (local.tee $l7
                            (i32.shl
                              (local.get $l17)
                              (i32.const 2))))
                        (local.tee $l5
                          (i32.and
                            (i32.add
                              (local.get $l5)
                              (i32.const 1))
                            (i32.const 268435455))))
                      (local.set $l19
                        (i32.add
                          (local.get $l13)
                          (i32.const -2)))
                      (loop $L19
                        (i32.store
                          (i32.add
                            (local.get $p1)
                            (local.get $l7))
                          (i32.and
                            (i32.add
                              (local.get $l5)
                              (i32.const -1))
                            (i32.const 268435455)))
                        (call $mp_zero
                          (i32.add
                            (local.get $l4)
                            (i32.const 16)))
                        (local.set $p1
                          (i32.const 0))
                        (local.set $l5
                          (i32.load offset=44
                            (local.get $l4)))
                        (block $B20
                          (br_if $B20
                            (i32.lt_s
                              (local.get $l11)
                              (i32.const 2)))
                          (local.set $p1
                            (i32.load
                              (i32.add
                                (local.get $l5)
                                (local.get $l15)))))
                        (i32.store
                          (local.tee $l8
                            (i32.load offset=28
                              (local.get $l4)))
                          (local.get $p1))
                        (i32.store offset=4
                          (local.get $l8)
                          (i32.load
                            (i32.add
                              (local.get $l5)
                              (local.get $l9))))
                        (i32.store offset=16
                          (local.get $l4)
                          (i32.const 2))
                        (br_if $B9
                          (local.tee $l5
                            (call $mp_mul_d
                              (i32.add
                                (local.get $l4)
                                (i32.const 16))
                              (i32.load
                                (i32.add
                                  (i32.load offset=76
                                    (local.get $l4))
                                  (local.get $l7)))
                              (i32.add
                                (local.get $l4)
                                (i32.const 16)))))
                        (local.set $l8
                          (i32.const 0))
                        (local.set $p1
                          (i32.load offset=60
                            (local.get $l4)))
                        (block $B21
                          (br_if $B21
                            (i32.lt_s
                              (local.get $l13)
                              (i32.const 2)))
                          (local.set $l8
                            (i32.load
                              (i32.add
                                (local.get $p1)
                                (i32.shl
                                  (local.get $l19)
                                  (i32.const 2))))))
                        (i32.store
                          (local.tee $l5
                            (i32.load offset=12
                              (local.get $l4)))
                          (local.get $l8))
                        (i32.store offset=4
                          (local.get $l5)
                          (i32.load
                            (i32.add
                              (local.get $p1)
                              (i32.shl
                                (local.get $l10)
                                (i32.const 2)))))
                        (i32.store offset=8
                          (local.get $l5)
                          (i32.load
                            (i32.add
                              (local.get $p1)
                              (local.get $l16))))
                        (i32.store
                          (local.get $l4)
                          (i32.const 3))
                        (local.set $l8
                          (call $mp_cmp_mag
                            (i32.add
                              (local.get $l4)
                              (i32.const 16))
                            (local.get $l4)))
                        (local.set $l5
                          (i32.load
                            (i32.add
                              (local.tee $p1
                                (i32.load offset=76
                                  (local.get $l4)))
                              (local.get $l7))))
                        (br_if $L19
                          (i32.eq
                            (local.get $l8)
                            (i32.const 1))))
                      (br_if $B9
                        (local.tee $l5
                          (call $mp_mul_d
                            (i32.add
                              (local.get $l4)
                              (i32.const 32))
                            (local.get $l5)
                            (i32.add
                              (local.get $l4)
                              (i32.const 16)))))
                      (br_if $B9
                        (local.tee $l5
                          (call $mp_lshd
                            (i32.add
                              (local.get $l4)
                              (i32.const 16))
                            (local.get $l17))))
                      (br_if $B9
                        (local.tee $l5
                          (call $mp_sub
                            (i32.add
                              (local.get $l4)
                              (i32.const 48))
                            (i32.add
                              (local.get $l4)
                              (i32.const 16))
                            (i32.add
                              (local.get $l4)
                              (i32.const 48)))))
                      (br_if $B15
                        (i32.ne
                          (i32.load offset=56
                            (local.get $l4))
                          (i32.const 1)))
                      (br_if $B9
                        (local.tee $l5
                          (call $mp_copy
                            (i32.add
                              (local.get $l4)
                              (i32.const 32))
                            (i32.add
                              (local.get $l4)
                              (i32.const 16)))))
                      (br_if $B9
                        (local.tee $l5
                          (call $mp_lshd
                            (i32.add
                              (local.get $l4)
                              (i32.const 16))
                            (local.get $l17))))
                      (br_if $B9
                        (local.tee $l5
                          (call $mp_add
                            (i32.add
                              (local.get $l4)
                              (i32.const 48))
                            (i32.add
                              (local.get $l4)
                              (i32.const 16))
                            (i32.add
                              (local.get $l4)
                              (i32.const 48)))))
                      (i32.store
                        (local.tee $p1
                          (i32.add
                            (i32.load offset=76
                              (local.get $l4))
                            (local.get $l7)))
                        (i32.and
                          (i32.add
                            (i32.load
                              (local.get $p1))
                            (i32.const -1))
                          (i32.const 268435455))))
                    (local.set $p1
                      (i32.load offset=48
                        (local.get $l4)))
                    (br_if $L14
                      (i32.gt_s
                        (local.get $l13)
                        (local.get $l11)))))
                (block $B22
                  (block $B23
                    (br_if $B23
                      (local.get $p1))
                    (local.set $p1
                      (i32.const 0))
                    (br $B22))
                  (local.set $p1
                    (i32.load offset=8
                      (local.get $p0))))
                (i32.store offset=56
                  (local.get $l4)
                  (local.get $p1))
                (block $B24
                  (br_if $B24
                    (i32.eqz
                      (local.get $p2)))
                  (call $mp_clamp
                    (i32.add
                      (local.get $l4)
                      (i32.const 64)))
                  (call $mp_exch
                    (i32.add
                      (local.get $l4)
                      (i32.const 64))
                    (local.get $p2))
                  (i32.store offset=8
                    (local.get $p2)
                    (local.get $l14)))
                (block $B25
                  (br_if $B25
                    (i32.eqz
                      (local.get $p3)))
                  (br_if $B9
                    (local.tee $l5
                      (call $mp_div_2d
                        (i32.add
                          (local.get $l4)
                          (i32.const 48))
                        (local.get $l6)
                        (i32.add
                          (local.get $l4)
                          (i32.const 48))
                        (i32.const 0))))
                  (call $mp_exch
                    (i32.add
                      (local.get $l4)
                      (i32.const 48))
                    (local.get $p3)))
                (local.set $l5
                  (i32.const 0)))
              (call $mp_clear
                (i32.add
                  (local.get $l4)
                  (i32.const 32))))
            (call $mp_clear
              (i32.add
                (local.get $l4)
                (i32.const 48))))
          (call $mp_clear
            (local.get $l4)))
        (call $mp_clear
          (i32.add
            (local.get $l4)
            (i32.const 16))))
      (call $mp_clear
        (i32.add
          (local.get $l4)
          (i32.const 64))))
    (global.set $g4
      (i32.add
        (local.get $l4)
        (i32.const 80)))
    (local.get $l5))
  (func $mp_init_copy (type $t26) (param $p0 i32) (param $p1 i32) (result i32)
    (local $l2 i32)
    (block $B0
      (br_if $B0
        (local.tee $l2
          (call $mp_init_size
            (local.get $p0)
            (i32.load
              (local.get $p1)))))
      (block $B1
        (br_if $B1
          (local.tee $l2
            (call $mp_copy
              (local.get $p1)
              (local.get $p0))))
        (return
          (i32.const 0)))
      (call $mp_clear
        (local.get $p0)))
    (local.get $l2))
  (func $mp_neg (type $t26) (param $p0 i32) (param $p1 i32) (result i32)
    (local $l2 i32) (local $l3 i32)
    (block $B0
      (block $B1
        (br_if $B1
          (i32.eq
            (local.get $p0)
            (local.get $p1)))
        (br_if $B0
          (local.tee $l2
            (call $mp_copy
              (local.get $p0)
              (local.get $p1)))))
      (local.set $l2
        (i32.const 0))
      (local.set $l3
        (i32.const 0))
      (block $B2
        (br_if $B2
          (i32.eqz
            (i32.load
              (local.get $p1))))
        (local.set $l3
          (i32.eqz
            (i32.load offset=8
              (local.get $p0)))))
      (i32.store offset=8
        (local.get $p1)
        (local.get $l3)))
    (local.get $l2))
  (func $mp_abs (type $t26) (param $p0 i32) (param $p1 i32) (result i32)
    (block $B0
      (block $B1
        (br_if $B1
          (i32.eq
            (local.get $p0)
            (local.get $p1)))
        (br_if $B0
          (local.tee $p0
            (call $mp_copy
              (local.get $p0)
              (local.get $p1)))))
      (local.set $p0
        (i32.const 0))
      (i32.store offset=8
        (local.get $p1)
        (i32.const 0)))
    (local.get $p0))
  (func $mp_2expt (type $t26) (param $p0 i32) (param $p1 i32) (result i32)
    (local $l2 i32) (local $l3 i32) (local $l4 i32)
    (call $mp_zero
      (local.get $p0))
    (block $B0
      (br_if $B0
        (local.tee $l4
          (call $mp_grow
            (local.get $p0)
            (local.tee $l3
              (i32.add
                (local.tee $l2
                  (i32.div_s
                    (local.get $p1)
                    (i32.const 28)))
                (i32.const 1))))))
      (i32.store
        (local.get $p0)
        (local.get $l3))
      (i32.store
        (i32.add
          (i32.load offset=12
            (local.get $p0))
          (i32.shl
            (local.get $l2)
            (i32.const 2)))
        (i32.shl
          (i32.const 1)
          (i32.sub
            (local.get $p1)
            (i32.mul
              (local.get $l2)
              (i32.const 28))))))
    (local.get $l4))
  (func $mp_expt_u32 (type $t18) (param $p0 i32) (param $p1 i32) (param $p2 i32) (result i32)
    (local $l3 i32)
    (global.set $g4
      (local.tee $l3
        (i32.sub
          (global.get $g4)
          (i32.const 16))))
    (block $B0
      (br_if $B0
        (local.tee $p0
          (call $mp_init_copy
            (local.get $l3)
            (local.get $p0))))
      (call $mp_set
        (local.get $p2)
        (i32.const 1))
      (block $B1
        (block $B2
          (br_if $B2
            (i32.eqz
              (local.get $p1)))
          (loop $L3
            (block $B4
              (br_if $B4
                (i32.eqz
                  (i32.and
                    (local.get $p1)
                    (i32.const 1))))
              (br_if $B1
                (local.tee $p0
                  (call $mp_mul
                    (local.get $p2)
                    (local.get $l3)
                    (local.get $p2)))))
            (block $B5
              (br_if $B5
                (i32.lt_u
                  (local.get $p1)
                  (i32.const 2)))
              (br_if $B1
                (local.tee $p0
                  (call $mp_sqr
                    (local.get $l3)
                    (local.get $l3)))))
            (br_if $L3
              (local.tee $p1
                (i32.shr_u
                  (local.get $p1)
                  (i32.const 1))))))
        (local.set $p0
          (i32.const 0)))
      (call $mp_clear
        (local.get $l3)))
    (global.set $g4
      (i32.add
        (local.get $l3)
        (i32.const 16)))
    (local.get $p0))
  (func $mp_set (type $t20) (param $p0 i32) (param $p1 i32)
    (local $l2 i32) (local $l3 i32)
    (i32.store
      (local.tee $l2
        (i32.load offset=12
          (local.get $p0)))
      (i32.and
        (local.get $p1)
        (i32.const 268435455)))
    (i32.store offset=8
      (local.get $p0)
      (i32.const 0))
    (i32.store
      (local.get $p0)
      (local.tee $l3
        (i32.ne
          (i32.load
            (local.get $l2))
          (i32.const 0))))
    (block $B0
      (br_if $B0
        (i32.lt_s
          (local.tee $p0
            (i32.sub
              (i32.load offset=4
                (local.get $p0))
              (local.get $l3)))
          (i32.const 1)))
      (local.set $p1
        (i32.add
          (local.get $p0)
          (i32.const 1)))
      (local.set $p0
        (i32.add
          (local.get $l2)
          (i32.shl
            (local.get $l3)
            (i32.const 2))))
      (loop $L1
        (i32.store
          (local.get $p0)
          (i32.const 0))
        (local.set $p0
          (i32.add
            (local.get $p0)
            (i32.const 4)))
        (br_if $L1
          (i32.gt_s
            (local.tee $p1
              (i32.add
                (local.get $p1)
                (i32.const -1)))
            (i32.const 1))))))
  (func $mp_sqr (type $t26) (param $p0 i32) (param $p1 i32) (result i32)
    (local $l2 i32)
    (block $B0
      (block $B1
        (br_if $B1
          (i32.lt_s
            (local.tee $l2
              (i32.load
                (local.get $p0)))
            (i32.const 400)))
        (local.set $p0
          (call $s_mp_toom_sqr
            (local.get $p0)
            (local.get $p1)))
        (br $B0))
      (block $B2
        (br_if $B2
          (i32.lt_s
            (local.get $l2)
            (i32.const 120)))
        (local.set $p0
          (call $s_mp_karatsuba_sqr
            (local.get $p0)
            (local.get $p1)))
        (br $B0))
      (block $B3
        (br_if $B3
          (i32.gt_s
            (i32.or
              (i32.shl
                (local.get $l2)
                (i32.const 1))
              (i32.const 1))
            (i32.const 511)))
        (local.set $p0
          (call $s_mp_sqr_fast
            (local.get $p0)
            (local.get $p1)))
        (br $B0))
      (local.set $p0
        (call $s_mp_sqr
          (local.get $p0)
          (local.get $p1))))
    (i32.store offset=8
      (local.get $p1)
      (i32.const 0))
    (local.get $p0))
  (func $s_mp_add (type $t18) (param $p0 i32) (param $p1 i32) (param $p2 i32) (result i32)
    (local $l3 i32) (local $l4 i32) (local $l5 i32) (local $l6 i32) (local $l7 i32) (local $l8 i32) (local $l9 i32) (local $l10 i32) (local $l11 i32)
    (local.set $l7
      (i32.add
        (local.tee $l6
          (select
            (local.tee $l3
              (i32.load
                (local.get $p0)))
            (local.tee $l4
              (i32.load
                (local.get $p1)))
            (local.tee $l5
              (i32.gt_s
                (local.get $l3)
                (local.get $l4)))))
        (i32.const 1)))
    (block $B0
      (block $B1
        (br_if $B1
          (i32.gt_s
            (i32.load offset=4
              (local.get $p2))
            (local.get $l6)))
        (br_if $B0
          (local.tee $l8
            (call $mp_grow
              (local.get $p2)
              (local.get $l7)))))
      (local.set $l9
        (i32.load
          (local.get $p2)))
      (i32.store
        (local.get $p2)
        (local.get $l7))
      (local.set $l7
        (i32.load offset=12
          (local.get $p2)))
      (block $B2
        (block $B3
          (br_if $B3
            (i32.ge_s
              (local.tee $l10
                (select
                  (local.get $l4)
                  (local.get $l3)
                  (local.get $l5)))
              (i32.const 1)))
          (local.set $l3
            (i32.const 0))
          (local.set $l8
            (i32.const 0))
          (br $B2))
        (local.set $l4
          (i32.load offset=12
            (local.get $p0)))
        (local.set $l8
          (i32.load offset=12
            (local.get $p1)))
        (local.set $l11
          (i32.const 0))
        (local.set $l3
          (i32.const 0))
        (loop $L4
          (i32.store
            (local.get $l7)
            (i32.and
              (local.tee $l3
                (i32.add
                  (i32.add
                    (i32.load
                      (local.get $l4))
                    (local.get $l3))
                  (i32.load
                    (local.get $l8))))
              (i32.const 268435455)))
          (local.set $l7
            (i32.add
              (local.get $l7)
              (i32.const 4)))
          (local.set $l8
            (i32.add
              (local.get $l8)
              (i32.const 4)))
          (local.set $l4
            (i32.add
              (local.get $l4)
              (i32.const 4)))
          (local.set $l3
            (i32.shr_u
              (local.get $l3)
              (i32.const 28)))
          (br_if $L4
            (i32.lt_s
              (local.tee $l11
                (i32.add
                  (local.get $l11)
                  (i32.const 1)))
              (local.get $l10))))
        (local.set $l8
          (local.get $l10)))
      (block $B5
        (br_if $B5
          (i32.eq
            (local.get $l10)
            (local.get $l6)))
        (br_if $B5
          (i32.ge_s
            (local.get $l8)
            (local.get $l6)))
        (local.set $l4
          (i32.add
            (i32.load offset=12
              (select
                (local.get $p0)
                (local.get $p1)
                (local.get $l5)))
            (i32.shl
              (local.get $l8)
              (i32.const 2))))
        (loop $L6
          (i32.store
            (local.get $l7)
            (i32.and
              (local.tee $l3
                (i32.add
                  (i32.load
                    (local.get $l4))
                  (local.get $l3)))
              (i32.const 268435455)))
          (local.set $l4
            (i32.add
              (local.get $l4)
              (i32.const 4)))
          (local.set $l7
            (i32.add
              (local.get $l7)
              (i32.const 4)))
          (local.set $l3
            (i32.shr_u
              (local.get $l3)
              (i32.const 28)))
          (br_if $L6
            (i32.lt_s
              (local.tee $l8
                (i32.add
                  (local.get $l8)
                  (i32.const 1)))
              (local.get $l6)))))
      (i32.store
        (local.get $l7)
        (local.get $l3))
      (block $B7
        (br_if $B7
          (i32.lt_s
            (local.tee $l3
              (i32.sub
                (local.get $l9)
                (i32.load
                  (local.get $p2))))
            (i32.const 1)))
        (local.set $l7
          (i32.add
            (local.get $l7)
            (i32.const 4)))
        (local.set $l3
          (i32.add
            (local.get $l3)
            (i32.const 1)))
        (loop $L8
          (i32.store
            (local.get $l7)
            (i32.const 0))
          (local.set $l7
            (i32.add
              (local.get $l7)
              (i32.const 4)))
          (br_if $L8
            (i32.gt_s
              (local.tee $l3
                (i32.add
                  (local.get $l3)
                  (i32.const -1)))
              (i32.const 1)))))
      (call $mp_clamp
        (local.get $p2))
      (local.set $l8
        (i32.const 0)))
    (local.get $l8))
  (func $mp_cmp_mag (type $t26) (param $p0 i32) (param $p1 i32) (result i32)
    (local $l2 i32) (local $l3 i32) (local $l4 i32) (local $l5 i32)
    (local.set $l2
      (i32.const 1))
    (block $B0
      (br_if $B0
        (i32.gt_s
          (local.tee $l3
            (i32.load
              (local.get $p0)))
          (local.tee $l4
            (i32.load
              (local.get $p1)))))
      (local.set $l2
        (i32.const -1))
      (br_if $B0
        (i32.lt_s
          (local.get $l3)
          (local.get $l4)))
      (local.set $l2
        (i32.const 0))
      (br_if $B0
        (i32.lt_s
          (local.get $l3)
          (i32.const 1)))
      (local.set $p0
        (i32.add
          (i32.load offset=12
            (local.get $p0))
          (local.tee $l4
            (i32.shl
              (i32.add
                (local.get $l3)
                (i32.const -1))
              (i32.const 2)))))
      (local.set $p1
        (i32.add
          (i32.load offset=12
            (local.get $p1))
          (local.get $l4)))
      (loop $L1
        (block $B2
          (br_if $B2
            (i32.le_u
              (local.tee $l4
                (i32.load
                  (local.get $p0)))
              (local.tee $l5
                (i32.load
                  (local.get $p1)))))
          (return
            (i32.const 1)))
        (block $B3
          (br_if $B3
            (i32.ge_u
              (local.get $l4)
              (local.get $l5)))
          (return
            (i32.const -1)))
        (local.set $p1
          (i32.add
            (local.get $p1)
            (i32.const -4)))
        (local.set $p0
          (i32.add
            (local.get $p0)
            (i32.const -4)))
        (br_if $L1
          (local.tee $l3
            (i32.add
              (local.get $l3)
              (i32.const -1))))))
    (local.get $l2))
  (func $s_mp_sub (type $t18) (param $p0 i32) (param $p1 i32) (param $p2 i32) (result i32)
    (local $l3 i32) (local $l4 i32) (local $l5 i32) (local $l6 i32) (local $l7 i32) (local $l8 i32)
    (local.set $l3
      (i32.load
        (local.get $p1)))
    (block $B0
      (block $B1
        (br_if $B1
          (i32.ge_s
            (i32.load offset=4
              (local.get $p2))
            (local.tee $l4
              (i32.load
                (local.get $p0)))))
        (br_if $B0
          (local.tee $l5
            (call $mp_grow
              (local.get $p2)
              (local.get $l4)))))
      (local.set $l6
        (i32.load
          (local.get $p2)))
      (i32.store
        (local.get $p2)
        (local.get $l4))
      (local.set $l5
        (i32.load offset=12
          (local.get $p2)))
      (local.set $p0
        (i32.load offset=12
          (local.get $p0)))
      (block $B2
        (block $B3
          (br_if $B3
            (i32.ge_s
              (local.get $l3)
              (i32.const 1)))
          (local.set $p1
            (i32.const 0))
          (local.set $l3
            (i32.const 0))
          (br $B2))
        (local.set $l7
          (i32.load offset=12
            (local.get $p1)))
        (local.set $p1
          (i32.const 0))
        (local.set $l8
          (local.get $l3))
        (loop $L4
          (i32.store
            (local.get $l5)
            (i32.and
              (local.tee $p1
                (i32.sub
                  (i32.sub
                    (i32.load
                      (local.get $p0))
                    (i32.load
                      (local.get $l7)))
                  (local.get $p1)))
              (i32.const 268435455)))
          (local.set $l5
            (i32.add
              (local.get $l5)
              (i32.const 4)))
          (local.set $l7
            (i32.add
              (local.get $l7)
              (i32.const 4)))
          (local.set $p0
            (i32.add
              (local.get $p0)
              (i32.const 4)))
          (local.set $p1
            (i32.shr_u
              (local.get $p1)
              (i32.const 31)))
          (br_if $L4
            (local.tee $l8
              (i32.add
                (local.get $l8)
                (i32.const -1))))))
      (block $B5
        (br_if $B5
          (i32.ge_s
            (local.get $l3)
            (local.get $l4)))
        (local.set $l7
          (i32.sub
            (local.get $l4)
            (local.get $l3)))
        (loop $L6
          (i32.store
            (local.get $l5)
            (i32.and
              (local.tee $p1
                (i32.sub
                  (i32.load
                    (local.get $p0))
                  (local.get $p1)))
              (i32.const 268435455)))
          (local.set $l5
            (i32.add
              (local.get $l5)
              (i32.const 4)))
          (local.set $p0
            (i32.add
              (local.get $p0)
              (i32.const 4)))
          (local.set $p1
            (i32.shr_u
              (local.get $p1)
              (i32.const 31)))
          (br_if $L6
            (local.tee $l7
              (i32.add
                (local.get $l7)
                (i32.const -1))))))
      (block $B7
        (br_if $B7
          (i32.lt_s
            (local.tee $p0
              (i32.sub
                (local.get $l6)
                (i32.load
                  (local.get $p2))))
            (i32.const 1)))
        (local.set $p0
          (i32.add
            (local.get $p0)
            (i32.const 1)))
        (loop $L8
          (i32.store
            (local.get $l5)
            (i32.const 0))
          (local.set $l5
            (i32.add
              (local.get $l5)
              (i32.const 4)))
          (br_if $L8
            (i32.gt_s
              (local.tee $p0
                (i32.add
                  (local.get $p0)
                  (i32.const -1)))
              (i32.const 1)))))
      (call $mp_clamp
        (local.get $p2))
      (local.set $l5
        (i32.const 0)))
    (local.get $l5))
  (func $mp_grow (type $t26) (param $p0 i32) (param $p1 i32) (result i32)
    (local $l2 i32) (local $l3 i32) (local $l4 i32)
    (local.set $l2
      (i32.const 0))
    (block $B0
      (br_if $B0
        (i32.ge_s
          (local.tee $l3
            (i32.load offset=4
              (local.get $p0)))
          (local.get $p1)))
      (block $B1
        (br_if $B1
          (local.tee $l3
            (call $mp_realloc
              (i32.load offset=12
                (local.get $p0))
              (i32.shl
                (local.get $l3)
                (i32.const 2))
              (i32.shl
                (local.get $p1)
                (i32.const 2)))))
        (return
          (i32.const -2)))
      (i32.store offset=12
        (local.get $p0)
        (local.get $l3))
      (local.set $l4
        (i32.load offset=4
          (local.get $p0)))
      (i32.store offset=4
        (local.get $p0)
        (local.get $p1))
      (br_if $B0
        (i32.lt_s
          (local.tee $p0
            (i32.sub
              (local.get $p1)
              (local.get $l4)))
          (i32.const 1)))
      (local.set $p1
        (i32.add
          (local.get $p0)
          (i32.const 1)))
      (local.set $p0
        (i32.add
          (local.get $l3)
          (i32.shl
            (local.get $l4)
            (i32.const 2))))
      (loop $L2
        (local.set $l2
          (i32.const 0))
        (i32.store
          (local.get $p0)
          (i32.const 0))
        (local.set $p0
          (i32.add
            (local.get $p0)
            (i32.const 4)))
        (br_if $L2
          (i32.gt_s
            (local.tee $p1
              (i32.add
                (local.get $p1)
                (i32.const -1)))
            (i32.const 1)))))
    (local.get $l2))
  (func $mp_clamp (type $t23) (param $p0 i32)
    (local $l1 i32) (local $l2 i32)
    (block $B0
      (block $B1
        (br_if $B1
          (i32.lt_s
            (local.tee $l1
              (i32.load
                (local.get $p0)))
            (i32.const 1)))
        (local.set $l2
          (i32.add
            (i32.add
              (i32.shl
                (local.get $l1)
                (i32.const 2))
              (i32.load offset=12
                (local.get $p0)))
            (i32.const -4)))
        (loop $L2
          (br_if $B0
            (i32.load
              (local.get $l2)))
          (i32.store
            (local.get $p0)
            (local.tee $l1
              (i32.add
                (local.get $l1)
                (i32.const -1))))
          (local.set $l2
            (i32.add
              (local.get $l2)
              (i32.const -4)))
          (br_if $L2
            (i32.gt_s
              (i32.add
                (local.get $l1)
                (i32.const 1))
              (i32.const 1)))))
      (br_if $B0
        (local.get $l1))
      (i32.store offset=8
        (local.get $p0)
        (i32.const 0))))
  (func $mp_init_size (type $t26) (param $p0 i32) (param $p1 i32) (result i32)
    (local $l2 i32)
    (i32.store offset=12
      (local.get $p0)
      (local.tee $p1
        (call $mp_calloc
          (local.tee $l2
            (select
              (local.get $p1)
              (i32.const 3)
              (i32.gt_s
                (local.get $p1)
                (i32.const 3))))
          (i32.const 4))))
    (block $B0
      (br_if $B0
        (local.get $p1))
      (return
        (i32.const -2)))
    (i32.store offset=8
      (local.get $p0)
      (i32.const 0))
    (i32.store offset=4
      (local.get $p0)
      (local.get $l2))
    (i32.store
      (local.get $p0)
      (i32.const 0))
    (i32.const 0))
  (func $mp_exch (type $t20) (param $p0 i32) (param $p1 i32)
    (local $l2 i64) (local $l3 i64) (local $l4 i32)
    (drop
      (i32.sub
        (global.get $g4)
        (i32.const 16)))
    (local.set $l2
      (i64.load align=4
        (local.get $p0)))
    (i64.store align=4
      (local.get $p0)
      (i64.load align=4
        (local.get $p1)))
    (local.set $l3
      (i64.load align=4
        (local.tee $p0
          (i32.add
            (local.get $p0)
            (i32.const 8)))))
    (i64.store align=4
      (local.get $p0)
      (i64.load align=4
        (local.tee $l4
          (i32.add
            (local.get $p1)
            (i32.const 8)))))
    (i64.store align=4
      (local.get $p1)
      (local.get $l2))
    (i64.store align=4
      (local.get $l4)
      (local.get $l3)))
  (func $mp_clear (type $t23) (param $p0 i32)
    (local $l1 i32) (local $l2 i32) (local $l3 i32) (local $l4 i32) (local $l5 i32) (local $l6 i32)
    (block $B0
      (br_if $B0
        (i32.eqz
          (local.tee $l1
            (i32.load offset=12
              (local.get $p0)))))
      (block $B1
        (br_if $B1
          (i32.eqz
            (local.tee $l2
              (i32.shl
                (i32.load offset=4
                  (local.get $p0))
                (i32.const 2)))))
        (local.set $l3
          (i32.sub
            (i32.const 0)
            (local.get $l2)))
        (local.set $l4
          (local.get $l1))
        (loop $L2
          (i32.store8
            (local.get $l4)
            (i32.const 0))
          (local.set $l4
            (i32.add
              (local.get $l4)
              (i32.const 1)))
          (local.set $l6
            (i32.ge_u
              (local.tee $l5
                (i32.add
                  (local.get $l3)
                  (i32.const 1)))
              (local.get $l3)))
          (local.set $l3
            (local.get $l5))
          (br_if $L2
            (local.get $l6))))
      (call $mp_free
        (local.get $l1)
        (local.get $l2))
      (i64.store align=4
        (local.get $p0)
        (i64.const 0))
      (i64.store offset=8 align=4
        (local.get $p0)
        (i64.const 0))))
  (func $mp_copy (type $t26) (param $p0 i32) (param $p1 i32) (result i32)
    (local $l2 i32) (local $l3 i32) (local $l4 i32) (local $l5 i32)
    (block $B0
      (block $B1
        (br_if $B1
          (i32.eq
            (local.get $p0)
            (local.get $p1)))
        (block $B2
          (br_if $B2
            (i32.ge_s
              (i32.load offset=4
                (local.get $p1))
              (local.tee $l2
                (i32.load
                  (local.get $p0)))))
          (br_if $B0
            (local.tee $l3
              (call $mp_grow
                (local.get $p1)
                (local.get $l2))))
          (local.set $l2
            (i32.load
              (local.get $p0))))
        (local.set $l3
          (i32.load offset=12
            (local.get $p1)))
        (block $B3
          (block $B4
            (br_if $B4
              (i32.ge_s
                (local.get $l2)
                (i32.const 1)))
            (local.set $l4
              (i32.const 0))
            (br $B3))
          (local.set $l5
            (i32.load offset=12
              (local.get $p0)))
          (local.set $l4
            (i32.const 0))
          (loop $L5
            (i32.store
              (local.get $l3)
              (i32.load
                (local.get $l5)))
            (local.set $l3
              (i32.add
                (local.get $l3)
                (i32.const 4)))
            (local.set $l5
              (i32.add
                (local.get $l5)
                (i32.const 4)))
            (br_if $L5
              (i32.lt_s
                (local.tee $l4
                  (i32.add
                    (local.get $l4)
                    (i32.const 1)))
                (local.tee $l2
                  (i32.load
                    (local.get $p0)))))))
        (block $B6
          (br_if $B6
            (i32.lt_s
              (local.tee $l5
                (i32.sub
                  (i32.load
                    (local.get $p1))
                  (local.get $l4)))
              (i32.const 1)))
          (local.set $l5
            (i32.add
              (local.get $l5)
              (i32.const 1)))
          (loop $L7
            (i32.store
              (local.get $l3)
              (i32.const 0))
            (local.set $l3
              (i32.add
                (local.get $l3)
                (i32.const 4)))
            (br_if $L7
              (i32.gt_s
                (local.tee $l5
                  (i32.add
                    (local.get $l5)
                    (i32.const -1)))
                (i32.const 1))))
          (local.set $l2
            (i32.load
              (local.get $p0))))
        (i32.store
          (local.get $p1)
          (local.get $l2))
        (i32.store offset=8
          (local.get $p1)
          (i32.load offset=8
            (local.get $p0))))
      (local.set $l3
        (i32.const 0)))
    (local.get $l3))
  (func $mp_count_bits (type $t19) (param $p0 i32) (result i32)
    (local $l1 i32) (local $l2 i32)
    (block $B0
      (br_if $B0
        (local.tee $l1
          (i32.load
            (local.get $p0))))
      (return
        (i32.const 0)))
    (local.set $l1
      (i32.mul
        (local.tee $l2
          (i32.add
            (local.get $l1)
            (i32.const -1)))
        (i32.const 28)))
    (block $B1
      (br_if $B1
        (i32.eqz
          (local.tee $p0
            (i32.load
              (i32.add
                (i32.load offset=12
                  (local.get $p0))
                (i32.shl
                  (local.get $l2)
                  (i32.const 2)))))))
      (local.set $l1
        (i32.add
          (i32.sub
            (local.get $l1)
            (i32.clz
              (local.get $p0)))
          (i32.const 32))))
    (local.get $l1))
  (func $mp_mul_2d (type $t18) (param $p0 i32) (param $p1 i32) (param $p2 i32) (result i32)
    (local $l3 i32) (local $l4 i32) (local $l5 i32) (local $l6 i32) (local $l7 i32) (local $l8 i32)
    (block $B0
      (block $B1
        (br_if $B1
          (i32.eq
            (local.get $p0)
            (local.get $p2)))
        (br_if $B0
          (local.tee $p0
            (call $mp_copy
              (local.get $p0)
              (local.get $p2)))))
      (block $B2
        (br_if $B2
          (i32.gt_s
            (i32.load offset=4
              (local.get $p2))
            (local.tee $p0
              (i32.add
                (i32.load
                  (local.get $p2))
                (local.tee $l3
                  (i32.div_s
                    (local.get $p1)
                    (i32.const 28)))))))
        (br_if $B0
          (local.tee $p0
            (call $mp_grow
              (local.get $p2)
              (i32.add
                (local.get $p0)
                (i32.const 1))))))
      (block $B3
        (br_if $B3
          (i32.lt_s
            (local.get $p1)
            (i32.const 28)))
        (br_if $B0
          (local.tee $p0
            (call $mp_lshd
              (local.get $p2)
              (local.get $l3)))))
      (block $B4
        (br_if $B4
          (i32.eqz
            (local.tee $l4
              (i32.sub
                (local.get $p1)
                (i32.mul
                  (local.get $l3)
                  (i32.const 28))))))
        (br_if $B4
          (i32.lt_s
            (i32.load
              (local.get $p2))
            (i32.const 1)))
        (local.set $l5
          (i32.sub
            (i32.const 28)
            (local.get $l4)))
        (local.set $l6
          (i32.xor
            (i32.shl
              (i32.const -1)
              (local.get $l4))
            (i32.const -1)))
        (local.set $l3
          (i32.const 0))
        (local.set $p1
          (i32.const 0))
        (local.set $p0
          (local.tee $l7
            (i32.load offset=12
              (local.get $p2))))
        (loop $L5
          (i32.store
            (local.get $p0)
            (i32.and
              (i32.or
                (i32.shl
                  (local.tee $l8
                    (i32.load
                      (local.get $p0)))
                  (local.get $l4))
                (local.get $p1))
              (i32.const 268435455)))
          (local.set $p0
            (i32.add
              (local.get $p0)
              (i32.const 4)))
          (local.set $p1
            (i32.and
              (i32.shr_u
                (local.get $l8)
                (local.get $l5))
              (local.get $l6)))
          (br_if $L5
            (i32.lt_s
              (local.tee $l3
                (i32.add
                  (local.get $l3)
                  (i32.const 1)))
              (local.tee $l8
                (i32.load
                  (local.get $p2))))))
        (br_if $B4
          (i32.eqz
            (local.get $p1)))
        (i32.store
          (local.get $p2)
          (i32.add
            (local.get $l8)
            (i32.const 1)))
        (i32.store
          (i32.add
            (local.get $l7)
            (i32.shl
              (local.get $l8)
              (i32.const 2)))
          (local.get $p1)))
      (call $mp_clamp
        (local.get $p2))
      (local.set $p0
        (i32.const 0)))
    (local.get $p0))
  (func $mp_rshd (type $t20) (param $p0 i32) (param $p1 i32)
    (local $l2 i32) (local $l3 i32) (local $l4 i32) (local $l5 i32)
    (block $B0
      (br_if $B0
        (i32.lt_s
          (local.get $p1)
          (i32.const 1)))
      (block $B1
        (br_if $B1
          (i32.gt_s
            (i32.load
              (local.get $p0))
            (local.get $p1)))
        (call $mp_zero
          (local.get $p0))
        (return))
      (local.set $l2
        (i32.shl
          (local.get $p1)
          (i32.const 2)))
      (local.set $l3
        (i32.load offset=12
          (local.get $p0)))
      (local.set $l4
        (i32.const 0))
      (loop $L2
        (i32.store
          (local.get $l3)
          (i32.load
            (i32.add
              (local.get $l3)
              (local.get $l2))))
        (local.set $l3
          (i32.add
            (local.get $l3)
            (i32.const 4)))
        (br_if $L2
          (i32.lt_s
            (local.tee $l4
              (i32.add
                (local.get $l4)
                (i32.const 1)))
            (i32.sub
              (local.tee $l5
                (i32.load
                  (local.get $p0)))
              (local.get $p1)))))
      (block $B3
        (br_if $B3
          (i32.lt_s
            (local.tee $l4
              (i32.sub
                (local.get $l5)
                (local.get $l4)))
            (i32.const 1)))
        (local.set $l4
          (i32.add
            (local.get $l4)
            (i32.const 1)))
        (loop $L4
          (i32.store
            (local.get $l3)
            (i32.const 0))
          (local.set $l3
            (i32.add
              (local.get $l3)
              (i32.const 4)))
          (br_if $L4
            (i32.gt_s
              (local.tee $l4
                (i32.add
                  (local.get $l4)
                  (i32.const -1)))
              (i32.const 1))))
        (local.set $l5
          (i32.load
            (local.get $p0))))
      (i32.store
        (local.get $p0)
        (i32.sub
          (local.get $l5)
          (local.get $p1)))))
  (func $mp_mul_d (type $t18) (param $p0 i32) (param $p1 i32) (param $p2 i32) (result i32)
    (local $l3 i32) (local $l4 i32) (local $l5 i32) (local $l6 i64) (local $l7 i64)
    (block $B0
      (block $B1
        (br_if $B1
          (i32.gt_s
            (i32.load offset=4
              (local.get $p2))
            (local.tee $l3
              (i32.load
                (local.get $p0)))))
        (br_if $B0
          (local.tee $l4
            (call $mp_grow
              (local.get $p2)
              (i32.add
                (local.get $l3)
                (i32.const 1)))))
        (local.set $l3
          (i32.load
            (local.get $p0))))
      (i32.store offset=8
        (local.get $p2)
        (i32.load offset=8
          (local.get $p0)))
      (local.set $l4
        (i32.load offset=12
          (local.get $p2)))
      (local.set $l5
        (i32.load
          (local.get $p2)))
      (block $B2
        (block $B3
          (br_if $B3
            (i32.ge_s
              (local.get $l3)
              (i32.const 1)))
          (local.set $l3
            (i32.const -1))
          (local.set $p1
            (i32.const 0))
          (br $B2))
        (local.set $l6
          (i64.extend_i32_u
            (local.get $p1)))
        (local.set $l3
          (i32.load offset=12
            (local.get $p0)))
        (local.set $l7
          (i64.const 0))
        (local.set $p1
          (i32.const 0))
        (loop $L4
          (i32.store
            (local.get $l4)
            (i32.and
              (i32.wrap_i64
                (local.tee $l7
                  (i64.add
                    (i64.mul
                      (i64.load32_u
                        (local.get $l3))
                      (local.get $l6))
                    (i64.and
                      (local.get $l7)
                      (i64.const 4294967295)))))
              (i32.const 268435455)))
          (local.set $l7
            (i64.shr_u
              (local.get $l7)
              (i64.const 28)))
          (local.set $l4
            (i32.add
              (local.get $l4)
              (i32.const 4)))
          (local.set $l3
            (i32.add
              (local.get $l3)
              (i32.const 4)))
          (br_if $L4
            (i32.lt_s
              (local.tee $p1
                (i32.add
                  (local.get $p1)
                  (i32.const 1)))
              (i32.load
                (local.get $p0)))))
        (local.set $l3
          (i32.xor
            (local.get $p1)
            (i32.const -1)))
        (local.set $p1
          (i32.wrap_i64
            (local.get $l7))))
      (i32.store
        (local.get $l4)
        (local.get $p1))
      (block $B5
        (br_if $B5
          (i32.lt_s
            (local.tee $l3
              (i32.add
                (local.get $l5)
                (local.get $l3)))
            (i32.const 1)))
        (local.set $l4
          (i32.add
            (local.get $l4)
            (i32.const 4)))
        (local.set $l3
          (i32.add
            (local.get $l3)
            (i32.const 1)))
        (loop $L6
          (i32.store
            (local.get $l4)
            (i32.const 0))
          (local.set $l4
            (i32.add
              (local.get $l4)
              (i32.const 4)))
          (br_if $L6
            (i32.gt_s
              (local.tee $l3
                (i32.add
                  (local.get $l3)
                  (i32.const -1)))
              (i32.const 1)))))
      (i32.store
        (local.get $p2)
        (i32.add
          (i32.load
            (local.get $p0))
          (i32.const 1)))
      (call $mp_clamp
        (local.get $p2))
      (local.set $l4
        (i32.const 0)))
    (local.get $l4))
  (func $mp_div_2d (type $t33) (param $p0 i32) (param $p1 i32) (param $p2 i32) (param $p3 i32) (result i32)
    (local $l4 i32) (local $l5 i32) (local $l6 i32) (local $l7 i32)
    (local.set $l4
      (call $mp_copy
        (local.get $p0)
        (local.get $p2)))
    (block $B0
      (block $B1
        (br_if $B1
          (i32.gt_s
            (local.get $p1)
            (i32.const 0)))
        (br_if $B0
          (i32.eqz
            (local.get $p3)))
        (call $mp_zero
          (local.get $p3))
        (return
          (local.get $l4)))
      (br_if $B0
        (local.get $l4))
      (block $B2
        (br_if $B2
          (i32.eqz
            (local.get $p3)))
        (br_if $B0
          (local.tee $l4
            (call $mp_mod_2d
              (local.get $p0)
              (local.get $p1)
              (local.get $p3)))))
      (block $B3
        (br_if $B3
          (i32.lt_s
            (local.get $p1)
            (i32.const 28)))
        (call $mp_rshd
          (local.get $p2)
          (i32.div_u
            (local.get $p1)
            (i32.const 28))))
      (block $B4
        (br_if $B4
          (i32.eqz
            (local.tee $l5
              (i32.rem_u
                (local.get $p1)
                (i32.const 28)))))
        (br_if $B4
          (i32.lt_s
            (local.tee $p1
              (i32.load
                (local.get $p2)))
            (i32.const 1)))
        (local.set $l6
          (i32.sub
            (i32.const 28)
            (local.get $l5)))
        (local.set $l7
          (i32.xor
            (i32.shl
              (i32.const -1)
              (local.get $l5))
            (i32.const -1)))
        (local.set $l4
          (i32.add
            (i32.load offset=12
              (local.get $p2))
            (i32.shl
              (i32.add
                (local.get $p1)
                (i32.const -1))
              (i32.const 2))))
        (local.set $p0
          (i32.const 0))
        (loop $L5
          (i32.store
            (local.get $l4)
            (i32.or
              (i32.shr_u
                (local.tee $p3
                  (i32.load
                    (local.get $l4)))
                (local.get $l5))
              (i32.shl
                (local.get $p0)
                (local.get $l6))))
          (local.set $l4
            (i32.add
              (local.get $l4)
              (i32.const -4)))
          (local.set $p0
            (i32.and
              (local.get $p3)
              (local.get $l7)))
          (br_if $L5
            (i32.gt_s
              (local.tee $p1
                (i32.add
                  (local.get $p1)
                  (i32.const -1)))
              (i32.const 0)))))
      (call $mp_clamp
        (local.get $p2))
      (local.set $l4
        (i32.const 0)))
    (local.get $l4))
  (func $mp_mod_2d (type $t18) (param $p0 i32) (param $p1 i32) (param $p2 i32) (result i32)
    (local $l3 i32) (local $l4 i32) (local $l5 i32) (local $l6 i32)
    (block $B0
      (br_if $B0
        (i32.gt_s
          (local.get $p1)
          (i32.const 0)))
      (call $mp_zero
        (local.get $p2))
      (return
        (i32.const 0)))
    (local.set $l3
      (i32.load
        (local.get $p0)))
    (local.set $l4
      (call $mp_copy
        (local.get $p0)
        (local.get $p2)))
    (block $B1
      (br_if $B1
        (i32.le_s
          (i32.mul
            (local.get $l3)
            (i32.const 28))
          (local.get $p1)))
      (br_if $B1
        (local.get $l4))
      (local.set $l4
        (i32.const 0))
      (local.set $l5
        (i32.load offset=12
          (local.get $p2)))
      (block $B2
        (br_if $B2
          (i32.lt_s
            (local.tee $p0
              (i32.sub
                (i32.load
                  (local.get $p2))
                (local.tee $p1
                  (i32.add
                    (local.tee $l3
                      (i32.div_u
                        (local.get $p1)
                        (i32.const 28)))
                    (i32.ne
                      (local.tee $l6
                        (i32.sub
                          (local.get $p1)
                          (i32.mul
                            (local.get $l3)
                            (i32.const 28))))
                      (i32.const 0))))))
            (i32.const 1)))
        (local.set $p1
          (i32.add
            (local.get $l5)
            (i32.shl
              (local.get $p1)
              (i32.const 2))))
        (local.set $p0
          (i32.add
            (local.get $p0)
            (i32.const 1)))
        (loop $L3
          (i32.store
            (local.get $p1)
            (i32.const 0))
          (local.set $p1
            (i32.add
              (local.get $p1)
              (i32.const 4)))
          (br_if $L3
            (i32.gt_s
              (local.tee $p0
                (i32.add
                  (local.get $p0)
                  (i32.const -1)))
              (i32.const 1)))))
      (i32.store
        (local.tee $p1
          (i32.add
            (local.get $l5)
            (i32.shl
              (local.get $l3)
              (i32.const 2))))
        (i32.and
          (i32.load
            (local.get $p1))
          (i32.xor
            (i32.shl
              (i32.const -1)
              (local.get $l6))
            (i32.const -1))))
      (call $mp_clamp
        (local.get $p2)))
    (local.get $l4))
  (func $s_mp_balance_mul (type $t18) (param $p0 i32) (param $p1 i32) (param $p2 i32) (result i32)
    (local $l3 i32) (local $l4 i32) (local $l5 i32) (local $l6 i32) (local $l7 i32) (local $l8 i32) (local $l9 i32) (local $l10 i32) (local $l11 i32)
    (global.set $g4
      (local.tee $l3
        (i32.sub
          (global.get $g4)
          (i32.const 96))))
    (local.set $l7
      (i32.div_s
        (select
          (local.tee $l4
            (i32.load
              (local.get $p0)))
          (local.tee $l5
            (i32.load
              (local.get $p1)))
          (i32.gt_s
            (local.get $l4)
            (local.get $l5)))
        (local.tee $l6
          (select
            (local.get $l4)
            (local.get $l5)
            (i32.lt_s
              (local.get $l4)
              (local.get $l5))))))
    (block $B0
      (br_if $B0
        (local.tee $l8
          (call $mp_init_size
            (i32.add
              (local.get $l3)
              (i32.const 80))
            (i32.add
              (local.get $l6)
              (i32.const 2)))))
      (i32.store offset=20
        (local.get $l3)
        (i32.const 0))
      (i32.store offset=16
        (local.get $l3)
        (i32.add
          (local.get $l3)
          (i32.const 32)))
      (block $B1
        (br_if $B1
          (i32.eqz
            (local.tee $l8
              (call $mp_init_multi
                (i32.add
                  (local.get $l3)
                  (i32.const 64))
                (i32.add
                  (local.get $l3)
                  (i32.const 16))))))
        (call $mp_clear
          (i32.add
            (local.get $l3)
            (i32.const 80)))
        (br $B0))
      (block $B2
        (block $B3
          (br_if $B3
            (i32.ge_s
              (local.get $l4)
              (local.get $l5)))
          (i64.store
            (i32.add
              (i32.add
                (local.get $l3)
                (i32.const 48))
              (i32.const 8))
            (i64.load align=4
              (i32.add
                (local.get $p0)
                (i32.const 8))))
          (i64.store offset=48
            (local.get $l3)
            (i64.load align=4
              (local.get $p0)))
          (local.set $l9
            (i32.load offset=12
              (local.get $p1)))
          (local.set $l10
            (i32.load
              (local.get $p1)))
          (br $B2))
        (i64.store
          (i32.add
            (i32.add
              (local.get $l3)
              (i32.const 48))
            (i32.const 8))
          (i64.load align=4
            (i32.add
              (local.get $p1)
              (i32.const 8))))
        (i64.store offset=48
          (local.get $l3)
          (i64.load align=4
            (local.get $p1)))
        (local.set $l9
          (i32.load offset=12
            (local.get $p0)))
        (local.set $l10
          (i32.load
            (local.get $p0))))
      (block $B4
        (block $B5
          (block $B6
            (br_if $B6
              (i32.ge_s
                (local.get $l7)
                (i32.const 1)))
            (local.set $l7
              (i32.const 0))
            (local.set $p1
              (i32.const 0))
            (br $B5))
          (local.set $l11
            (i32.lt_s
              (local.get $l6)
              (i32.const 1)))
          (local.set $p1
            (i32.const 0))
          (local.set $p0
            (i32.const 0))
          (loop $L7
            (i32.store offset=80
              (local.get $l3)
              (i32.const 0))
            (block $B8
              (br_if $B8
                (local.get $l11))
              (local.set $l8
                (i32.add
                  (local.get $l9)
                  (i32.shl
                    (local.get $p1)
                    (i32.const 2))))
              (local.set $l5
                (i32.const 0))
              (local.set $l4
                (i32.load offset=92
                  (local.get $l3)))
              (loop $L9
                (i32.store
                  (local.get $l4)
                  (i32.load
                    (local.get $l8)))
                (i32.store offset=80
                  (local.get $l3)
                  (i32.add
                    (i32.load offset=80
                      (local.get $l3))
                    (i32.const 1)))
                (local.set $l4
                  (i32.add
                    (local.get $l4)
                    (i32.const 4)))
                (local.set $l8
                  (i32.add
                    (local.get $l8)
                    (i32.const 4)))
                (br_if $L9
                  (i32.lt_s
                    (local.tee $l5
                      (i32.add
                        (local.get $l5)
                        (i32.const 1)))
                    (local.get $l6))))
              (local.set $p1
                (i32.add
                  (local.get $p1)
                  (local.get $l5))))
            (call $mp_clamp
              (i32.add
                (local.get $l3)
                (i32.const 80)))
            (br_if $B4
              (local.tee $l8
                (call $mp_mul
                  (i32.add
                    (local.get $l3)
                    (i32.const 80))
                  (i32.add
                    (local.get $l3)
                    (i32.const 48))
                  (i32.add
                    (local.get $l3)
                    (i32.const 64)))))
            (br_if $B4
              (local.tee $l8
                (call $mp_lshd
                  (i32.add
                    (local.get $l3)
                    (i32.const 64))
                  (i32.mul
                    (local.get $p0)
                    (local.get $l6)))))
            (br_if $B4
              (local.tee $l8
                (call $mp_add
                  (i32.add
                    (local.get $l3)
                    (i32.const 32))
                  (i32.add
                    (local.get $l3)
                    (i32.const 64))
                  (i32.add
                    (local.get $l3)
                    (i32.const 32)))))
            (br_if $L7
              (i32.ne
                (local.tee $p0
                  (i32.add
                    (local.get $p0)
                    (i32.const 1)))
                (local.get $l7)))))
        (block $B10
          (br_if $B10
            (i32.le_s
              (local.get $l10)
              (local.get $p1)))
          (i32.store offset=80
            (local.get $l3)
            (i32.const 0))
          (local.set $l5
            (i32.sub
              (local.get $l10)
              (local.get $p1)))
          (local.set $l8
            (i32.add
              (local.get $l9)
              (i32.shl
                (local.get $p1)
                (i32.const 2))))
          (local.set $l4
            (i32.load offset=92
              (local.get $l3)))
          (loop $L11
            (i32.store
              (local.get $l4)
              (i32.load
                (local.get $l8)))
            (i32.store offset=80
              (local.get $l3)
              (i32.add
                (i32.load offset=80
                  (local.get $l3))
                (i32.const 1)))
            (local.set $l4
              (i32.add
                (local.get $l4)
                (i32.const 4)))
            (local.set $l8
              (i32.add
                (local.get $l8)
                (i32.const 4)))
            (br_if $L11
              (local.tee $l5
                (i32.add
                  (local.get $l5)
                  (i32.const -1)))))
          (call $mp_clamp
            (i32.add
              (local.get $l3)
              (i32.const 80)))
          (br_if $B4
            (local.tee $l8
              (call $mp_mul
                (i32.add
                  (local.get $l3)
                  (i32.const 80))
                (i32.add
                  (local.get $l3)
                  (i32.const 48))
                (i32.add
                  (local.get $l3)
                  (i32.const 64)))))
          (br_if $B4
            (local.tee $l8
              (call $mp_lshd
                (i32.add
                  (local.get $l3)
                  (i32.const 64))
                (i32.mul
                  (local.get $l7)
                  (local.get $l6)))))
          (br_if $B4
            (local.tee $l8
              (call $mp_add
                (i32.add
                  (local.get $l3)
                  (i32.const 32))
                (i32.add
                  (local.get $l3)
                  (i32.const 64))
                (i32.add
                  (local.get $l3)
                  (i32.const 32))))))
        (call $mp_exch
          (i32.add
            (local.get $l3)
            (i32.const 32))
          (local.get $p2))
        (local.set $l8
          (i32.const 0)))
      (i32.store offset=8
        (local.get $l3)
        (i32.const 0))
      (i32.store offset=4
        (local.get $l3)
        (i32.add
          (local.get $l3)
          (i32.const 32)))
      (i32.store
        (local.get $l3)
        (i32.add
          (local.get $l3)
          (i32.const 64)))
      (call $mp_clear_multi
        (i32.add
          (local.get $l3)
          (i32.const 80))
        (local.get $l3)))
    (global.set $g4
      (i32.add
        (local.get $l3)
        (i32.const 96)))
    (local.get $l8))
  (func $s_mp_toom_mul (type $t18) (param $p0 i32) (param $p1 i32) (param $p2 i32) (result i32)
    (local $l3 i32) (local $l4 i32) (local $l5 i32) (local $l6 i32) (local $l7 i32) (local $l8 i32) (local $l9 i32) (local $l10 i32) (local $l11 i32)
    (global.set $g4
      (local.tee $l3
        (i32.sub
          (global.get $g4)
          (i32.const 176))))
    (i32.store offset=24
      (local.get $l3)
      (i32.const 0))
    (i32.store offset=16
      (local.get $l3)
      (i32.add
        (local.get $l3)
        (i32.const 144)))
    (i32.store offset=20
      (local.get $l3)
      (i32.add
        (local.get $l3)
        (i32.const 128)))
    (block $B0
      (br_if $B0
        (local.tee $l4
          (call $mp_init_multi
            (i32.add
              (local.get $l3)
              (i32.const 160))
            (i32.add
              (local.get $l3)
              (i32.const 16)))))
      (block $B1
        (br_if $B1
          (local.tee $l4
            (call $mp_init_size
              (i32.add
                (local.get $l3)
                (i32.const 112))
              (local.tee $l7
                (i32.div_s
                  (local.tee $l6
                    (select
                      (local.tee $l4
                        (i32.load
                          (local.get $p0)))
                      (local.tee $l5
                        (i32.load
                          (local.get $p1)))
                      (i32.lt_s
                        (local.get $l4)
                        (local.get $l5))))
                  (i32.const 3))))))
        (local.set $l8
          (i32.const 0))
        (block $B2
          (br_if $B2
            (i32.lt_s
              (local.get $l6)
              (i32.const 3)))
          (local.set $l4
            (i32.load offset=12
              (local.get $p0)))
          (local.set $l5
            (i32.load offset=124
              (local.get $l3)))
          (local.set $l8
            (local.get $l7))
          (loop $L3
            (i32.store
              (local.get $l5)
              (i32.load
                (local.get $l4)))
            (i32.store offset=112
              (local.get $l3)
              (i32.add
                (i32.load offset=112
                  (local.get $l3))
                (i32.const 1)))
            (local.set $l4
              (i32.add
                (local.get $l4)
                (i32.const 4)))
            (local.set $l5
              (i32.add
                (local.get $l5)
                (i32.const 4)))
            (br_if $L3
              (local.tee $l8
                (i32.add
                  (local.get $l8)
                  (i32.const -1)))))
          (local.set $l8
            (local.get $l7)))
        (call $mp_clamp
          (i32.add
            (local.get $l3)
            (i32.const 112)))
        (block $B4
          (br_if $B4
            (local.tee $l4
              (call $mp_init_size
                (i32.add
                  (local.get $l3)
                  (i32.const 96))
                (local.get $l7))))
          (block $B5
            (br_if $B5
              (i32.ge_s
                (local.get $l8)
                (local.tee $l9
                  (i32.shl
                    (local.get $l7)
                    (i32.const 1)))))
            (local.set $l4
              (i32.sub
                (local.get $l8)
                (local.get $l9)))
            (local.set $l5
              (i32.add
                (i32.load offset=12
                  (local.get $p0))
                (i32.shl
                  (local.get $l8)
                  (i32.const 2))))
            (local.set $l8
              (i32.add
                (i32.load offset=108
                  (local.get $l3))
                (i32.shl
                  (i32.sub
                    (local.get $l8)
                    (local.get $l7))
                  (i32.const 2))))
            (loop $L6
              (i32.store
                (local.get $l8)
                (i32.load
                  (local.get $l5)))
              (i32.store offset=96
                (local.get $l3)
                (i32.add
                  (i32.load offset=96
                    (local.get $l3))
                  (i32.const 1)))
              (local.set $l5
                (i32.add
                  (local.get $l5)
                  (i32.const 4)))
              (local.set $l8
                (i32.add
                  (local.get $l8)
                  (i32.const 4)))
              (local.set $l11
                (i32.ge_u
                  (local.tee $l10
                    (i32.add
                      (local.get $l4)
                      (i32.const 1)))
                  (local.get $l4)))
              (local.set $l4
                (local.get $l10))
              (br_if $L6
                (local.get $l11)))
            (local.set $l8
              (local.get $l9)))
          (call $mp_clamp
            (i32.add
              (local.get $l3)
              (i32.const 96)))
          (block $B7
            (br_if $B7
              (local.tee $l4
                (call $mp_init_size
                  (i32.add
                    (local.get $l3)
                    (i32.const 80))
                  (i32.sub
                    (i32.load
                      (local.get $p0))
                    (local.get $l9)))))
            (block $B8
              (br_if $B8
                (i32.ge_s
                  (local.get $l8)
                  (i32.load
                    (local.get $p0))))
              (local.set $l4
                (i32.add
                  (i32.load offset=12
                    (local.get $p0))
                  (i32.shl
                    (local.get $l8)
                    (i32.const 2))))
              (local.set $l5
                (i32.add
                  (i32.load offset=92
                    (local.get $l3))
                  (i32.shl
                    (i32.sub
                      (local.get $l8)
                      (local.get $l9))
                    (i32.const 2))))
              (loop $L9
                (i32.store
                  (local.get $l5)
                  (i32.load
                    (local.get $l4)))
                (i32.store offset=80
                  (local.get $l3)
                  (i32.add
                    (i32.load offset=80
                      (local.get $l3))
                    (i32.const 1)))
                (local.set $l4
                  (i32.add
                    (local.get $l4)
                    (i32.const 4)))
                (local.set $l5
                  (i32.add
                    (local.get $l5)
                    (i32.const 4)))
                (br_if $L9
                  (i32.lt_s
                    (local.tee $l8
                      (i32.add
                        (local.get $l8)
                        (i32.const 1)))
                    (i32.load
                      (local.get $p0))))))
            (call $mp_clamp
              (i32.add
                (local.get $l3)
                (i32.const 80)))
            (block $B10
              (br_if $B10
                (local.tee $l4
                  (call $mp_init_size
                    (i32.add
                      (local.get $l3)
                      (i32.const 64))
                    (local.get $l7))))
              (local.set $l8
                (i32.const 0))
              (block $B11
                (br_if $B11
                  (i32.lt_s
                    (local.get $l6)
                    (i32.const 3)))
                (local.set $l4
                  (i32.load offset=12
                    (local.get $p1)))
                (local.set $l5
                  (i32.load offset=76
                    (local.get $l3)))
                (local.set $l8
                  (local.get $l7))
                (loop $L12
                  (i32.store
                    (local.get $l5)
                    (i32.load
                      (local.get $l4)))
                  (i32.store offset=64
                    (local.get $l3)
                    (i32.add
                      (i32.load offset=64
                        (local.get $l3))
                      (i32.const 1)))
                  (local.set $l4
                    (i32.add
                      (local.get $l4)
                      (i32.const 4)))
                  (local.set $l5
                    (i32.add
                      (local.get $l5)
                      (i32.const 4)))
                  (br_if $L12
                    (local.tee $l8
                      (i32.add
                        (local.get $l8)
                        (i32.const -1)))))
                (local.set $l8
                  (local.get $l7)))
              (call $mp_clamp
                (i32.add
                  (local.get $l3)
                  (i32.const 64)))
              (block $B13
                (br_if $B13
                  (local.tee $l4
                    (call $mp_init_size
                      (i32.add
                        (local.get $l3)
                        (i32.const 48))
                      (local.get $l7))))
                (local.set $l11
                  (i32.sub
                    (i32.const 0)
                    (local.get $l9)))
                (block $B14
                  (br_if $B14
                    (i32.ge_s
                      (local.get $l8)
                      (local.get $l9)))
                  (local.set $l4
                    (i32.sub
                      (local.get $l8)
                      (local.get $l9)))
                  (local.set $l5
                    (i32.add
                      (i32.load offset=12
                        (local.get $p1))
                      (i32.shl
                        (local.get $l8)
                        (i32.const 2))))
                  (local.set $l8
                    (i32.add
                      (i32.load offset=60
                        (local.get $l3))
                      (i32.shl
                        (i32.sub
                          (local.get $l8)
                          (local.get $l7))
                        (i32.const 2))))
                  (loop $L15
                    (i32.store
                      (local.get $l8)
                      (i32.load
                        (local.get $l5)))
                    (i32.store offset=48
                      (local.get $l3)
                      (i32.add
                        (i32.load offset=48
                          (local.get $l3))
                        (i32.const 1)))
                    (local.set $l5
                      (i32.add
                        (local.get $l5)
                        (i32.const 4)))
                    (local.set $l8
                      (i32.add
                        (local.get $l8)
                        (i32.const 4)))
                    (local.set $l10
                      (i32.ge_u
                        (local.tee $p0
                          (i32.add
                            (local.get $l4)
                            (i32.const 1)))
                        (local.get $l4)))
                    (local.set $l4
                      (local.get $p0))
                    (br_if $L15
                      (local.get $l10)))
                  (local.set $l8
                    (local.get $l9)))
                (call $mp_clamp
                  (i32.add
                    (local.get $l3)
                    (i32.const 48)))
                (block $B16
                  (br_if $B16
                    (local.tee $l4
                      (call $mp_init_size
                        (i32.add
                          (local.get $l3)
                          (i32.const 32))
                        (i32.add
                          (local.get $l11)
                          (i32.load
                            (local.get $p1))))))
                  (block $B17
                    (br_if $B17
                      (i32.ge_s
                        (local.get $l8)
                        (i32.load
                          (local.get $p1))))
                    (local.set $l4
                      (i32.add
                        (i32.load offset=12
                          (local.get $p1))
                        (i32.shl
                          (local.get $l8)
                          (i32.const 2))))
                    (local.set $l5
                      (i32.add
                        (i32.load offset=44
                          (local.get $l3))
                        (i32.shl
                          (i32.sub
                            (local.get $l8)
                            (local.get $l9))
                          (i32.const 2))))
                    (loop $L18
                      (i32.store
                        (local.get $l5)
                        (i32.load
                          (local.get $l4)))
                      (i32.store offset=32
                        (local.get $l3)
                        (i32.add
                          (i32.load offset=32
                            (local.get $l3))
                          (i32.const 1)))
                      (local.set $l4
                        (i32.add
                          (local.get $l4)
                          (i32.const 4)))
                      (local.set $l5
                        (i32.add
                          (local.get $l5)
                          (i32.const 4)))
                      (br_if $L18
                        (i32.lt_s
                          (local.tee $l8
                            (i32.add
                              (local.get $l8)
                              (i32.const 1)))
                          (i32.load
                            (local.get $p1))))))
                  (call $mp_clamp
                    (i32.add
                      (local.get $l3)
                      (i32.const 32)))
                  (block $B19
                    (br_if $B19
                      (local.tee $l4
                        (call $mp_add
                          (i32.add
                            (local.get $l3)
                            (i32.const 80))
                          (i32.add
                            (local.get $l3)
                            (i32.const 96))
                          (i32.add
                            (local.get $l3)
                            (i32.const 128)))))
                    (br_if $B19
                      (local.tee $l4
                        (call $mp_add
                          (i32.add
                            (local.get $l3)
                            (i32.const 128))
                          (i32.add
                            (local.get $l3)
                            (i32.const 112))
                          (i32.add
                            (local.get $l3)
                            (i32.const 144)))))
                    (br_if $B19
                      (local.tee $l4
                        (call $mp_add
                          (i32.add
                            (local.get $l3)
                            (i32.const 32))
                          (i32.add
                            (local.get $l3)
                            (i32.const 48))
                          (local.get $p2))))
                    (br_if $B19
                      (local.tee $l4
                        (call $mp_add
                          (local.get $p2)
                          (i32.add
                            (local.get $l3)
                            (i32.const 64))
                          (i32.add
                            (local.get $l3)
                            (i32.const 160)))))
                    (br_if $B19
                      (local.tee $l4
                        (call $mp_mul
                          (i32.add
                            (local.get $l3)
                            (i32.const 160))
                          (i32.add
                            (local.get $l3)
                            (i32.const 144))
                          (i32.add
                            (local.get $l3)
                            (i32.const 160)))))
                    (br_if $B19
                      (local.tee $l4
                        (call $mp_add
                          (i32.add
                            (local.get $l3)
                            (i32.const 128))
                          (i32.add
                            (local.get $l3)
                            (i32.const 80))
                          (i32.add
                            (local.get $l3)
                            (i32.const 128)))))
                    (br_if $B19
                      (local.tee $l4
                        (call $mp_mul_2
                          (i32.add
                            (local.get $l3)
                            (i32.const 128))
                          (i32.add
                            (local.get $l3)
                            (i32.const 128)))))
                    (br_if $B19
                      (local.tee $l4
                        (call $mp_add
                          (i32.add
                            (local.get $l3)
                            (i32.const 128))
                          (i32.add
                            (local.get $l3)
                            (i32.const 112))
                          (i32.add
                            (local.get $l3)
                            (i32.const 128)))))
                    (br_if $B19
                      (local.tee $l4
                        (call $mp_add
                          (local.get $p2)
                          (i32.add
                            (local.get $l3)
                            (i32.const 32))
                          (local.get $p2))))
                    (br_if $B19
                      (local.tee $l4
                        (call $mp_mul_2
                          (local.get $p2)
                          (local.get $p2))))
                    (br_if $B19
                      (local.tee $l4
                        (call $mp_add
                          (local.get $p2)
                          (i32.add
                            (local.get $l3)
                            (i32.const 64))
                          (local.get $p2))))
                    (br_if $B19
                      (local.tee $l4
                        (call $mp_mul
                          (i32.add
                            (local.get $l3)
                            (i32.const 128))
                          (local.get $p2)
                          (i32.add
                            (local.get $l3)
                            (i32.const 144)))))
                    (br_if $B19
                      (local.tee $l4
                        (call $mp_sub
                          (i32.add
                            (local.get $l3)
                            (i32.const 80))
                          (i32.add
                            (local.get $l3)
                            (i32.const 96))
                          (i32.add
                            (local.get $l3)
                            (i32.const 96)))))
                    (br_if $B19
                      (local.tee $l4
                        (call $mp_add
                          (i32.add
                            (local.get $l3)
                            (i32.const 96))
                          (i32.add
                            (local.get $l3)
                            (i32.const 112))
                          (i32.add
                            (local.get $l3)
                            (i32.const 96)))))
                    (br_if $B19
                      (local.tee $l4
                        (call $mp_sub
                          (i32.add
                            (local.get $l3)
                            (i32.const 32))
                          (i32.add
                            (local.get $l3)
                            (i32.const 48))
                          (i32.add
                            (local.get $l3)
                            (i32.const 48)))))
                    (br_if $B19
                      (local.tee $l4
                        (call $mp_add
                          (i32.add
                            (local.get $l3)
                            (i32.const 48))
                          (i32.add
                            (local.get $l3)
                            (i32.const 64))
                          (i32.add
                            (local.get $l3)
                            (i32.const 48)))))
                    (br_if $B19
                      (local.tee $l4
                        (call $mp_mul
                          (i32.add
                            (local.get $l3)
                            (i32.const 96))
                          (i32.add
                            (local.get $l3)
                            (i32.const 48))
                          (i32.add
                            (local.get $l3)
                            (i32.const 96)))))
                    (br_if $B19
                      (local.tee $l4
                        (call $mp_mul
                          (i32.add
                            (local.get $l3)
                            (i32.const 80))
                          (i32.add
                            (local.get $l3)
                            (i32.const 32))
                          (i32.add
                            (local.get $l3)
                            (i32.const 48)))))
                    (br_if $B19
                      (local.tee $l4
                        (call $mp_sub
                          (i32.add
                            (local.get $l3)
                            (i32.const 144))
                          (i32.add
                            (local.get $l3)
                            (i32.const 96))
                          (i32.add
                            (local.get $l3)
                            (i32.const 144)))))
                    (br_if $B19
                      (local.tee $l4
                        (call $mp_div_3
                          (i32.add
                            (local.get $l3)
                            (i32.const 144))
                          (i32.add
                            (local.get $l3)
                            (i32.const 144))
                          (i32.const 0))))
                    (br_if $B19
                      (local.tee $l4
                        (call $mp_sub
                          (i32.add
                            (local.get $l3)
                            (i32.const 160))
                          (i32.add
                            (local.get $l3)
                            (i32.const 96))
                          (i32.add
                            (local.get $l3)
                            (i32.const 96)))))
                    (br_if $B19
                      (local.tee $l4
                        (call $mp_div_2
                          (i32.add
                            (local.get $l3)
                            (i32.const 96))
                          (i32.add
                            (local.get $l3)
                            (i32.const 96)))))
                    (br_if $B19
                      (local.tee $l4
                        (call $mp_mul
                          (i32.add
                            (local.get $l3)
                            (i32.const 112))
                          (i32.add
                            (local.get $l3)
                            (i32.const 64))
                          (i32.add
                            (local.get $l3)
                            (i32.const 112)))))
                    (br_if $B19
                      (local.tee $l4
                        (call $mp_sub
                          (i32.add
                            (local.get $l3)
                            (i32.const 160))
                          (i32.add
                            (local.get $l3)
                            (i32.const 112))
                          (i32.add
                            (local.get $l3)
                            (i32.const 160)))))
                    (br_if $B19
                      (local.tee $l4
                        (call $mp_sub
                          (i32.add
                            (local.get $l3)
                            (i32.const 144))
                          (i32.add
                            (local.get $l3)
                            (i32.const 160))
                          (i32.add
                            (local.get $l3)
                            (i32.const 144)))))
                    (br_if $B19
                      (local.tee $l4
                        (call $mp_div_2
                          (i32.add
                            (local.get $l3)
                            (i32.const 144))
                          (i32.add
                            (local.get $l3)
                            (i32.const 144)))))
                    (br_if $B19
                      (local.tee $l4
                        (call $mp_sub
                          (i32.add
                            (local.get $l3)
                            (i32.const 160))
                          (i32.add
                            (local.get $l3)
                            (i32.const 96))
                          (i32.add
                            (local.get $l3)
                            (i32.const 160)))))
                    (br_if $B19
                      (local.tee $l4
                        (call $mp_sub
                          (i32.add
                            (local.get $l3)
                            (i32.const 160))
                          (i32.add
                            (local.get $l3)
                            (i32.const 48))
                          (i32.add
                            (local.get $l3)
                            (i32.const 160)))))
                    (br_if $B19
                      (local.tee $l4
                        (call $mp_mul_2
                          (i32.add
                            (local.get $l3)
                            (i32.const 48))
                          (i32.add
                            (local.get $l3)
                            (i32.const 128)))))
                    (br_if $B19
                      (local.tee $l4
                        (call $mp_sub
                          (i32.add
                            (local.get $l3)
                            (i32.const 144))
                          (i32.add
                            (local.get $l3)
                            (i32.const 128))
                          (i32.add
                            (local.get $l3)
                            (i32.const 144)))))
                    (br_if $B19
                      (local.tee $l4
                        (call $mp_sub
                          (i32.add
                            (local.get $l3)
                            (i32.const 96))
                          (i32.add
                            (local.get $l3)
                            (i32.const 144))
                          (i32.add
                            (local.get $l3)
                            (i32.const 96)))))
                    (br_if $B19
                      (local.tee $l4
                        (call $mp_lshd
                          (i32.add
                            (local.get $l3)
                            (i32.const 48))
                          (i32.shl
                            (local.get $l7)
                            (i32.const 2)))))
                    (br_if $B19
                      (local.tee $l4
                        (call $mp_lshd
                          (i32.add
                            (local.get $l3)
                            (i32.const 144))
                          (i32.mul
                            (local.get $l7)
                            (i32.const 3)))))
                    (br_if $B19
                      (local.tee $l4
                        (call $mp_add
                          (i32.add
                            (local.get $l3)
                            (i32.const 48))
                          (i32.add
                            (local.get $l3)
                            (i32.const 144))
                          (i32.add
                            (local.get $l3)
                            (i32.const 48)))))
                    (br_if $B19
                      (local.tee $l4
                        (call $mp_lshd
                          (i32.add
                            (local.get $l3)
                            (i32.const 160))
                          (local.get $l9))))
                    (br_if $B19
                      (local.tee $l4
                        (call $mp_add
                          (i32.add
                            (local.get $l3)
                            (i32.const 48))
                          (i32.add
                            (local.get $l3)
                            (i32.const 160))
                          (i32.add
                            (local.get $l3)
                            (i32.const 48)))))
                    (br_if $B19
                      (local.tee $l4
                        (call $mp_lshd
                          (i32.add
                            (local.get $l3)
                            (i32.const 96))
                          (local.get $l7))))
                    (br_if $B19
                      (local.tee $l4
                        (call $mp_add
                          (i32.add
                            (local.get $l3)
                            (i32.const 48))
                          (i32.add
                            (local.get $l3)
                            (i32.const 96))
                          (i32.add
                            (local.get $l3)
                            (i32.const 48)))))
                    (local.set $l4
                      (call $mp_add
                        (i32.add
                          (local.get $l3)
                          (i32.const 48))
                        (i32.add
                          (local.get $l3)
                          (i32.const 112))
                        (local.get $p2))))
                  (call $mp_clear
                    (i32.add
                      (local.get $l3)
                      (i32.const 32))))
                (call $mp_clear
                  (i32.add
                    (local.get $l3)
                    (i32.const 48))))
              (call $mp_clear
                (i32.add
                  (local.get $l3)
                  (i32.const 64))))
            (call $mp_clear
              (i32.add
                (local.get $l3)
                (i32.const 80))))
          (call $mp_clear
            (i32.add
              (local.get $l3)
              (i32.const 96))))
        (call $mp_clear
          (i32.add
            (local.get $l3)
            (i32.const 112))))
      (i32.store offset=8
        (local.get $l3)
        (i32.const 0))
      (i32.store offset=4
        (local.get $l3)
        (i32.add
          (local.get $l3)
          (i32.const 128)))
      (i32.store
        (local.get $l3)
        (i32.add
          (local.get $l3)
          (i32.const 144)))
      (call $mp_clear_multi
        (i32.add
          (local.get $l3)
          (i32.const 160))
        (local.get $l3)))
    (global.set $g4
      (i32.add
        (local.get $l3)
        (i32.const 176)))
    (local.get $l4))
  (func $s_mp_toom_sqr (type $t26) (param $p0 i32) (param $p1 i32) (result i32)
    (local $l2 i32) (local $l3 i32) (local $l4 i32) (local $l5 i32) (local $l6 i32) (local $l7 i32) (local $l8 i32) (local $l9 i32)
    (global.set $g4
      (local.tee $l2
        (i32.sub
          (global.get $g4)
          (i32.const 64))))
    (block $B0
      (br_if $B0
        (local.tee $l3
          (call $mp_init
            (i32.add
              (local.get $l2)
              (i32.const 48)))))
      (block $B1
        (br_if $B1
          (local.tee $l3
            (call $mp_init_size
              (i32.add
                (local.get $l2)
                (i32.const 32))
              (local.tee $l5
                (i32.div_s
                  (local.tee $l4
                    (i32.load
                      (local.get $p0)))
                  (i32.const 3))))))
        (i32.store offset=32
          (local.get $l2)
          (local.get $l5))
        (block $B2
          (br_if $B2
            (local.tee $l3
              (call $mp_init_size
                (i32.add
                  (local.get $l2)
                  (i32.const 16))
                (local.get $l5))))
          (i32.store offset=16
            (local.get $l2)
            (local.get $l5))
          (block $B3
            (br_if $B3
              (local.tee $l3
                (call $mp_init_size
                  (local.get $l2)
                  (i32.sub
                    (i32.load
                      (local.get $p0))
                    (i32.shl
                      (local.get $l5)
                      (i32.const 1))))))
            (local.set $l3
              (i32.load offset=12
                (local.get $p0)))
            (local.set $l6
              (i32.const 0))
            (block $B4
              (br_if $B4
                (i32.lt_s
                  (local.get $l4)
                  (i32.const 3)))
              (local.set $l4
                (i32.load offset=44
                  (local.get $l2)))
              (local.set $l6
                (local.get $l5))
              (loop $L5
                (i32.store
                  (local.get $l4)
                  (i32.load
                    (local.get $l3)))
                (local.set $l4
                  (i32.add
                    (local.get $l4)
                    (i32.const 4)))
                (local.set $l3
                  (i32.add
                    (local.get $l3)
                    (i32.const 4)))
                (br_if $L5
                  (local.tee $l6
                    (i32.add
                      (local.get $l6)
                      (i32.const -1)))))
              (local.set $l6
                (local.get $l5)))
            (block $B6
              (br_if $B6
                (i32.ge_s
                  (local.get $l6)
                  (local.tee $l7
                    (i32.shl
                      (local.get $l5)
                      (i32.const 1)))))
              (local.set $l4
                (i32.sub
                  (local.get $l6)
                  (local.get $l7)))
              (local.set $l6
                (i32.load offset=28
                  (local.get $l2)))
              (loop $L7
                (i32.store
                  (local.get $l6)
                  (i32.load
                    (local.get $l3)))
                (local.set $l6
                  (i32.add
                    (local.get $l6)
                    (i32.const 4)))
                (local.set $l3
                  (i32.add
                    (local.get $l3)
                    (i32.const 4)))
                (local.set $l9
                  (i32.ge_u
                    (local.tee $l8
                      (i32.add
                        (local.get $l4)
                        (i32.const 1)))
                    (local.get $l4)))
                (local.set $l4
                  (local.get $l8))
                (br_if $L7
                  (local.get $l9)))
              (local.set $l6
                (local.get $l7)))
            (block $B8
              (br_if $B8
                (i32.ge_s
                  (local.get $l6)
                  (i32.load
                    (local.get $p0))))
              (local.set $l4
                (i32.load offset=12
                  (local.get $l2)))
              (loop $L9
                (i32.store
                  (local.get $l4)
                  (i32.load
                    (local.get $l3)))
                (i32.store
                  (local.get $l2)
                  (i32.add
                    (i32.load
                      (local.get $l2))
                    (i32.const 1)))
                (local.set $l4
                  (i32.add
                    (local.get $l4)
                    (i32.const 4)))
                (local.set $l3
                  (i32.add
                    (local.get $l3)
                    (i32.const 4)))
                (br_if $L9
                  (i32.lt_s
                    (local.tee $l6
                      (i32.add
                        (local.get $l6)
                        (i32.const 1)))
                    (i32.load
                      (local.get $p0))))))
            (call $mp_clamp
              (i32.add
                (local.get $l2)
                (i32.const 32)))
            (call $mp_clamp
              (i32.add
                (local.get $l2)
                (i32.const 16)))
            (call $mp_clamp
              (local.get $l2))
            (block $B10
              (br_if $B10
                (local.tee $l3
                  (call $mp_sqr
                    (i32.add
                      (local.get $l2)
                      (i32.const 32))
                    (i32.add
                      (local.get $l2)
                      (i32.const 48)))))
              (br_if $B10
                (local.tee $l3
                  (call $mp_add
                    (i32.add
                      (local.get $l2)
                      (i32.const 32))
                    (local.get $l2)
                    (i32.add
                      (local.get $l2)
                      (i32.const 32)))))
              (br_if $B10
                (local.tee $l3
                  (call $mp_sub
                    (i32.add
                      (local.get $l2)
                      (i32.const 32))
                    (i32.add
                      (local.get $l2)
                      (i32.const 16))
                    (local.get $p1))))
              (br_if $B10
                (local.tee $l3
                  (call $mp_add
                    (i32.add
                      (local.get $l2)
                      (i32.const 32))
                    (i32.add
                      (local.get $l2)
                      (i32.const 16))
                    (i32.add
                      (local.get $l2)
                      (i32.const 32)))))
              (br_if $B10
                (local.tee $l3
                  (call $mp_sqr
                    (i32.add
                      (local.get $l2)
                      (i32.const 32))
                    (i32.add
                      (local.get $l2)
                      (i32.const 32)))))
              (br_if $B10
                (local.tee $l3
                  (call $mp_sqr
                    (local.get $p1)
                    (local.get $p1))))
              (br_if $B10
                (local.tee $l3
                  (call $mp_mul
                    (i32.add
                      (local.get $l2)
                      (i32.const 16))
                    (local.get $l2)
                    (i32.add
                      (local.get $l2)
                      (i32.const 16)))))
              (br_if $B10
                (local.tee $l3
                  (call $mp_mul_2
                    (i32.add
                      (local.get $l2)
                      (i32.const 16))
                    (i32.add
                      (local.get $l2)
                      (i32.const 16)))))
              (br_if $B10
                (local.tee $l3
                  (call $mp_sqr
                    (local.get $l2)
                    (local.get $l2))))
              (br_if $B10
                (local.tee $l3
                  (call $mp_add
                    (i32.add
                      (local.get $l2)
                      (i32.const 32))
                    (local.get $p1)
                    (local.get $p1))))
              (br_if $B10
                (local.tee $l3
                  (call $mp_div_2
                    (local.get $p1)
                    (local.get $p1))))
              (br_if $B10
                (local.tee $l3
                  (call $mp_sub
                    (i32.add
                      (local.get $l2)
                      (i32.const 32))
                    (local.get $p1)
                    (i32.add
                      (local.get $l2)
                      (i32.const 32)))))
              (br_if $B10
                (local.tee $l3
                  (call $mp_sub
                    (i32.add
                      (local.get $l2)
                      (i32.const 32))
                    (i32.add
                      (local.get $l2)
                      (i32.const 16))
                    (i32.add
                      (local.get $l2)
                      (i32.const 32)))))
              (br_if $B10
                (local.tee $l3
                  (call $mp_sub
                    (local.get $p1)
                    (local.get $l2)
                    (local.get $p1))))
              (br_if $B10
                (local.tee $l3
                  (call $mp_sub
                    (local.get $p1)
                    (i32.add
                      (local.get $l2)
                      (i32.const 48))
                    (local.get $p1))))
              (br_if $B10
                (local.tee $l3
                  (call $mp_lshd
                    (local.get $l2)
                    (i32.shl
                      (local.get $l5)
                      (i32.const 2)))))
              (br_if $B10
                (local.tee $l3
                  (call $mp_lshd
                    (i32.add
                      (local.get $l2)
                      (i32.const 16))
                    (i32.mul
                      (local.get $l5)
                      (i32.const 3)))))
              (br_if $B10
                (local.tee $l3
                  (call $mp_lshd
                    (local.get $p1)
                    (local.get $l7))))
              (br_if $B10
                (local.tee $l3
                  (call $mp_lshd
                    (i32.add
                      (local.get $l2)
                      (i32.const 32))
                    (local.get $l5))))
              (br_if $B10
                (local.tee $l3
                  (call $mp_add
                    (local.get $l2)
                    (i32.add
                      (local.get $l2)
                      (i32.const 16))
                    (local.get $l2))))
              (br_if $B10
                (local.tee $l3
                  (call $mp_add
                    (local.get $l2)
                    (local.get $p1)
                    (local.get $p1))))
              (br_if $B10
                (local.tee $l3
                  (call $mp_add
                    (local.get $p1)
                    (i32.add
                      (local.get $l2)
                      (i32.const 32))
                    (local.get $p1))))
              (local.set $l3
                (call $mp_add
                  (local.get $p1)
                  (i32.add
                    (local.get $l2)
                    (i32.const 48))
                  (local.get $p1))))
            (call $mp_clear
              (local.get $l2)))
          (call $mp_clear
            (i32.add
              (local.get $l2)
              (i32.const 16))))
        (call $mp_clear
          (i32.add
            (local.get $l2)
            (i32.const 32))))
      (call $mp_clear
        (i32.add
          (local.get $l2)
          (i32.const 48))))
    (global.set $g4
      (i32.add
        (local.get $l2)
        (i32.const 64)))
    (local.get $l3))
  (func $s_mp_karatsuba_sqr (type $t26) (param $p0 i32) (param $p1 i32) (result i32)
    (local $l2 i32) (local $l3 i32) (local $l4 i32) (local $l5 i32) (local $l6 i32) (local $l7 i32) (local $l8 i32)
    (global.set $g4
      (local.tee $l2
        (i32.sub
          (global.get $g4)
          (i32.const 96))))
    (local.set $l3
      (i32.const -2))
    (block $B0
      (br_if $B0
        (call $mp_init_size
          (i32.add
            (local.get $l2)
            (i32.const 80))
          (local.tee $l5
            (i32.shr_s
              (local.tee $l4
                (i32.load
                  (local.get $p0)))
              (i32.const 1)))))
      (local.set $l3
        (i32.const -2))
      (block $B1
        (br_if $B1
          (call $mp_init_size
            (i32.add
              (local.get $l2)
              (i32.const 64))
            (i32.sub
              (i32.load
                (local.get $p0))
              (local.get $l5))))
        (local.set $l3
          (i32.const -2))
        (block $B2
          (br_if $B2
            (call $mp_init_size
              (i32.add
                (local.get $l2)
                (i32.const 48))
              (i32.shl
                (i32.load
                  (local.get $p0))
                (i32.const 1))))
          (local.set $l3
            (i32.const -2))
          (block $B3
            (br_if $B3
              (call $mp_init_size
                (i32.add
                  (local.get $l2)
                  (i32.const 32))
                (i32.shl
                  (i32.load
                    (local.get $p0))
                  (i32.const 1))))
            (local.set $l3
              (i32.const -2))
            (block $B4
              (br_if $B4
                (call $mp_init_size
                  (i32.add
                    (local.get $l2)
                    (i32.const 16))
                  (local.tee $l6
                    (i32.and
                      (local.get $l4)
                      (i32.const -2)))))
              (local.set $l3
                (i32.const -2))
              (block $B5
                (br_if $B5
                  (call $mp_init_size
                    (local.get $l2)
                    (i32.shl
                      (i32.sub
                        (i32.load
                          (local.get $p0))
                        (local.get $l5))
                      (i32.const 1))))
                (local.set $l3
                  (i32.load offset=12
                    (local.get $p0)))
                (block $B6
                  (br_if $B6
                    (i32.lt_s
                      (local.get $l4)
                      (i32.const 2)))
                  (local.set $l7
                    (i32.const 0))
                  (local.set $l4
                    (i32.load offset=92
                      (local.get $l2)))
                  (loop $L7
                    (i32.store
                      (local.get $l4)
                      (i32.load
                        (local.get $l3)))
                    (local.set $l4
                      (i32.add
                        (local.get $l4)
                        (i32.const 4)))
                    (local.set $l3
                      (i32.add
                        (local.get $l3)
                        (i32.const 4)))
                    (br_if $L7
                      (i32.lt_s
                        (local.tee $l7
                          (i32.add
                            (local.get $l7)
                            (i32.const 1)))
                        (local.get $l5)))))
                (block $B8
                  (br_if $B8
                    (i32.ge_s
                      (local.get $l5)
                      (local.tee $l8
                        (i32.load
                          (local.get $p0)))))
                  (local.set $l4
                    (i32.load offset=76
                      (local.get $l2)))
                  (local.set $l7
                    (local.get $l5))
                  (loop $L9
                    (i32.store
                      (local.get $l4)
                      (i32.load
                        (local.get $l3)))
                    (local.set $l4
                      (i32.add
                        (local.get $l4)
                        (i32.const 4)))
                    (local.set $l3
                      (i32.add
                        (local.get $l3)
                        (i32.const 4)))
                    (br_if $L9
                      (i32.lt_s
                        (local.tee $l7
                          (i32.add
                            (local.get $l7)
                            (i32.const 1)))
                        (local.tee $l8
                          (i32.load
                            (local.get $p0)))))))
                (i32.store offset=80
                  (local.get $l2)
                  (local.get $l5))
                (i32.store offset=64
                  (local.get $l2)
                  (i32.sub
                    (local.get $l8)
                    (local.get $l5)))
                (call $mp_clamp
                  (i32.add
                    (local.get $l2)
                    (i32.const 80)))
                (local.set $l3
                  (i32.const -2))
                (block $B10
                  (br_if $B10
                    (call $mp_sqr
                      (i32.add
                        (local.get $l2)
                        (i32.const 80))
                      (i32.add
                        (local.get $l2)
                        (i32.const 16))))
                  (br_if $B10
                    (call $mp_sqr
                      (i32.add
                        (local.get $l2)
                        (i32.const 64))
                      (local.get $l2)))
                  (br_if $B10
                    (call $s_mp_add
                      (i32.add
                        (local.get $l2)
                        (i32.const 64))
                      (i32.add
                        (local.get $l2)
                        (i32.const 80))
                      (i32.add
                        (local.get $l2)
                        (i32.const 48))))
                  (br_if $B10
                    (call $mp_sqr
                      (i32.add
                        (local.get $l2)
                        (i32.const 48))
                      (i32.add
                        (local.get $l2)
                        (i32.const 48))))
                  (br_if $B10
                    (call $s_mp_add
                      (i32.add
                        (local.get $l2)
                        (i32.const 16))
                      (local.get $l2)
                      (i32.add
                        (local.get $l2)
                        (i32.const 32))))
                  (br_if $B10
                    (call $s_mp_sub
                      (i32.add
                        (local.get $l2)
                        (i32.const 48))
                      (i32.add
                        (local.get $l2)
                        (i32.const 32))
                      (i32.add
                        (local.get $l2)
                        (i32.const 48))))
                  (br_if $B10
                    (call $mp_lshd
                      (i32.add
                        (local.get $l2)
                        (i32.const 48))
                      (local.get $l5)))
                  (br_if $B10
                    (call $mp_lshd
                      (local.get $l2)
                      (local.get $l6)))
                  (br_if $B10
                    (call $mp_add
                      (i32.add
                        (local.get $l2)
                        (i32.const 16))
                      (i32.add
                        (local.get $l2)
                        (i32.const 48))
                      (i32.add
                        (local.get $l2)
                        (i32.const 48))))
                  (local.set $l3
                    (select
                      (i32.const -2)
                      (i32.const 0)
                      (call $mp_add
                        (i32.add
                          (local.get $l2)
                          (i32.const 48))
                        (local.get $l2)
                        (local.get $p1)))))
                (call $mp_clear
                  (local.get $l2)))
              (call $mp_clear
                (i32.add
                  (local.get $l2)
                  (i32.const 16))))
            (call $mp_clear
              (i32.add
                (local.get $l2)
                (i32.const 32))))
          (call $mp_clear
            (i32.add
              (local.get $l2)
              (i32.const 48))))
        (call $mp_clear
          (i32.add
            (local.get $l2)
            (i32.const 64))))
      (call $mp_clear
        (i32.add
          (local.get $l2)
          (i32.const 80))))
    (global.set $g4
      (i32.add
        (local.get $l2)
        (i32.const 96)))
    (local.get $l3))
  (func $s_mp_sqr_fast (type $t26) (param $p0 i32) (param $p1 i32) (result i32)
    (local $l2 i32) (local $l3 i32) (local $l4 i32) (local $l5 i32) (local $l6 i32) (local $l7 i32) (local $l8 i32) (local $l9 i32) (local $l10 i32) (local $l11 i64) (local $l12 i32) (local $l13 i64)
    (global.set $g4
      (local.tee $l2
        (i32.sub
          (global.get $g4)
          (i32.const 2048))))
    (block $B0
      (block $B1
        (br_if $B1
          (i32.ge_s
            (i32.load offset=4
              (local.get $p1))
            (local.tee $l4
              (i32.shl
                (local.tee $l3
                  (i32.load
                    (local.get $p0)))
                (i32.const 1)))))
        (br_if $B0
          (local.tee $l5
            (call $mp_grow
              (local.get $p1)
              (local.get $l4)))))
      (local.set $l6
        (i32.const 0))
      (local.set $l7
        (i32.load
          (local.get $p0)))
      (block $B2
        (block $B3
          (br_if $B3
            (i32.gt_s
              (local.get $l3)
              (i32.const 0)))
          (local.set $l8
            (i32.load
              (local.get $p1)))
          (i32.store
            (local.get $p1)
            (i32.shl
              (local.get $l7)
              (i32.const 1)))
          (local.set $p0
            (i32.load offset=12
              (local.get $p1)))
          (br $B2))
        (local.set $l9
          (i32.add
            (local.get $l7)
            (i32.const -1)))
        (local.set $l10
          (i32.load offset=12
            (local.get $p0)))
        (local.set $l11
          (i64.const 0))
        (local.set $l12
          (i32.const 0))
        (loop $L4
          (local.set $l13
            (i64.const 0))
          (block $B5
            (br_if $B5
              (i32.lt_s
                (local.tee $l8
                  (select
                    (local.tee $l8
                      (select
                        (local.tee $l6
                          (i32.add
                            (local.tee $l5
                              (select
                                (local.get $l12)
                                (local.get $l9)
                                (i32.gt_s
                                  (local.get $l7)
                                  (local.get $l12))))
                            (i32.const 1)))
                        (local.tee $l8
                          (i32.sub
                            (local.get $l7)
                            (local.tee $p0
                              (i32.sub
                                (local.get $l12)
                                (local.get $l5)))))
                        (i32.gt_s
                          (local.get $l8)
                          (local.get $l5))))
                    (local.tee $l6
                      (i32.shr_s
                        (i32.sub
                          (local.get $l6)
                          (local.get $p0))
                        (i32.const 1)))
                    (i32.lt_s
                      (local.get $l8)
                      (local.get $l6))))
                (i32.const 1)))
            (local.set $p0
              (i32.add
                (local.get $l10)
                (i32.shl
                  (local.get $p0)
                  (i32.const 2))))
            (local.set $l5
              (i32.add
                (local.get $l10)
                (i32.shl
                  (local.get $l5)
                  (i32.const 2))))
            (local.set $l6
              (i32.const 0))
            (local.set $l13
              (i64.const 0))
            (loop $L6
              (local.set $l13
                (i64.add
                  (i64.mul
                    (i64.load32_u
                      (local.get $l5))
                    (i64.load32_u
                      (local.get $p0)))
                  (local.get $l13)))
              (local.set $l5
                (i32.add
                  (local.get $l5)
                  (i32.const -4)))
              (local.set $p0
                (i32.add
                  (local.get $p0)
                  (i32.const 4)))
              (br_if $L6
                (i32.lt_s
                  (local.tee $l6
                    (i32.add
                      (local.get $l6)
                      (i32.const 1)))
                  (local.get $l8)))))
          (local.set $l13
            (i64.add
              (i64.shl
                (local.get $l13)
                (i64.const 1))
              (local.get $l11)))
          (block $B7
            (br_if $B7
              (i32.and
                (local.get $l12)
                (i32.const 1)))
            (local.set $l13
              (i64.add
                (i64.mul
                  (local.tee $l11
                    (i64.load32_u
                      (i32.add
                        (local.get $l10)
                        (i32.and
                          (i32.shl
                            (local.get $l12)
                            (i32.const 1))
                          (i32.const -4)))))
                  (local.get $l11))
                (local.get $l13))))
          (i32.store
            (i32.add
              (local.get $l2)
              (i32.shl
                (local.get $l12)
                (i32.const 2)))
            (i32.and
              (i32.wrap_i64
                (local.get $l13))
              (i32.const 268435455)))
          (local.set $l11
            (i64.shr_u
              (local.get $l13)
              (i64.const 28)))
          (br_if $L4
            (i32.lt_s
              (local.tee $l12
                (i32.add
                  (local.get $l12)
                  (i32.const 1)))
              (local.get $l4))))
        (local.set $l8
          (i32.load
            (local.get $p1)))
        (i32.store
          (local.get $p1)
          (i32.shl
            (local.get $l7)
            (i32.const 1)))
        (local.set $p0
          (i32.load offset=12
            (local.get $p1)))
        (local.set $l6
          (i32.const 0))
        (br_if $B2
          (i32.lt_s
            (local.get $l3)
            (i32.const 1)))
        (local.set $l5
          (local.get $l2))
        (loop $L8
          (i32.store
            (local.get $p0)
            (i32.and
              (i32.load
                (local.get $l5))
              (i32.const 268435455)))
          (local.set $l5
            (i32.add
              (local.get $l5)
              (i32.const 4)))
          (local.set $p0
            (i32.add
              (local.get $p0)
              (i32.const 4)))
          (br_if $L8
            (i32.lt_s
              (local.tee $l6
                (i32.add
                  (local.get $l6)
                  (i32.const 1)))
              (local.get $l4)))))
      (block $B9
        (br_if $B9
          (i32.lt_s
            (local.tee $l5
              (i32.sub
                (local.get $l8)
                (local.get $l6)))
            (i32.const 1)))
        (local.set $l5
          (i32.add
            (local.get $l5)
            (i32.const 1)))
        (loop $L10
          (i32.store
            (local.get $p0)
            (i32.const 0))
          (local.set $p0
            (i32.add
              (local.get $p0)
              (i32.const 4)))
          (br_if $L10
            (i32.gt_s
              (local.tee $l5
                (i32.add
                  (local.get $l5)
                  (i32.const -1)))
              (i32.const 1)))))
      (call $mp_clamp
        (local.get $p1))
      (local.set $l5
        (i32.const 0)))
    (global.set $g4
      (i32.add
        (local.get $l2)
        (i32.const 2048)))
    (local.get $l5))
  (func $s_mp_sqr (type $t26) (param $p0 i32) (param $p1 i32) (result i32)
    (local $l2 i32) (local $l3 i32) (local $l4 i32) (local $l5 i32) (local $l6 i32) (local $l7 i32) (local $l8 i32) (local $l9 i32) (local $l10 i32) (local $l11 i64) (local $l12 i64)
    (global.set $g4
      (local.tee $l2
        (i32.sub
          (global.get $g4)
          (i32.const 16))))
    (block $B0
      (br_if $B0
        (local.tee $l5
          (call $mp_init_size
            (local.get $l2)
            (local.tee $l4
              (i32.or
                (i32.shl
                  (local.tee $l3
                    (i32.load
                      (local.get $p0)))
                  (i32.const 1))
                (i32.const 1))))))
      (i32.store
        (local.get $l2)
        (local.get $l4))
      (block $B1
        (br_if $B1
          (i32.lt_s
            (local.get $l3)
            (i32.const 1)))
        (local.set $l6
          (i32.add
            (local.get $l3)
            (i32.const -1)))
        (local.set $l8
          (i32.add
            (local.tee $l7
              (i32.load offset=12
                (local.get $p0)))
            (i32.const 4)))
        (local.set $l9
          (i32.const 0))
        (local.set $l10
          (i32.load offset=12
            (local.get $l2)))
        (loop $L2
          (i32.store
            (local.tee $p0
              (i32.add
                (local.get $l10)
                (local.tee $l5
                  (i32.shl
                    (local.get $l9)
                    (i32.const 3)))))
            (i32.and
              (i32.wrap_i64
                (local.tee $l11
                  (i64.add
                    (i64.mul
                      (local.tee $l11
                        (i64.load32_u
                          (local.tee $l4
                            (i32.add
                              (local.get $l7)
                              (i32.shl
                                (local.get $l9)
                                (i32.const 2))))))
                      (local.get $l11))
                    (i64.load32_u
                      (local.get $p0)))))
              (i32.const 268435455)))
          (local.set $l11
            (i64.shr_u
              (local.get $l11)
              (i64.const 28)))
          (local.set $l5
            (i32.add
              (local.get $l10)
              (i32.or
                (local.get $l5)
                (i32.const 4))))
          (block $B3
            (br_if $B3
              (i32.ge_s
                (local.tee $l9
                  (i32.add
                    (local.get $l9)
                    (i32.const 1)))
                (local.get $l3)))
            (local.set $l12
              (i64.shl
                (i64.load32_u
                  (local.get $l4))
                (i64.const 1)))
            (local.set $p0
              (local.get $l8))
            (local.set $l4
              (local.get $l6))
            (loop $L4
              (i32.store
                (local.get $l5)
                (i32.and
                  (i32.wrap_i64
                    (local.tee $l11
                      (i64.add
                        (i64.add
                          (i64.and
                            (local.get $l11)
                            (i64.const 4294967295))
                          (i64.load32_u
                            (local.get $l5)))
                        (i64.mul
                          (local.get $l12)
                          (i64.load32_u
                            (local.get $p0))))))
                  (i32.const 268435455)))
              (local.set $l11
                (i64.shr_u
                  (local.get $l11)
                  (i64.const 28)))
              (local.set $p0
                (i32.add
                  (local.get $p0)
                  (i32.const 4)))
              (local.set $l5
                (i32.add
                  (local.get $l5)
                  (i32.const 4)))
              (br_if $L4
                (local.tee $l4
                  (i32.add
                    (local.get $l4)
                    (i32.const -1))))))
          (block $B5
            (br_if $B5
              (i32.eqz
                (i32.wrap_i64
                  (local.get $l11))))
            (loop $L6
              (i32.store
                (local.get $l5)
                (i32.and
                  (i32.wrap_i64
                    (local.tee $l11
                      (i64.add
                        (i64.and
                          (local.get $l11)
                          (i64.const 4294967295))
                        (i64.load32_u
                          (local.get $l5)))))
                  (i32.const 268435455)))
              (local.set $l5
                (i32.add
                  (local.get $l5)
                  (i32.const 4)))
              (br_if $L6
                (i32.eqz
                  (i64.eqz
                    (local.tee $l11
                      (i64.shr_u
                        (local.get $l11)
                        (i64.const 28))))))))
          (local.set $l8
            (i32.add
              (local.get $l8)
              (i32.const 4)))
          (local.set $l6
            (i32.add
              (local.get $l6)
              (i32.const -1)))
          (br_if $L2
            (i32.ne
              (local.get $l9)
              (local.get $l3)))))
      (call $mp_clamp
        (local.get $l2))
      (call $mp_exch
        (local.get $l2)
        (local.get $p1))
      (call $mp_clear
        (local.get $l2))
      (local.set $l5
        (i32.const 0)))
    (global.set $g4
      (i32.add
        (local.get $l2)
        (i32.const 16)))
    (local.get $l5))
  (func $s_mp_karatsuba_mul (type $t18) (param $p0 i32) (param $p1 i32) (param $p2 i32) (result i32)
    (local $l3 i32) (local $l4 i32) (local $l5 i32) (local $l6 i32) (local $l7 i32) (local $l8 i32) (local $l9 i32) (local $l10 i32)
    (global.set $g4
      (local.tee $l3
        (i32.sub
          (global.get $g4)
          (i32.const 112))))
    (local.set $l4
      (i32.const -2))
    (block $B0
      (br_if $B0
        (call $mp_init_size
          (i32.add
            (local.get $l3)
            (i32.const 96))
          (local.tee $l5
            (i32.shr_s
              (local.tee $l6
                (select
                  (local.tee $l5
                    (i32.load
                      (local.get $p0)))
                  (local.tee $l6
                    (i32.load
                      (local.get $p1)))
                  (i32.lt_s
                    (local.get $l5)
                    (local.get $l6))))
              (i32.const 1)))))
      (local.set $l4
        (i32.const -2))
      (block $B1
        (br_if $B1
          (call $mp_init_size
            (i32.add
              (local.get $l3)
              (i32.const 80))
            (i32.sub
              (i32.load
                (local.get $p0))
              (local.get $l5))))
        (local.set $l4
          (i32.const -2))
        (block $B2
          (br_if $B2
            (call $mp_init_size
              (i32.add
                (local.get $l3)
                (i32.const 64))
              (local.get $l5)))
          (local.set $l4
            (i32.const -2))
          (block $B3
            (br_if $B3
              (call $mp_init_size
                (i32.add
                  (local.get $l3)
                  (i32.const 48))
                (i32.sub
                  (i32.load
                    (local.get $p1))
                  (local.get $l5))))
            (local.set $l4
              (i32.const -2))
            (block $B4
              (br_if $B4
                (call $mp_init_size
                  (i32.add
                    (local.get $l3)
                    (i32.const 32))
                  (local.tee $l7
                    (i32.and
                      (local.get $l6)
                      (i32.const -2)))))
              (local.set $l4
                (i32.const -2))
              (block $B5
                (br_if $B5
                  (call $mp_init_size
                    (i32.add
                      (local.get $l3)
                      (i32.const 16))
                    (local.get $l7)))
                (local.set $l4
                  (i32.const -2))
                (block $B6
                  (br_if $B6
                    (call $mp_init_size
                      (local.get $l3)
                      (local.get $l7)))
                  (i32.store offset=96
                    (local.get $l3)
                    (local.get $l5))
                  (i32.store offset=64
                    (local.get $l3)
                    (local.get $l5))
                  (i32.store offset=80
                    (local.get $l3)
                    (i32.sub
                      (local.tee $l8
                        (i32.load
                          (local.get $p0)))
                      (local.get $l5)))
                  (i32.store offset=48
                    (local.get $l3)
                    (i32.sub
                      (i32.load
                        (local.get $p1))
                      (local.get $l5)))
                  (local.set $l4
                    (i32.load offset=12
                      (local.get $p1)))
                  (local.set $l9
                    (i32.load offset=12
                      (local.get $p0)))
                  (block $B7
                    (br_if $B7
                      (i32.lt_s
                        (local.get $l6)
                        (i32.const 2)))
                    (local.set $l10
                      (i32.const 0))
                    (local.set $l6
                      (i32.load offset=108
                        (local.get $l3)))
                    (local.set $l8
                      (i32.load offset=76
                        (local.get $l3)))
                    (loop $L8
                      (i32.store
                        (local.get $l6)
                        (i32.load
                          (local.get $l9)))
                      (i32.store
                        (local.get $l8)
                        (i32.load
                          (local.get $l4)))
                      (local.set $l8
                        (i32.add
                          (local.get $l8)
                          (i32.const 4)))
                      (local.set $l4
                        (i32.add
                          (local.get $l4)
                          (i32.const 4)))
                      (local.set $l6
                        (i32.add
                          (local.get $l6)
                          (i32.const 4)))
                      (local.set $l9
                        (i32.add
                          (local.get $l9)
                          (i32.const 4)))
                      (br_if $L8
                        (i32.lt_s
                          (local.tee $l10
                            (i32.add
                              (local.get $l10)
                              (i32.const 1)))
                          (local.get $l5))))
                    (local.set $l8
                      (i32.load
                        (local.get $p0))))
                  (block $B9
                    (br_if $B9
                      (i32.ge_s
                        (local.get $l5)
                        (local.get $l8)))
                    (local.set $l6
                      (i32.load offset=92
                        (local.get $l3)))
                    (local.set $l8
                      (local.get $l5))
                    (loop $L10
                      (i32.store
                        (local.get $l6)
                        (i32.load
                          (local.get $l9)))
                      (local.set $l6
                        (i32.add
                          (local.get $l6)
                          (i32.const 4)))
                      (local.set $l9
                        (i32.add
                          (local.get $l9)
                          (i32.const 4)))
                      (br_if $L10
                        (i32.lt_s
                          (local.tee $l8
                            (i32.add
                              (local.get $l8)
                              (i32.const 1)))
                          (i32.load
                            (local.get $p0))))))
                  (block $B11
                    (br_if $B11
                      (i32.ge_s
                        (local.get $l5)
                        (i32.load
                          (local.get $p1))))
                    (local.set $p0
                      (i32.load offset=60
                        (local.get $l3)))
                    (local.set $l6
                      (local.get $l5))
                    (loop $L12
                      (i32.store
                        (local.get $p0)
                        (i32.load
                          (local.get $l4)))
                      (local.set $p0
                        (i32.add
                          (local.get $p0)
                          (i32.const 4)))
                      (local.set $l4
                        (i32.add
                          (local.get $l4)
                          (i32.const 4)))
                      (br_if $L12
                        (i32.lt_s
                          (local.tee $l6
                            (i32.add
                              (local.get $l6)
                              (i32.const 1)))
                          (i32.load
                            (local.get $p1))))))
                  (call $mp_clamp
                    (i32.add
                      (local.get $l3)
                      (i32.const 96)))
                  (call $mp_clamp
                    (i32.add
                      (local.get $l3)
                      (i32.const 64)))
                  (local.set $l4
                    (i32.const -2))
                  (block $B13
                    (br_if $B13
                      (call $mp_mul
                        (i32.add
                          (local.get $l3)
                          (i32.const 96))
                        (i32.add
                          (local.get $l3)
                          (i32.const 64))
                        (i32.add
                          (local.get $l3)
                          (i32.const 16))))
                    (br_if $B13
                      (call $mp_mul
                        (i32.add
                          (local.get $l3)
                          (i32.const 80))
                        (i32.add
                          (local.get $l3)
                          (i32.const 48))
                        (local.get $l3)))
                    (br_if $B13
                      (call $s_mp_add
                        (i32.add
                          (local.get $l3)
                          (i32.const 80))
                        (i32.add
                          (local.get $l3)
                          (i32.const 96))
                        (i32.add
                          (local.get $l3)
                          (i32.const 32))))
                    (br_if $B13
                      (call $s_mp_add
                        (i32.add
                          (local.get $l3)
                          (i32.const 48))
                        (i32.add
                          (local.get $l3)
                          (i32.const 64))
                        (i32.add
                          (local.get $l3)
                          (i32.const 96))))
                    (br_if $B13
                      (call $mp_mul
                        (i32.add
                          (local.get $l3)
                          (i32.const 32))
                        (i32.add
                          (local.get $l3)
                          (i32.const 96))
                        (i32.add
                          (local.get $l3)
                          (i32.const 32))))
                    (br_if $B13
                      (call $mp_add
                        (i32.add
                          (local.get $l3)
                          (i32.const 16))
                        (local.get $l3)
                        (i32.add
                          (local.get $l3)
                          (i32.const 96))))
                    (br_if $B13
                      (call $s_mp_sub
                        (i32.add
                          (local.get $l3)
                          (i32.const 32))
                        (i32.add
                          (local.get $l3)
                          (i32.const 96))
                        (i32.add
                          (local.get $l3)
                          (i32.const 32))))
                    (br_if $B13
                      (call $mp_lshd
                        (i32.add
                          (local.get $l3)
                          (i32.const 32))
                        (local.get $l5)))
                    (br_if $B13
                      (call $mp_lshd
                        (local.get $l3)
                        (local.get $l7)))
                    (br_if $B13
                      (call $mp_add
                        (i32.add
                          (local.get $l3)
                          (i32.const 16))
                        (i32.add
                          (local.get $l3)
                          (i32.const 32))
                        (i32.add
                          (local.get $l3)
                          (i32.const 32))))
                    (local.set $l4
                      (select
                        (i32.const -2)
                        (i32.const 0)
                        (call $mp_add
                          (i32.add
                            (local.get $l3)
                            (i32.const 32))
                          (local.get $l3)
                          (local.get $p2)))))
                  (call $mp_clear
                    (local.get $l3)))
                (call $mp_clear
                  (i32.add
                    (local.get $l3)
                    (i32.const 16))))
              (call $mp_clear
                (i32.add
                  (local.get $l3)
                  (i32.const 32))))
            (call $mp_clear
              (i32.add
                (local.get $l3)
                (i32.const 48))))
          (call $mp_clear
            (i32.add
              (local.get $l3)
              (i32.const 64))))
        (call $mp_clear
          (i32.add
            (local.get $l3)
            (i32.const 80))))
      (call $mp_clear
        (i32.add
          (local.get $l3)
          (i32.const 96))))
    (global.set $g4
      (i32.add
        (local.get $l3)
        (i32.const 112)))
    (local.get $l4))
  (func $s_mp_mul_digs_fast (type $t33) (param $p0 i32) (param $p1 i32) (param $p2 i32) (param $p3 i32) (result i32)
    (local $l4 i32) (local $l5 i32) (local $l6 i32) (local $l7 i32) (local $l8 i32) (local $l9 i32) (local $l10 i32) (local $l11 i32) (local $l12 i32) (local $l13 i64)
    (global.set $g4
      (local.tee $l4
        (i32.sub
          (global.get $g4)
          (i32.const 2048))))
    (block $B0
      (block $B1
        (br_if $B1
          (i32.ge_s
            (i32.load offset=4
              (local.get $p2))
            (local.get $p3)))
        (br_if $B0
          (local.tee $l5
            (call $mp_grow
              (local.get $p2)
              (local.get $p3)))))
      (local.set $l6
        (i32.const 0))
      (block $B2
        (block $B3
          (br_if $B3
            (i32.gt_s
              (local.tee $l9
                (select
                  (local.get $p3)
                  (local.tee $l5
                    (i32.add
                      (local.tee $l7
                        (i32.load
                          (local.get $p1)))
                      (local.tee $l8
                        (i32.load
                          (local.get $p0)))))
                  (i32.gt_s
                    (local.get $l5)
                    (local.get $p3))))
              (i32.const 0)))
          (local.set $p0
            (i32.load
              (local.get $p2)))
          (i32.store
            (local.get $p2)
            (local.get $l9))
          (local.set $p3
            (i32.load offset=12
              (local.get $p2)))
          (br $B2))
        (local.set $l10
          (i32.add
            (local.get $l7)
            (i32.const -1)))
        (local.set $l11
          (i32.load offset=12
            (local.get $p1)))
        (local.set $l12
          (i32.load offset=12
            (local.get $p0)))
        (local.set $l13
          (i64.const 0))
        (local.set $p0
          (i32.const 0))
        (loop $L4
          (block $B5
            (br_if $B5
              (i32.lt_s
                (local.tee $l6
                  (select
                    (i32.add
                      (local.tee $l5
                        (select
                          (local.get $p0)
                          (local.get $l10)
                          (i32.gt_s
                            (local.get $l7)
                            (local.get $p0))))
                      (i32.const 1))
                    (local.tee $p3
                      (i32.sub
                        (local.get $l8)
                        (local.tee $p1
                          (i32.sub
                            (local.get $p0)
                            (local.get $l5)))))
                    (i32.gt_s
                      (local.get $p3)
                      (local.get $l5))))
                (i32.const 1)))
            (local.set $p3
              (i32.add
                (local.get $l12)
                (i32.shl
                  (local.get $p1)
                  (i32.const 2))))
            (local.set $l5
              (i32.add
                (local.get $l11)
                (i32.shl
                  (local.get $l5)
                  (i32.const 2))))
            (loop $L6
              (local.set $l13
                (i64.add
                  (i64.mul
                    (i64.load32_u
                      (local.get $l5))
                    (i64.load32_u
                      (local.get $p3)))
                  (local.get $l13)))
              (local.set $l5
                (i32.add
                  (local.get $l5)
                  (i32.const -4)))
              (local.set $p3
                (i32.add
                  (local.get $p3)
                  (i32.const 4)))
              (br_if $L6
                (local.tee $l6
                  (i32.add
                    (local.get $l6)
                    (i32.const -1))))))
          (i32.store
            (i32.add
              (local.get $l4)
              (i32.shl
                (local.get $p0)
                (i32.const 2)))
            (i32.and
              (i32.wrap_i64
                (local.get $l13))
              (i32.const 268435455)))
          (local.set $l13
            (i64.shr_u
              (local.get $l13)
              (i64.const 28)))
          (br_if $L4
            (i32.lt_s
              (local.tee $p0
                (i32.add
                  (local.get $p0)
                  (i32.const 1)))
              (local.get $l9))))
        (local.set $p0
          (i32.load
            (local.get $p2)))
        (i32.store
          (local.get $p2)
          (local.get $l9))
        (local.set $p3
          (i32.load offset=12
            (local.get $p2)))
        (local.set $l6
          (i32.const 0))
        (br_if $B2
          (i32.lt_s
            (local.get $l9)
            (i32.const 1)))
        (local.set $l5
          (local.get $l4))
        (loop $L7
          (i32.store
            (local.get $p3)
            (i32.load
              (local.get $l5)))
          (local.set $l5
            (i32.add
              (local.get $l5)
              (i32.const 4)))
          (local.set $p3
            (i32.add
              (local.get $p3)
              (i32.const 4)))
          (br_if $L7
            (i32.lt_s
              (local.tee $l6
                (i32.add
                  (local.get $l6)
                  (i32.const 1)))
              (local.get $l9)))))
      (block $B8
        (br_if $B8
          (i32.lt_s
            (local.tee $l5
              (i32.sub
                (local.get $p0)
                (local.get $l6)))
            (i32.const 1)))
        (local.set $l5
          (i32.add
            (local.get $l5)
            (i32.const 1)))
        (loop $L9
          (i32.store
            (local.get $p3)
            (i32.const 0))
          (local.set $p3
            (i32.add
              (local.get $p3)
              (i32.const 4)))
          (br_if $L9
            (i32.gt_s
              (local.tee $l5
                (i32.add
                  (local.get $l5)
                  (i32.const -1)))
              (i32.const 1)))))
      (call $mp_clamp
        (local.get $p2))
      (local.set $l5
        (i32.const 0)))
    (global.set $g4
      (i32.add
        (local.get $l4)
        (i32.const 2048)))
    (local.get $l5))
  (func $s_mp_mul_digs (type $t33) (param $p0 i32) (param $p1 i32) (param $p2 i32) (param $p3 i32) (result i32)
    (local $l4 i32) (local $l5 i32) (local $l6 i32) (local $l7 i32) (local $l8 i32) (local $l9 i32) (local $l10 i32) (local $l11 i32) (local $l12 i32) (local $l13 i32) (local $l14 i32) (local $l15 i64) (local $l16 i64)
    (global.set $g4
      (local.tee $l4
        (i32.sub
          (global.get $g4)
          (i32.const 16))))
    (block $B0
      (block $B1
        (br_if $B1
          (i32.gt_s
            (local.get $p3)
            (i32.const 511)))
        (br_if $B1
          (i32.gt_s
            (select
              (local.tee $l5
                (i32.load
                  (local.get $p0)))
              (local.tee $l6
                (i32.load
                  (local.get $p1)))
              (i32.lt_s
                (local.get $l5)
                (local.get $l6)))
            (i32.const 255)))
        (local.set $l5
          (call $s_mp_mul_digs_fast
            (local.get $p0)
            (local.get $p1)
            (local.get $p2)
            (local.get $p3)))
        (br $B0))
      (br_if $B0
        (local.tee $l5
          (call $mp_init_size
            (local.get $l4)
            (local.get $p3))))
      (i32.store
        (local.get $l4)
        (local.get $p3))
      (block $B2
        (br_if $B2
          (i32.lt_s
            (local.tee $l7
              (i32.load
                (local.get $p0)))
            (i32.const 1)))
        (local.set $l8
          (i32.load offset=12
            (local.get $p1)))
        (local.set $l9
          (i32.load offset=12
            (local.get $p0)))
        (local.set $l10
          (i32.const 0))
        (local.set $l11
          (i32.load offset=12
            (local.get $l4)))
        (local.set $l12
          (local.get $p3))
        (loop $L3
          (local.set $l5
            (i32.add
              (local.get $l11)
              (local.tee $l6
                (i32.shl
                  (local.get $l10)
                  (i32.const 2)))))
          (block $B4
            (block $B5
              (br_if $B5
                (i32.ge_s
                  (local.tee $l14
                    (select
                      (local.tee $l13
                        (i32.load
                          (local.get $p1)))
                      (local.tee $p0
                        (i32.sub
                          (local.get $p3)
                          (local.get $l10)))
                      (i32.lt_s
                        (local.get $l13)
                        (local.get $p0))))
                  (i32.const 1)))
              (local.set $p0
                (i32.const 0))
              (local.set $l6
                (i32.const 0))
              (br $B4))
            (local.set $l15
              (i64.load32_u
                (i32.add
                  (local.get $l9)
                  (local.get $l6))))
            (local.set $l6
              (i32.const 0))
            (local.set $l16
              (i64.const 0))
            (local.set $p0
              (local.get $l8))
            (loop $L6
              (i32.store
                (local.get $l5)
                (i32.and
                  (i32.wrap_i64
                    (local.tee $l16
                      (i64.add
                        (i64.add
                          (i64.and
                            (local.get $l16)
                            (i64.const 4294967295))
                          (i64.load32_u
                            (local.get $l5)))
                        (i64.mul
                          (i64.load32_u
                            (local.get $p0))
                          (local.get $l15)))))
                  (i32.const 268435455)))
              (local.set $l16
                (i64.shr_u
                  (local.get $l16)
                  (i64.const 28)))
              (local.set $l5
                (i32.add
                  (local.get $l5)
                  (i32.const 4)))
              (local.set $p0
                (i32.add
                  (local.get $p0)
                  (i32.const 4)))
              (br_if $L6
                (i32.lt_s
                  (local.tee $l6
                    (i32.add
                      (local.get $l6)
                      (i32.const 1)))
                  (local.get $l14))))
            (local.set $p0
              (select
                (local.get $l13)
                (local.get $l12)
                (i32.lt_s
                  (local.get $l13)
                  (local.get $l12))))
            (local.set $l6
              (i32.wrap_i64
                (local.get $l16))))
          (block $B7
            (br_if $B7
              (i32.ge_s
                (i32.add
                  (local.get $p0)
                  (local.get $l10))
                (local.get $p3)))
            (i32.store
              (local.get $l5)
              (local.get $l6)))
          (local.set $l12
            (i32.add
              (local.get $l12)
              (i32.const -1)))
          (br_if $L3
            (i32.ne
              (local.tee $l10
                (i32.add
                  (local.get $l10)
                  (i32.const 1)))
              (local.get $l7)))))
      (call $mp_clamp
        (local.get $l4))
      (call $mp_exch
        (local.get $l4)
        (local.get $p2))
      (call $mp_clear
        (local.get $l4))
      (local.set $l5
        (i32.const 0)))
    (global.set $g4
      (i32.add
        (local.get $l4)
        (i32.const 16)))
    (local.get $l5))
  (func $mp_init_multi (type $t26) (param $p0 i32) (param $p1 i32) (result i32)
    (local $l2 i32) (local $l3 i32) (local $l4 i32) (local $l5 i32)
    (global.set $g4
      (local.tee $l2
        (i32.sub
          (global.get $g4)
          (i32.const 16))))
    (i32.store offset=12
      (local.get $l2)
      (local.get $p1))
    (block $B0
      (block $B1
        (br_if $B1
          (i32.eqz
            (local.get $p0)))
        (local.set $l3
          (i32.const 0))
        (local.set $l4
          (local.get $p0))
        (loop $L2
          (block $B3
            (br_if $B3
              (i32.eqz
                (call $mp_init
                  (local.get $l4))))
            (i32.store offset=8
              (local.get $l2)
              (local.get $p1))
            (block $B4
              (br_if $B4
                (i32.eqz
                  (local.get $l3)))
              (loop $L5
                (call $mp_clear
                  (local.get $p0))
                (i32.store offset=8
                  (local.get $l2)
                  (i32.add
                    (local.tee $l4
                      (i32.load offset=8
                        (local.get $l2)))
                    (i32.const 4)))
                (local.set $l5
                  (i32.ge_u
                    (local.tee $p1
                      (i32.add
                        (local.get $l3)
                        (i32.const 1)))
                    (local.get $l3)))
                (local.set $p0
                  (i32.load
                    (local.get $l4)))
                (local.set $l3
                  (local.get $p1))
                (br_if $L5
                  (local.get $l5))))
            (local.set $l3
              (i32.const -2))
            (br $B0))
          (i32.store offset=12
            (local.get $l2)
            (i32.add
              (local.tee $l4
                (i32.load offset=12
                  (local.get $l2)))
              (i32.const 4)))
          (local.set $l3
            (i32.add
              (local.get $l3)
              (i32.const -1)))
          (br_if $L2
            (local.tee $l4
              (i32.load
                (local.get $l4))))))
      (local.set $l3
        (i32.const 0)))
    (global.set $g4
      (i32.add
        (local.get $l2)
        (i32.const 16)))
    (local.get $l3))
  (func $mp_clear_multi (type $t20) (param $p0 i32) (param $p1 i32)
    (local $l2 i32)
    (global.set $g4
      (local.tee $l2
        (i32.sub
          (global.get $g4)
          (i32.const 16))))
    (i32.store offset=12
      (local.get $l2)
      (local.get $p1))
    (block $B0
      (br_if $B0
        (i32.eqz
          (local.get $p0)))
      (loop $L1
        (call $mp_clear
          (local.get $p0))
        (i32.store offset=12
          (local.get $l2)
          (i32.add
            (local.tee $p0
              (i32.load offset=12
                (local.get $l2)))
            (i32.const 4)))
        (br_if $L1
          (local.tee $p0
            (i32.load
              (local.get $p0))))))
    (global.set $g4
      (i32.add
        (local.get $l2)
        (i32.const 16))))
  (func $mp_mul_2 (type $t26) (param $p0 i32) (param $p1 i32) (result i32)
    (local $l2 i32) (local $l3 i32) (local $l4 i32) (local $l5 i32) (local $l6 i32) (local $l7 i32) (local $l8 i32)
    (block $B0
      (block $B1
        (br_if $B1
          (i32.gt_s
            (i32.load offset=4
              (local.get $p1))
            (local.tee $l2
              (i32.load
                (local.get $p0)))))
        (br_if $B0
          (local.tee $l2
            (call $mp_grow
              (local.get $p1)
              (i32.add
                (local.get $l2)
                (i32.const 1)))))
        (local.set $l2
          (i32.load
            (local.get $p0))))
      (local.set $l3
        (i32.load
          (local.get $p1)))
      (i32.store
        (local.get $p1)
        (local.get $l2))
      (local.set $l4
        (i32.load offset=12
          (local.get $p1)))
      (block $B2
        (block $B3
          (block $B4
            (br_if $B4
              (i32.lt_s
                (i32.load
                  (local.get $p0))
                (i32.const 1)))
            (local.set $l5
              (i32.load offset=12
                (local.get $p0)))
            (local.set $l6
              (i32.const 0))
            (local.set $l2
              (local.get $l4))
            (local.set $l7
              (i32.const 0))
            (loop $L5
              (i32.store
                (local.get $l2)
                (i32.or
                  (i32.and
                    (i32.shl
                      (local.tee $l8
                        (i32.load
                          (local.get $l5)))
                      (i32.const 1))
                    (i32.const 268435454))
                  (local.get $l6)))
              (local.set $l2
                (i32.add
                  (local.get $l2)
                  (i32.const 4)))
              (local.set $l5
                (i32.add
                  (local.get $l5)
                  (i32.const 4)))
              (local.set $l6
                (i32.shr_u
                  (local.get $l8)
                  (i32.const 27)))
              (br_if $L5
                (i32.lt_s
                  (local.tee $l7
                    (i32.add
                      (local.get $l7)
                      (i32.const 1)))
                  (i32.load
                    (local.get $p0)))))
            (br_if $B3
              (local.get $l6)))
          (local.set $l2
            (i32.load
              (local.get $p1)))
          (br $B2))
        (i32.store
          (local.get $l2)
          (i32.const 1))
        (i32.store
          (local.get $p1)
          (local.tee $l2
            (i32.add
              (i32.load
                (local.get $p1))
              (i32.const 1)))))
      (block $B6
        (br_if $B6
          (i32.lt_s
            (local.tee $l5
              (i32.sub
                (local.get $l3)
                (local.get $l2)))
            (i32.const 1)))
        (local.set $l5
          (i32.add
            (local.get $l5)
            (i32.const 1)))
        (local.set $l2
          (i32.add
            (local.get $l4)
            (i32.shl
              (local.get $l2)
              (i32.const 2))))
        (loop $L7
          (i32.store
            (local.get $l2)
            (i32.const 0))
          (local.set $l2
            (i32.add
              (local.get $l2)
              (i32.const 4)))
          (br_if $L7
            (i32.gt_s
              (local.tee $l5
                (i32.add
                  (local.get $l5)
                  (i32.const -1)))
              (i32.const 1)))))
      (i32.store offset=8
        (local.get $p1)
        (i32.load offset=8
          (local.get $p0)))
      (local.set $l2
        (i32.const 0)))
    (local.get $l2))
  (func $mp_div_2 (type $t26) (param $p0 i32) (param $p1 i32) (result i32)
    (local $l2 i32) (local $l3 i32) (local $l4 i32) (local $l5 i32) (local $l6 i32) (local $l7 i32) (local $l8 i32)
    (block $B0
      (block $B1
        (br_if $B1
          (i32.ge_s
            (i32.load offset=4
              (local.get $p1))
            (local.tee $l2
              (i32.load
                (local.get $p0)))))
        (br_if $B0
          (local.tee $l2
            (call $mp_grow
              (local.get $p1)
              (local.get $l2))))
        (local.set $l2
          (i32.load
            (local.get $p0))))
      (local.set $l3
        (i32.load
          (local.get $p1)))
      (i32.store
        (local.get $p1)
        (local.get $l2))
      (local.set $l4
        (i32.load offset=12
          (local.get $p1)))
      (block $B2
        (br_if $B2
          (i32.lt_s
            (local.get $l2)
            (i32.const 1)))
        (local.set $l5
          (i32.add
            (local.get $l2)
            (i32.const 1)))
        (local.set $l2
          (i32.add
            (local.get $l4)
            (local.tee $l6
              (i32.add
                (i32.shl
                  (local.get $l2)
                  (i32.const 2))
                (i32.const -4)))))
        (local.set $l6
          (i32.add
            (i32.load offset=12
              (local.get $p0))
            (local.get $l6)))
        (local.set $l7
          (i32.const 0))
        (loop $L3
          (i32.store
            (local.get $l2)
            (i32.or
              (i32.shr_u
                (local.tee $l8
                  (i32.load
                    (local.get $l6)))
                (i32.const 1))
              (i32.shl
                (local.get $l7)
                (i32.const 27))))
          (local.set $l2
            (i32.add
              (local.get $l2)
              (i32.const -4)))
          (local.set $l6
            (i32.add
              (local.get $l6)
              (i32.const -4)))
          (local.set $l7
            (i32.and
              (local.get $l8)
              (i32.const 1)))
          (br_if $L3
            (i32.gt_s
              (local.tee $l5
                (i32.add
                  (local.get $l5)
                  (i32.const -1)))
              (i32.const 1))))
        (local.set $l2
          (i32.load
            (local.get $p1))))
      (block $B4
        (br_if $B4
          (i32.lt_s
            (local.tee $l6
              (i32.sub
                (local.get $l3)
                (local.get $l2)))
            (i32.const 1)))
        (local.set $l6
          (i32.add
            (local.get $l6)
            (i32.const 1)))
        (local.set $l2
          (i32.add
            (local.get $l4)
            (i32.shl
              (local.get $l2)
              (i32.const 2))))
        (loop $L5
          (i32.store
            (local.get $l2)
            (i32.const 0))
          (local.set $l2
            (i32.add
              (local.get $l2)
              (i32.const 4)))
          (br_if $L5
            (i32.gt_s
              (local.tee $l6
                (i32.add
                  (local.get $l6)
                  (i32.const -1)))
              (i32.const 1)))))
      (i32.store offset=8
        (local.get $p1)
        (i32.load offset=8
          (local.get $p0)))
      (call $mp_clamp
        (local.get $p1))
      (local.set $l2
        (i32.const 0)))
    (local.get $l2))
  (func $mp_div_3 (type $t18) (param $p0 i32) (param $p1 i32) (param $p2 i32) (result i32)
    (local $l3 i32) (local $l4 i32) (local $l5 i32) (local $l6 i64) (local $l7 i32) (local $l8 i64) (local $l9 i64) (local $l10 i64)
    (global.set $g4
      (local.tee $l3
        (i32.sub
          (global.get $g4)
          (i32.const 16))))
    (block $B0
      (br_if $B0
        (local.tee $l4
          (call $mp_init_size
            (local.get $l3)
            (i32.load
              (local.get $p0)))))
      (i32.store
        (local.get $l3)
        (local.tee $l5
          (i32.load
            (local.get $p0))))
      (i32.store offset=8
        (local.get $l3)
        (i32.load offset=8
          (local.get $p0)))
      (block $B1
        (block $B2
          (br_if $B2
            (i32.ge_s
              (local.get $l5)
              (i32.const 1)))
          (local.set $l6
            (i64.const 0))
          (br $B1))
        (local.set $l7
          (i32.add
            (local.get $l5)
            (i32.const 1)))
        (local.set $p0
          (i32.add
            (i32.load offset=12
              (local.get $p0))
            (local.tee $l5
              (i32.add
                (i32.shl
                  (local.get $l5)
                  (i32.const 2))
                (i32.const -4)))))
        (local.set $l5
          (i32.add
            (i32.load offset=12
              (local.get $l3))
            (local.get $l5)))
        (local.set $l6
          (i64.const 0))
        (loop $L3
          (block $B4
            (block $B5
              (br_if $B5
                (i64.ge_u
                  (local.tee $l8
                    (i64.or
                      (i64.shl
                        (local.get $l6)
                        (i64.const 28))
                      (i64.load32_u
                        (local.get $p0))))
                  (i64.const 3)))
              (local.set $l9
                (i64.const 0))
              (local.set $l6
                (local.get $l8))
              (br $B4))
            (br_if $B4
              (i64.lt_u
                (local.tee $l6
                  (i64.add
                    (local.tee $l10
                      (i64.mul
                        (local.tee $l9
                          (i64.shr_u
                            (i64.mul
                              (local.get $l8)
                              (i64.const 89478485))
                            (i64.const 28)))
                        (i64.const -3)))
                    (local.get $l8)))
                (i64.const 3)))
            (local.set $l6
              (i64.add
                (local.tee $l8
                  (i64.add
                    (i64.add
                      (local.get $l10)
                      (local.get $l8))
                    (i64.const -3)))
                (i64.mul
                  (local.tee $l8
                    (i64.div_u
                      (local.get $l8)
                      (i64.const 3)))
                  (i64.const -3))))
            (local.set $l9
              (i64.add
                (i64.add
                  (local.get $l9)
                  (local.get $l8))
                (i64.const 1))))
          (i64.store32
            (local.get $l5)
            (local.get $l9))
          (local.set $p0
            (i32.add
              (local.get $p0)
              (i32.const -4)))
          (local.set $l5
            (i32.add
              (local.get $l5)
              (i32.const -4)))
          (br_if $L3
            (i32.gt_s
              (local.tee $l7
                (i32.add
                  (local.get $l7)
                  (i32.const -1)))
              (i32.const 1)))))
      (block $B6
        (br_if $B6
          (i32.eqz
            (local.get $p2)))
        (i64.store32
          (local.get $p2)
          (local.get $l6)))
      (block $B7
        (br_if $B7
          (i32.eqz
            (local.get $p1)))
        (call $mp_clamp
          (local.get $l3))
        (call $mp_exch
          (local.get $l3)
          (local.get $p1)))
      (call $mp_clear
        (local.get $l3)))
    (global.set $g4
      (i32.add
        (local.get $l3)
        (i32.const 16)))
    (local.get $l4))
  (func $mp_lshd (type $t26) (param $p0 i32) (param $p1 i32) (result i32)
    (local $l2 i32) (local $l3 i32) (local $l4 i32)
    (local.set $l2
      (i32.const 0))
    (block $B0
      (br_if $B0
        (i32.lt_s
          (local.get $p1)
          (i32.const 1)))
      (br_if $B0
        (i32.eqz
          (local.tee $l3
            (i32.load
              (local.get $p0)))))
      (block $B1
        (br_if $B1
          (i32.ge_s
            (i32.load offset=4
              (local.get $p0))
            (local.tee $l2
              (i32.add
                (local.get $l3)
                (local.get $p1)))))
        (br_if $B0
          (local.tee $l2
            (call $mp_grow
              (local.get $p0)
              (local.get $l2))))
        (local.set $l2
          (i32.add
            (local.tee $l3
              (i32.load
                (local.get $p0)))
            (local.get $p1))))
      (i32.store
        (local.get $p0)
        (local.get $l2))
      (local.set $l4
        (i32.load offset=12
          (local.get $p0)))
      (block $B2
        (br_if $B2
          (i32.lt_s
            (local.get $l3)
            (i32.const 1)))
        (local.set $p0
          (i32.add
            (i32.add
              (local.get $l4)
              (i32.shl
                (local.get $l2)
                (i32.const 2)))
            (i32.const -4)))
        (local.set $l3
          (i32.sub
            (i32.const 0)
            (i32.shl
              (local.get $p1)
              (i32.const 2))))
        (loop $L3
          (i32.store
            (local.get $p0)
            (i32.load
              (i32.add
                (local.get $p0)
                (local.get $l3))))
          (local.set $p0
            (i32.add
              (local.get $p0)
              (i32.const -4)))
          (br_if $L3
            (i32.gt_s
              (local.tee $l2
                (i32.add
                  (local.get $l2)
                  (i32.const -1)))
              (local.get $p1))))
        (br_if $B2
          (i32.ge_s
            (local.get $p1)
            (i32.const 1)))
        (return
          (i32.const 0)))
      (local.set $p0
        (i32.add
          (local.get $p1)
          (i32.const 1)))
      (loop $L4
        (local.set $l2
          (i32.const 0))
        (i32.store
          (local.get $l4)
          (i32.const 0))
        (local.set $l4
          (i32.add
            (local.get $l4)
            (i32.const 4)))
        (br_if $L4
          (i32.gt_s
            (local.tee $p0
              (i32.add
                (local.get $p0)
                (i32.const -1)))
            (i32.const 1)))))
    (local.get $l2))
  (func $mp_incr (type $t19) (param $p0 i32) (result i32)
    (local $l1 i32) (local $l2 i32)
    (block $B0
      (block $B1
        (br_if $B1
          (i32.load
            (local.get $p0)))
        (call $mp_set
          (local.get $p0)
          (i32.const 1))
        (br $B0))
      (block $B2
        (block $B3
          (br_if $B3
            (i32.ne
              (i32.load offset=8
                (local.get $p0))
              (i32.const 1)))
          (i32.store offset=8
            (local.get $p0)
            (i32.const 0))
          (br_if $B2
            (local.tee $l1
              (call $mp_decr
                (local.get $p0))))
          (br_if $B0
            (i32.eqz
              (i32.load
                (local.get $p0))))
          (i32.store offset=8
            (local.get $p0)
            (i32.const 1))
          (br $B0))
        (block $B4
          (br_if $B4
            (i32.gt_u
              (local.tee $l2
                (i32.load
                  (local.tee $l1
                    (i32.load offset=12
                      (local.get $p0)))))
              (i32.const 268435454)))
          (i32.store
            (local.get $l1)
            (i32.add
              (local.get $l2)
              (i32.const 1)))
          (br $B0))
        (local.set $l1
          (call $mp_add_d
            (local.get $p0)
            (i32.const 1)
            (local.get $p0))))
      (return
        (local.get $l1)))
    (i32.const 0))
  (func $mp_decr (type $t19) (param $p0 i32) (result i32)
    (local $l1 i32) (local $l2 i32)
    (block $B0
      (block $B1
        (br_if $B1
          (i32.load
            (local.get $p0)))
        (call $mp_set
          (local.get $p0)
          (i32.const 1))
        (i32.store offset=8
          (local.get $p0)
          (i32.const 1))
        (br $B0))
      (block $B2
        (block $B3
          (br_if $B3
            (i32.ne
              (i32.load offset=8
                (local.get $p0))
              (i32.const 1)))
          (i32.store offset=8
            (local.get $p0)
            (i32.const 0))
          (br_if $B2
            (local.tee $l1
              (call $mp_incr
                (local.get $p0))))
          (br_if $B0
            (i32.eqz
              (i32.load
                (local.get $p0))))
          (i32.store offset=8
            (local.get $p0)
            (i32.const 1))
          (br $B0))
        (block $B4
          (br_if $B4
            (i32.lt_u
              (local.tee $l2
                (i32.load
                  (local.tee $l1
                    (i32.load offset=12
                      (local.get $p0)))))
              (i32.const 2)))
          (i32.store
            (local.get $l1)
            (i32.add
              (local.get $l2)
              (i32.const -1)))
          (br $B0))
        (local.set $l1
          (call $mp_sub_d
            (local.get $p0)
            (i32.const 1)
            (local.get $p0))))
      (return
        (local.get $l1)))
    (i32.const 0))
  (func $mp_add_d (type $t18) (param $p0 i32) (param $p1 i32) (param $p2 i32) (result i32)
    (local $l3 i32) (local $l4 i32) (local $l5 i32) (local $l6 i32) (local $l7 i32) (local $l8 i32) (local $l9 i32)
    (global.set $g4
      (local.tee $l3
        (i32.sub
          (global.get $g4)
          (i32.const 16))))
    (block $B0
      (block $B1
        (br_if $B1
          (i32.gt_s
            (i32.load offset=4
              (local.get $p2))
            (local.tee $l4
              (i32.load
                (local.get $p0)))))
        (br_if $B0
          (local.tee $l5
            (call $mp_grow
              (local.get $p2)
              (i32.add
                (local.get $l4)
                (i32.const 1))))))
      (block $B2
        (block $B3
          (block $B4
            (block $B5
              (br_if $B5
                (i32.ne
                  (local.tee $l6
                    (i32.load offset=8
                      (local.get $p0)))
                  (i32.const 1)))
              (block $B6
                (br_if $B6
                  (i32.gt_s
                    (i32.load
                      (local.get $p0))
                    (i32.const 1)))
                (br_if $B6
                  (i32.ge_u
                    (i32.load
                      (i32.load offset=12
                        (local.get $p0)))
                    (local.get $p1)))
                (local.set $l5
                  (i32.add
                    (local.get $p0)
                    (i32.const 12)))
                (local.set $l4
                  (i32.load offset=12
                    (local.get $p2)))
                (local.set $l7
                  (i32.load
                    (local.get $p2)))
                (br $B4))
              (i64.store
                (local.tee $l4
                  (i32.add
                    (local.get $l3)
                    (i32.const 8)))
                (i64.load align=4
                  (i32.add
                    (local.get $p0)
                    (i32.const 8))))
              (i32.store
                (local.get $l4)
                (i32.const 0))
              (i64.store
                (local.get $l3)
                (i64.load align=4
                  (local.get $p0)))
              (local.set $l5
                (call $mp_sub_d
                  (local.get $l3)
                  (local.get $p1)
                  (local.get $p2)))
              (i32.store offset=8
                (local.get $p2)
                (i32.const 1))
              (br $B2))
            (local.set $l5
              (i32.add
                (local.get $p0)
                (i32.const 12)))
            (local.set $l4
              (i32.load offset=12
                (local.get $p2)))
            (local.set $l7
              (i32.load
                (local.get $p2)))
            (br_if $B4
              (local.get $l6))
            (block $B7
              (block $B8
                (br_if $B8
                  (i32.ge_s
                    (i32.load
                      (local.get $p0))
                    (i32.const 1)))
                (local.set $l8
                  (i32.const 1))
                (br $B7))
              (local.set $l6
                (i32.load
                  (local.get $l5)))
              (local.set $l5
                (i32.const 1))
              (loop $L9
                (i32.store
                  (local.get $l4)
                  (i32.and
                    (local.tee $p1
                      (i32.add
                        (i32.load
                          (local.get $l6))
                        (local.get $p1)))
                    (i32.const 268435455)))
                (local.set $l4
                  (i32.add
                    (local.get $l4)
                    (i32.const 4)))
                (local.set $l6
                  (i32.add
                    (local.get $l6)
                    (i32.const 4)))
                (local.set $p1
                  (i32.shr_u
                    (local.get $p1)
                    (i32.const 28)))
                (local.set $l9
                  (i32.lt_s
                    (local.get $l5)
                    (i32.load
                      (local.get $p0))))
                (local.set $l5
                  (local.tee $l8
                    (i32.add
                      (local.get $l5)
                      (i32.const 1))))
                (br_if $L9
                  (local.get $l9))))
            (i32.store
              (local.get $l4)
              (local.get $p1))
            (i32.store
              (local.get $p2)
              (i32.add
                (i32.load
                  (local.get $p0))
                (i32.const 1)))
            (br $B3))
          (local.set $l8
            (i32.const 1))
          (i32.store
            (local.get $p2)
            (i32.const 1))
          (block $B10
            (br_if $B10
              (i32.ne
                (i32.load
                  (local.get $p0))
                (i32.const 1)))
            (local.set $p1
              (i32.sub
                (local.get $p1)
                (i32.load
                  (i32.load
                    (local.get $l5))))))
          (i32.store
            (local.get $l4)
            (local.get $p1)))
        (local.set $l5
          (i32.const 0))
        (i32.store offset=8
          (local.get $p2)
          (i32.const 0))
        (br_if $B2
          (i32.lt_s
            (local.tee $l6
              (i32.sub
                (local.get $l7)
                (local.get $l8)))
            (i32.const 1)))
        (local.set $l4
          (i32.add
            (local.get $l4)
            (i32.const 4)))
        (local.set $l6
          (i32.add
            (local.get $l6)
            (i32.const 1)))
        (loop $L11
          (i32.store
            (local.get $l4)
            (i32.const 0))
          (local.set $l4
            (i32.add
              (local.get $l4)
              (i32.const 4)))
          (br_if $L11
            (i32.gt_s
              (local.tee $l6
                (i32.add
                  (local.get $l6)
                  (i32.const -1)))
              (i32.const 1)))))
      (call $mp_clamp
        (local.get $p2)))
    (global.set $g4
      (i32.add
        (local.get $l3)
        (i32.const 16)))
    (local.get $l5))
  (func $mp_sub_d (type $t18) (param $p0 i32) (param $p1 i32) (param $p2 i32) (result i32)
    (local $l3 i32) (local $l4 i32) (local $l5 i32) (local $l6 i32) (local $l7 i32) (local $l8 i32)
    (global.set $g4
      (local.tee $l3
        (i32.sub
          (global.get $g4)
          (i32.const 16))))
    (block $B0
      (block $B1
        (br_if $B1
          (i32.gt_s
            (i32.load offset=4
              (local.get $p2))
            (local.tee $l4
              (i32.load
                (local.get $p0)))))
        (br_if $B0
          (local.tee $l4
            (call $mp_grow
              (local.get $p2)
              (i32.add
                (local.get $l4)
                (i32.const 1))))))
      (block $B2
        (br_if $B2
          (i32.ne
            (i32.load offset=8
              (local.get $p0))
            (i32.const 1)))
        (i64.store
          (local.tee $l4
            (i32.add
              (local.get $l3)
              (i32.const 8)))
          (i64.load align=4
            (i32.add
              (local.get $p0)
              (i32.const 8))))
        (i32.store
          (local.get $l4)
          (i32.const 0))
        (i64.store
          (local.get $l3)
          (i64.load align=4
            (local.get $p0)))
        (local.set $l4
          (call $mp_add_d
            (local.get $l3)
            (local.get $p1)
            (local.get $p2)))
        (i32.store offset=8
          (local.get $p2)
          (i32.const 1))
        (call $mp_clamp
          (local.get $p2))
        (br $B0))
      (local.set $l4
        (i32.load offset=12
          (local.get $p2)))
      (local.set $l5
        (i32.load offset=12
          (local.get $p0)))
      (local.set $l6
        (i32.load
          (local.get $p2)))
      (block $B3
        (block $B4
          (br_if $B4
            (i32.gt_u
              (local.tee $l7
                (i32.load
                  (local.get $p0)))
              (i32.const 1)))
          (block $B5
            (block $B6
              (br_table $B5 $B6 $B5
                (local.get $l7)))
            (br_if $B4
              (i32.gt_u
                (local.tee $l8
                  (i32.load
                    (local.get $l5)))
                (local.get $p1)))
            (local.set $p1
              (i32.sub
                (local.get $p1)
                (local.get $l8))))
          (i32.store
            (local.get $l4)
            (local.get $p1))
          (local.set $l7
            (i32.const 1))
          (i32.store
            (local.get $p2)
            (i32.const 1))
          (i32.store offset=8
            (local.get $p2)
            (i32.const 1))
          (local.set $l4
            (i32.add
              (local.get $l4)
              (i32.const 4)))
          (br $B3))
        (i32.store
          (local.get $p2)
          (local.get $l7))
        (local.set $l7
          (i32.const 0))
        (i32.store offset=8
          (local.get $p2)
          (i32.const 0))
        (br_if $B3
          (i32.lt_s
            (i32.load
              (local.get $p0))
            (i32.const 1)))
        (local.set $l7
          (i32.const 0))
        (loop $L7
          (i32.store
            (local.get $l4)
            (i32.and
              (local.tee $p1
                (i32.sub
                  (i32.load
                    (local.get $l5))
                  (local.get $p1)))
              (i32.const 268435455)))
          (local.set $l4
            (i32.add
              (local.get $l4)
              (i32.const 4)))
          (local.set $l5
            (i32.add
              (local.get $l5)
              (i32.const 4)))
          (local.set $p1
            (i32.shr_u
              (local.get $p1)
              (i32.const 31)))
          (br_if $L7
            (i32.lt_s
              (local.tee $l7
                (i32.add
                  (local.get $l7)
                  (i32.const 1)))
              (i32.load
                (local.get $p0))))))
      (block $B8
        (br_if $B8
          (i32.lt_s
            (local.tee $l5
              (i32.sub
                (local.get $l6)
                (local.get $l7)))
            (i32.const 1)))
        (local.set $l5
          (i32.add
            (local.get $l5)
            (i32.const 1)))
        (loop $L9
          (i32.store
            (local.get $l4)
            (i32.const 0))
          (local.set $l4
            (i32.add
              (local.get $l4)
              (i32.const 4)))
          (br_if $L9
            (i32.gt_s
              (local.tee $l5
                (i32.add
                  (local.get $l5)
                  (i32.const -1)))
              (i32.const 1)))))
      (call $mp_clamp
        (local.get $p2))
      (local.set $l4
        (i32.const 0)))
    (global.set $g4
      (i32.add
        (local.get $l3)
        (i32.const 16)))
    (local.get $l4))
  (func $pow (type $t30) (param $p0 f64) (param $p1 f64) (result f64)
    (local $l2 i64) (local $l3 i32) (local $l4 i32) (local $l5 i32) (local $l6 i64) (local $l7 i32) (local $l8 i32) (local $l9 i64) (local $l10 f64) (local $l11 f64) (local $l12 f64) (local $l13 f64) (local $l14 f64) (local $l15 f64) (local $l16 f64) (local $l17 f64) (local $l18 f64) (local $l19 i32)
    (local.set $l5
      (i32.add
        (local.tee $l4
          (i32.and
            (local.tee $l3
              (i32.wrap_i64
                (i64.shr_u
                  (local.tee $l2
                    (i64.reinterpret_f64
                      (local.get $p1)))
                  (i64.const 52))))
            (i32.const 2047)))
        (i32.const -958)))
    (block $B0
      (block $B1
        (block $B2
          (block $B3
            (br_if $B3
              (i32.gt_u
                (i32.add
                  (local.tee $l7
                    (i32.wrap_i64
                      (i64.shr_u
                        (local.tee $l6
                          (i64.reinterpret_f64
                            (local.get $p0)))
                        (i64.const 52))))
                  (i32.const -1))
                (i32.const 2045)))
            (local.set $l8
              (i32.const 0))
            (br_if $B2
              (i32.lt_u
                (local.get $l5)
                (i32.const 128))))
          (block $B4
            (br_if $B4
              (i64.lt_u
                (i64.add
                  (local.tee $l9
                    (i64.shl
                      (local.get $l2)
                      (i64.const 1)))
                  (i64.const -1))
                (i64.const -9007199254740993)))
            (local.set $l10
              (f64.const 0x1p+0 (;=1;)))
            (br_if $B1
              (i64.eq
                (local.get $l6)
                (i64.const 4607182418800017408)))
            (br_if $B1
              (i64.eqz
                (local.get $l9)))
            (block $B5
              (block $B6
                (br_if $B6
                  (i64.gt_u
                    (local.tee $l6
                      (i64.shl
                        (local.get $l6)
                        (i64.const 1)))
                    (i64.const -9007199254740992)))
                (br_if $B5
                  (i64.lt_u
                    (local.get $l9)
                    (i64.const -9007199254740991))))
              (return
                (f64.add
                  (local.get $p0)
                  (local.get $p1))))
            (br_if $B1
              (i64.eq
                (local.get $l6)
                (i64.const 9214364837600034816)))
            (return
              (select
                (f64.const 0x0p+0 (;=0;))
                (f64.mul
                  (local.get $p1)
                  (local.get $p1))
                (i32.eq
                  (i32.xor
                    (i32.wrap_i64
                      (i64.shr_u
                        (local.get $l2)
                        (i64.const 63)))
                    (i32.const 1))
                  (i64.lt_u
                    (local.get $l6)
                    (i64.const 9214364837600034816))))))
          (block $B7
            (br_if $B7
              (i64.lt_u
                (i64.add
                  (i64.shl
                    (local.get $l6)
                    (i64.const 1))
                  (i64.const -1))
                (i64.const -9007199254740993)))
            (local.set $l10
              (f64.mul
                (local.get $p0)
                (local.get $p0)))
            (block $B8
              (br_if $B8
                (i64.gt_s
                  (local.get $l6)
                  (i64.const -1)))
              (br_if $B8
                (i32.gt_u
                  (i32.add
                    (local.get $l4)
                    (i32.const -1023))
                  (i32.const 52)))
              (local.set $l10
                (select
                  (local.get $l10)
                  (select
                    (local.get $l10)
                    (f64.neg
                      (local.get $l10))
                    (i64.ne
                      (i64.and
                        (i64.add
                          (local.tee $l6
                            (i64.shl
                              (i64.const 1)
                              (i64.extend_i32_u
                                (i32.sub
                                  (i32.const 1075)
                                  (local.get $l4)))))
                          (i64.const -1))
                        (local.get $l2))
                      (i64.const 0)))
                  (i64.eqz
                    (i64.and
                      (local.get $l6)
                      (local.get $l2))))))
            (br_if $B1
              (i64.gt_s
                (local.get $l2)
                (i64.const -1)))
            (return
              (f64.div
                (f64.const 0x1p+0 (;=1;))
                (local.get $l10))))
          (local.set $l8
            (i32.const 0))
          (block $B9
            (br_if $B9
              (i64.gt_s
                (local.get $l6)
                (i64.const -1)))
            (br_if $B0
              (i32.lt_u
                (local.get $l4)
                (i32.const 1023)))
            (block $B10
              (block $B11
                (br_if $B11
                  (i32.gt_u
                    (local.get $l4)
                    (i32.const 1075)))
                (br_if $B0
                  (i64.ne
                    (i64.and
                      (i64.add
                        (local.tee $l9
                          (i64.shl
                            (i64.const 1)
                            (i64.extend_i32_u
                              (i32.sub
                                (i32.const 1075)
                                (local.get $l4)))))
                        (i64.const -1))
                      (local.get $l2))
                    (i64.const 0)))
                (local.set $l8
                  (i32.const 262144))
                (br_if $B10
                  (i64.ne
                    (i64.and
                      (local.get $l9)
                      (local.get $l2))
                    (i64.const 0))))
              (local.set $l8
                (i32.const 0)))
            (local.set $l7
              (i32.and
                (local.get $l7)
                (i32.const 2047)))
            (local.set $l6
              (i64.and
                (local.get $l6)
                (i64.const 9223372036854775807))))
          (block $B12
            (br_if $B12
              (i32.lt_u
                (local.get $l5)
                (i32.const 128)))
            (local.set $l10
              (f64.const 0x1p+0 (;=1;)))
            (br_if $B1
              (i32.lt_u
                (local.get $l4)
                (i32.const 958)))
            (br_if $B1
              (i64.eq
                (local.get $l6)
                (i64.const 4607182418800017408)))
            (block $B13
              (br_if $B13
                (i32.eq
                  (i32.lt_u
                    (local.get $l3)
                    (i32.const 2048))
                  (i64.lt_u
                    (local.get $l6)
                    (i64.const 4607182418800017409))))
              (return
                (call $__math_oflow
                  (i32.const 0))))
            (return
              (call $__math_uflow
                (i32.const 0))))
          (br_if $B2
            (local.get $l7))
          (local.set $l6
            (i64.add
              (i64.and
                (i64.reinterpret_f64
                  (f64.mul
                    (local.get $p0)
                    (f64.const 0x1p+52 (;=4.5036e+15;))))
                (i64.const 9223372036854775807))
              (i64.const -234187180623265792))))
        (block $B14
          (br_if $B14
            (i32.lt_u
              (i32.add
                (local.tee $l4
                  (i32.and
                    (i32.wrap_i64
                      (i64.shr_u
                        (local.tee $l6
                          (i64.reinterpret_f64
                            (local.tee $l15
                              (f64.mul
                                (local.tee $l11
                                  (f64.reinterpret_i64
                                    (i64.and
                                      (local.get $l2)
                                      (i64.const -134217728))))
                                (local.tee $l10
                                  (f64.reinterpret_i64
                                    (i64.and
                                      (i64.reinterpret_f64
                                        (local.tee $p0
                                          (f64.add
                                            (local.tee $l18
                                              (f64.add
                                                (local.tee $l15
                                                  (f64.add
                                                    (local.tee $l13
                                                      (f64.add
                                                        (f64.load
                                                          (i32.add
                                                            (local.tee $l4
                                                              (i32.add
                                                                (local.tee $l5
                                                                  (i32.add
                                                                    (i32.const 66384)
                                                                    (i32.const 2120)))
                                                                (i32.shl
                                                                  (i32.and
                                                                    (i32.wrap_i64
                                                                      (i64.shr_u
                                                                        (local.tee $l2
                                                                          (i64.add
                                                                            (local.get $l6)
                                                                            (i64.const -4604531861337669632)))
                                                                        (i64.const 45)))
                                                                    (i32.const 127))
                                                                  (i32.const 5))))
                                                            (i32.const 88)))
                                                        (f64.mul
                                                          (f64.load
                                                            (local.get $l5))
                                                          (local.tee $l12
                                                            (f64.convert_i32_s
                                                              (i32.wrap_i64
                                                                (i64.shr_s
                                                                  (local.get $l2)
                                                                  (i64.const 52))))))))
                                                    (local.tee $p0
                                                      (f64.add
                                                        (local.tee $l14
                                                          (f64.mul
                                                            (local.tee $p0
                                                              (f64.load
                                                                (i32.add
                                                                  (local.get $l4)
                                                                  (i32.const 72))))
                                                            (f64.sub
                                                              (f64.reinterpret_i64
                                                                (local.tee $l6
                                                                  (i64.sub
                                                                    (local.get $l6)
                                                                    (i64.and
                                                                      (local.get $l2)
                                                                      (i64.const -4503599627370496)))))
                                                              (local.tee $l10
                                                                (f64.reinterpret_i64
                                                                  (i64.and
                                                                    (i64.add
                                                                      (local.get $l6)
                                                                      (i64.const 2147483648))
                                                                    (i64.const -4294967296)))))))
                                                        (local.tee $l10
                                                          (f64.add
                                                            (f64.mul
                                                              (local.get $p0)
                                                              (local.get $l10))
                                                            (f64.const -0x1p+0 (;=-1;))))))))
                                                (local.tee $l10
                                                  (f64.mul
                                                    (local.get $l10)
                                                    (local.tee $l17
                                                      (f64.mul
                                                        (local.get $l10)
                                                        (local.tee $l16
                                                          (f64.load offset=16
                                                            (local.get $l5)))))))))
                                            (local.tee $l12
                                              (f64.add
                                                (f64.add
                                                  (f64.add
                                                    (local.get $l10)
                                                    (f64.sub
                                                      (local.get $l15)
                                                      (local.get $l18)))
                                                  (f64.add
                                                    (f64.mul
                                                      (local.get $l14)
                                                      (f64.add
                                                        (local.get $l17)
                                                        (local.tee $l10
                                                          (f64.mul
                                                            (local.get $l16)
                                                            (local.get $p0)))))
                                                    (f64.add
                                                      (f64.add
                                                        (f64.load
                                                          (i32.add
                                                            (local.get $l4)
                                                            (i32.const 96)))
                                                        (f64.mul
                                                          (f64.load offset=8
                                                            (local.get $l5))
                                                          (local.get $l12)))
                                                      (f64.add
                                                        (local.get $p0)
                                                        (f64.sub
                                                          (local.get $l13)
                                                          (local.get $l15))))))
                                                (f64.mul
                                                  (f64.mul
                                                    (local.get $p0)
                                                    (local.tee $l10
                                                      (f64.mul
                                                        (local.get $p0)
                                                        (local.get $l10))))
                                                  (f64.add
                                                    (f64.add
                                                      (f64.load
                                                        (i32.add
                                                          (local.get $l5)
                                                          (i32.const 24)))
                                                      (f64.mul
                                                        (local.get $p0)
                                                        (f64.load
                                                          (i32.add
                                                            (local.get $l5)
                                                            (i32.const 32)))))
                                                    (f64.mul
                                                      (local.get $l10)
                                                      (f64.add
                                                        (f64.add
                                                          (f64.load
                                                            (i32.add
                                                              (local.get $l5)
                                                              (i32.const 40)))
                                                          (f64.mul
                                                            (local.get $p0)
                                                            (f64.load
                                                              (i32.add
                                                                (local.get $l5)
                                                                (i32.const 48)))))
                                                        (f64.mul
                                                          (local.get $l10)
                                                          (f64.add
                                                            (f64.load
                                                              (i32.add
                                                                (local.get $l5)
                                                                (i32.const 56)))
                                                            (f64.mul
                                                              (local.get $p0)
                                                              (f64.load
                                                                (i32.add
                                                                  (local.get $l5)
                                                                  (i32.const 64)))))))))))))))
                                      (i64.const -134217728))))))))
                        (i64.const 52)))
                    (i32.const 2047)))
                (i32.const -969))
              (i32.const 63)))
          (block $B15
            (br_if $B15
              (i32.gt_u
                (local.get $l4)
                (i32.const 968)))
            (return
              (select
                (f64.const -0x1p+0 (;=-1;))
                (f64.const 0x1p+0 (;=1;))
                (local.get $l8))))
          (local.set $l5
            (i32.lt_u
              (local.get $l4)
              (i32.const 1033)))
          (local.set $l4
            (i32.const 0))
          (br_if $B14
            (local.get $l5))
          (block $B16
            (br_if $B16
              (i64.gt_s
                (local.get $l6)
                (i64.const -1)))
            (return
              (call $__math_uflow
                (local.get $l8))))
          (return
            (call $__math_oflow
              (local.get $l8))))
        (local.set $p0
          (f64.add
            (f64.add
              (f64.add
                (f64.load
                  (i32.add
                    (local.tee $l7
                      (i32.add
                        (local.tee $l5
                          (i32.add
                            (i32.const 66384)
                            (i32.const 6416)))
                        (i32.const 112)))
                    (local.tee $l3
                      (i32.and
                        (i32.shl
                          (local.tee $l19
                            (i32.wrap_i64
                              (local.tee $l6
                                (i64.reinterpret_f64
                                  (local.tee $l14
                                    (f64.add
                                      (f64.mul
                                        (local.get $l15)
                                        (f64.load
                                          (local.get $l5)))
                                      (local.tee $l13
                                        (f64.load offset=8
                                          (local.get $l5)))))))))
                          (i32.const 4))
                        (i32.const 2032)))))
                (local.tee $p0
                  (f64.add
                    (f64.add
                      (f64.mul
                        (f64.sub
                          (local.get $p1)
                          (local.get $l11))
                        (local.get $l10))
                      (f64.mul
                        (f64.add
                          (f64.add
                            (local.get $l12)
                            (f64.sub
                              (local.get $l18)
                              (local.get $p0)))
                          (f64.sub
                            (local.get $p0)
                            (local.get $l10)))
                        (local.get $p1)))
                    (f64.add
                      (f64.mul
                        (local.tee $p0
                          (f64.sub
                            (local.get $l14)
                            (local.get $l13)))
                        (f64.load offset=24
                          (local.get $l5)))
                      (f64.add
                        (local.get $l15)
                        (f64.mul
                          (f64.load offset=16
                            (local.get $l5))
                          (local.get $p0)))))))
              (f64.mul
                (local.tee $p1
                  (f64.mul
                    (local.get $p0)
                    (local.get $p0)))
                (f64.add
                  (f64.load offset=32
                    (local.get $l5))
                  (f64.mul
                    (local.get $p0)
                    (f64.load
                      (i32.add
                        (local.get $l5)
                        (i32.const 40)))))))
            (f64.mul
              (f64.mul
                (local.get $p1)
                (local.get $p1))
              (f64.add
                (f64.load
                  (i32.add
                    (local.get $l5)
                    (i32.const 48)))
                (f64.mul
                  (local.get $p0)
                  (f64.load
                    (i32.add
                      (local.get $l5)
                      (i32.const 56))))))))
        (local.set $l6
          (i64.add
            (i64.load
              (i32.add
                (local.get $l7)
                (i32.or
                  (local.get $l3)
                  (i32.const 8))))
            (i64.shl
              (i64.add
                (local.get $l6)
                (i64.extend_i32_u
                  (local.get $l8)))
              (i64.const 45))))
        (block $B17
          (br_if $B17
            (local.get $l4))
          (block $B18
            (br_if $B18
              (i32.lt_s
                (local.get $l19)
                (i32.const 0)))
            (return
              (f64.mul
                (f64.add
                  (f64.mul
                    (local.get $p0)
                    (local.tee $p1
                      (f64.reinterpret_i64
                        (i64.add
                          (local.get $l6)
                          (i64.const -4544132024016830464)))))
                  (local.get $p1))
                (f64.const 0x1p+1009 (;=5.48612e+303;)))))
          (block $B19
            (br_if $B19
              (i32.xor
                (f64.lt
                  (f64.abs
                    (local.tee $p0
                      (f64.add
                        (local.tee $l10
                          (f64.mul
                            (local.get $p0)
                            (local.tee $p1
                              (f64.reinterpret_i64
                                (local.tee $l6
                                  (i64.add
                                    (local.get $l6)
                                    (i64.const 4602678819172646912)))))))
                        (local.get $p1))))
                  (f64.const 0x1p+0 (;=1;)))
                (i32.const 1)))
            (local.set $p0
              (select
                (f64.reinterpret_i64
                  (i64.and
                    (local.get $l6)
                    (i64.const -9223372036854775808)))
                (local.tee $p0
                  (f64.sub
                    (f64.add
                      (local.tee $l18
                        (f64.add
                          (local.get $p0)
                          (local.tee $l15
                            (select
                              (f64.const -0x1p+0 (;=-1;))
                              (f64.const 0x1p+0 (;=1;))
                              (f64.lt
                                (local.get $p0)
                                (f64.const 0x0p+0 (;=0;)))))))
                      (f64.add
                        (f64.add
                          (local.get $l10)
                          (f64.sub
                            (local.get $p1)
                            (local.get $p0)))
                        (f64.add
                          (local.get $p0)
                          (f64.sub
                            (local.get $l15)
                            (local.get $l18)))))
                    (local.get $l15)))
                (f64.eq
                  (local.get $p0)
                  (f64.const 0x0p+0 (;=0;))))))
          (return
            (f64.mul
              (local.get $p0)
              (f64.const 0x1p-1022 (;=2.22507e-308;)))))
        (local.set $l10
          (f64.add
            (f64.mul
              (local.get $p0)
              (local.tee $p1
                (f64.reinterpret_i64
                  (local.get $l6))))
            (local.get $p1))))
      (return
        (local.get $l10)))
    (call $__math_invalid
      (local.get $p0)))
  (func $sin (type $t31) (param $p0 f64) (result f64)
    (local $l1 i32) (local $l2 i32)
    (global.set $g4
      (local.tee $l1
        (i32.sub
          (global.get $g4)
          (i32.const 16))))
    (block $B0
      (block $B1
        (br_if $B1
          (i32.gt_u
            (local.tee $l2
              (i32.and
                (i32.wrap_i64
                  (i64.shr_u
                    (i64.reinterpret_f64
                      (local.get $p0))
                    (i64.const 32)))
                (i32.const 2147483647)))
            (i32.const 1072243195)))
        (br_if $B0
          (i32.lt_u
            (local.get $l2)
            (i32.const 1045430272)))
        (local.set $p0
          (call $__sin
            (local.get $p0)
            (f64.const 0x0p+0 (;=0;))
            (i32.const 0)))
        (br $B0))
      (block $B2
        (br_if $B2
          (i32.lt_u
            (local.get $l2)
            (i32.const 2146435072)))
        (local.set $p0
          (f64.sub
            (local.get $p0)
            (local.get $p0)))
        (br $B0))
      (block $B3
        (br_if $B3
          (i32.gt_u
            (local.tee $l2
              (i32.and
                (call $__rem_pio2
                  (local.get $p0)
                  (local.get $l1))
                (i32.const 3)))
            (i32.const 2)))
        (block $B4
          (block $B5
            (block $B6
              (br_table $B6 $B5 $B4 $B6
                (local.get $l2)))
            (local.set $p0
              (call $__sin
                (f64.load
                  (local.get $l1))
                (f64.load offset=8
                  (local.get $l1))
                (i32.const 1)))
            (br $B0))
          (local.set $p0
            (call $__cos
              (f64.load
                (local.get $l1))
              (f64.load offset=8
                (local.get $l1))))
          (br $B0))
        (local.set $p0
          (f64.neg
            (call $__sin
              (f64.load
                (local.get $l1))
              (f64.load offset=8
                (local.get $l1))
              (i32.const 1))))
        (br $B0))
      (local.set $p0
        (f64.neg
          (call $__cos
            (f64.load
              (local.get $l1))
            (f64.load offset=8
              (local.get $l1))))))
    (global.set $g4
      (i32.add
        (local.get $l1)
        (i32.const 16)))
    (local.get $p0))
  (func $cos (type $t31) (param $p0 f64) (result f64)
    (local $l1 i32) (local $l2 i32) (local $l3 f64)
    (global.set $g4
      (local.tee $l1
        (i32.sub
          (global.get $g4)
          (i32.const 16))))
    (block $B0
      (block $B1
        (br_if $B1
          (i32.gt_u
            (local.tee $l2
              (i32.and
                (i32.wrap_i64
                  (i64.shr_u
                    (i64.reinterpret_f64
                      (local.get $p0))
                    (i64.const 32)))
                (i32.const 2147483647)))
            (i32.const 1072243195)))
        (local.set $l3
          (f64.const 0x1p+0 (;=1;)))
        (br_if $B0
          (i32.lt_u
            (local.get $l2)
            (i32.const 1044816030)))
        (local.set $l3
          (call $__cos
            (local.get $p0)
            (f64.const 0x0p+0 (;=0;))))
        (br $B0))
      (block $B2
        (br_if $B2
          (i32.lt_u
            (local.get $l2)
            (i32.const 2146435072)))
        (local.set $l3
          (f64.sub
            (local.get $p0)
            (local.get $p0)))
        (br $B0))
      (block $B3
        (br_if $B3
          (i32.gt_u
            (local.tee $l2
              (i32.and
                (call $__rem_pio2
                  (local.get $p0)
                  (local.get $l1))
                (i32.const 3)))
            (i32.const 2)))
        (block $B4
          (block $B5
            (block $B6
              (br_table $B6 $B5 $B4 $B6
                (local.get $l2)))
            (local.set $l3
              (call $__cos
                (f64.load
                  (local.get $l1))
                (f64.load offset=8
                  (local.get $l1))))
            (br $B0))
          (local.set $l3
            (f64.neg
              (call $__sin
                (f64.load
                  (local.get $l1))
                (f64.load offset=8
                  (local.get $l1))
                (i32.const 1))))
          (br $B0))
        (local.set $l3
          (f64.neg
            (call $__cos
              (f64.load
                (local.get $l1))
              (f64.load offset=8
                (local.get $l1)))))
        (br $B0))
      (local.set $l3
        (call $__sin
          (f64.load
            (local.get $l1))
          (f64.load offset=8
            (local.get $l1))
          (i32.const 1))))
    (global.set $g4
      (i32.add
        (local.get $l1)
        (i32.const 16)))
    (local.get $l3))
  (func $tan (type $t31) (param $p0 f64) (result f64)
    (local $l1 i32) (local $l2 i32)
    (global.set $g4
      (local.tee $l1
        (i32.sub
          (global.get $g4)
          (i32.const 16))))
    (block $B0
      (block $B1
        (br_if $B1
          (i32.gt_u
            (local.tee $l2
              (i32.and
                (i32.wrap_i64
                  (i64.shr_u
                    (i64.reinterpret_f64
                      (local.get $p0))
                    (i64.const 32)))
                (i32.const 2147483647)))
            (i32.const 1072243195)))
        (br_if $B0
          (i32.lt_u
            (local.get $l2)
            (i32.const 1044381696)))
        (local.set $p0
          (call $__tan
            (local.get $p0)
            (f64.const 0x0p+0 (;=0;))
            (i32.const 0)))
        (br $B0))
      (block $B2
        (br_if $B2
          (i32.lt_u
            (local.get $l2)
            (i32.const 2146435072)))
        (local.set $p0
          (f64.sub
            (local.get $p0)
            (local.get $p0)))
        (br $B0))
      (local.set $l2
        (call $__rem_pio2
          (local.get $p0)
          (local.get $l1)))
      (local.set $p0
        (call $__tan
          (f64.load
            (local.get $l1))
          (f64.load offset=8
            (local.get $l1))
          (i32.and
            (local.get $l2)
            (i32.const 1)))))
    (global.set $g4
      (i32.add
        (local.get $l1)
        (i32.const 16)))
    (local.get $p0))
  (func $asin (type $t31) (param $p0 f64) (result f64)
    (local $l1 i64) (local $l2 i32) (local $l3 f64) (local $l4 f64) (local $l5 f64)
    (block $B0
      (block $B1
        (block $B2
          (br_if $B2
            (i32.lt_u
              (local.tee $l2
                (i32.and
                  (i32.wrap_i64
                    (i64.shr_u
                      (local.tee $l1
                        (i64.reinterpret_f64
                          (local.get $p0)))
                      (i64.const 32)))
                  (i32.const 2147483647)))
              (i32.const 1072693248)))
          (br_if $B1
            (i32.or
              (i32.add
                (local.get $l2)
                (i32.const -1072693248))
              (i32.wrap_i64
                (local.get $l1))))
          (return
            (f64.add
              (f64.mul
                (local.get $p0)
                (f64.const 0x1.921fb54442d18p+0 (;=1.5708;)))
              (f64.const 0x1p-120 (;=7.52316e-37;)))))
        (block $B3
          (br_if $B3
            (i32.gt_u
              (local.get $l2)
              (i32.const 1071644671)))
          (br_if $B0
            (i32.lt_u
              (i32.add
                (local.get $l2)
                (i32.const -1048576))
              (i32.const 1044381696)))
          (return
            (f64.add
              (f64.mul
                (f64.div
                  (f64.mul
                    (local.tee $l3
                      (f64.mul
                        (local.get $p0)
                        (local.get $p0)))
                    (f64.add
                      (f64.mul
                        (local.get $l3)
                        (f64.add
                          (f64.mul
                            (local.get $l3)
                            (f64.add
                              (f64.mul
                                (local.get $l3)
                                (f64.add
                                  (f64.mul
                                    (local.get $l3)
                                    (f64.add
                                      (f64.mul
                                        (local.get $l3)
                                        (f64.const 0x1.23de10dfdf709p-15 (;=3.47933e-05;)))
                                      (f64.const 0x1.9efe07501b288p-11 (;=0.000791535;))))
                                  (f64.const -0x1.48228b5688f3bp-5 (;=-0.0400555;))))
                              (f64.const 0x1.9c1550e884455p-3 (;=0.201213;))))
                          (f64.const -0x1.4d61203eb6f7dp-2 (;=-0.325566;))))
                      (f64.const 0x1.5555555555555p-3 (;=0.166667;))))
                  (f64.add
                    (f64.mul
                      (local.get $l3)
                      (f64.add
                        (f64.mul
                          (local.get $l3)
                          (f64.add
                            (f64.mul
                              (local.get $l3)
                              (f64.add
                                (f64.mul
                                  (local.get $l3)
                                  (f64.const 0x1.3b8c5b12e9282p-4 (;=0.0770382;)))
                                (f64.const -0x1.6066c1b8d0159p-1 (;=-0.688284;))))
                            (f64.const 0x1.02ae59c598ac8p+1 (;=2.02095;))))
                        (f64.const -0x1.33a271c8a2d4bp+1 (;=-2.40339;))))
                    (f64.const 0x1p+0 (;=1;))))
                (local.get $p0))
              (local.get $p0))))
        (local.set $l4
          (f64.div
            (f64.mul
              (local.tee $p0
                (f64.mul
                  (f64.sub
                    (f64.const 0x1p+0 (;=1;))
                    (f64.abs
                      (local.get $p0)))
                  (f64.const 0x1p-1 (;=0.5;))))
              (f64.add
                (f64.mul
                  (local.get $p0)
                  (f64.add
                    (f64.mul
                      (local.get $p0)
                      (f64.add
                        (f64.mul
                          (local.get $p0)
                          (f64.add
                            (f64.mul
                              (local.get $p0)
                              (f64.add
                                (f64.mul
                                  (local.get $p0)
                                  (f64.const 0x1.23de10dfdf709p-15 (;=3.47933e-05;)))
                                (f64.const 0x1.9efe07501b288p-11 (;=0.000791535;))))
                            (f64.const -0x1.48228b5688f3bp-5 (;=-0.0400555;))))
                        (f64.const 0x1.9c1550e884455p-3 (;=0.201213;))))
                    (f64.const -0x1.4d61203eb6f7dp-2 (;=-0.325566;))))
                (f64.const 0x1.5555555555555p-3 (;=0.166667;))))
            (f64.add
              (f64.mul
                (local.get $p0)
                (f64.add
                  (f64.mul
                    (local.get $p0)
                    (f64.add
                      (f64.mul
                        (local.get $p0)
                        (f64.add
                          (f64.mul
                            (local.get $p0)
                            (f64.const 0x1.3b8c5b12e9282p-4 (;=0.0770382;)))
                          (f64.const -0x1.6066c1b8d0159p-1 (;=-0.688284;))))
                      (f64.const 0x1.02ae59c598ac8p+1 (;=2.02095;))))
                  (f64.const -0x1.33a271c8a2d4bp+1 (;=-2.40339;))))
              (f64.const 0x1p+0 (;=1;)))))
        (local.set $l3
          (f64.sqrt
            (local.get $p0)))
        (block $B4
          (block $B5
            (br_if $B5
              (i32.lt_u
                (local.get $l2)
                (i32.const 1072640819)))
            (local.set $p0
              (f64.sub
                (f64.const 0x1.921fb54442d18p+0 (;=1.5708;))
                (f64.add
                  (f64.add
                    (local.tee $p0
                      (f64.add
                        (local.get $l3)
                        (f64.mul
                          (local.get $l3)
                          (local.get $l4))))
                    (local.get $p0))
                  (f64.const -0x1.1a62633145c07p-54 (;=-6.12323e-17;)))))
            (br $B4))
          (local.set $p0
            (f64.add
              (f64.sub
                (f64.sub
                  (f64.const 0x1.921fb54442d18p-1 (;=0.785398;))
                  (f64.add
                    (local.tee $l5
                      (f64.reinterpret_i64
                        (i64.and
                          (i64.reinterpret_f64
                            (local.get $l3))
                          (i64.const -4294967296))))
                    (local.get $l5)))
                (f64.sub
                  (f64.mul
                    (f64.add
                      (local.get $l3)
                      (local.get $l3))
                    (local.get $l4))
                  (f64.sub
                    (f64.const 0x1.1a62633145c07p-54 (;=6.12323e-17;))
                    (f64.add
                      (local.tee $p0
                        (f64.div
                          (f64.sub
                            (local.get $p0)
                            (f64.mul
                              (local.get $l5)
                              (local.get $l5)))
                          (f64.add
                            (local.get $l3)
                            (local.get $l5))))
                      (local.get $p0)))))
              (f64.const 0x1.921fb54442d18p-1 (;=0.785398;)))))
        (return
          (select
            (f64.neg
              (local.get $p0))
            (local.get $p0)
            (i64.lt_s
              (local.get $l1)
              (i64.const 0)))))
      (local.set $p0
        (f64.div
          (f64.const 0x0p+0 (;=0;))
          (f64.sub
            (local.get $p0)
            (local.get $p0)))))
    (local.get $p0))
  (func $acos (type $t31) (param $p0 f64) (result f64)
    (local $l1 i64) (local $l2 i32) (local $l3 f64) (local $l4 f64)
    (block $B0
      (br_if $B0
        (i32.lt_u
          (local.tee $l2
            (i32.and
              (i32.wrap_i64
                (i64.shr_u
                  (local.tee $l1
                    (i64.reinterpret_f64
                      (local.get $p0)))
                  (i64.const 32)))
              (i32.const 2147483647)))
          (i32.const 1072693248)))
      (block $B1
        (br_if $B1
          (i32.or
            (i32.add
              (local.get $l2)
              (i32.const -1072693248))
            (i32.wrap_i64
              (local.get $l1))))
        (return
          (select
            (f64.const 0x1.921fb54442d18p+1 (;=3.14159;))
            (f64.const 0x0p+0 (;=0;))
            (i64.lt_s
              (local.get $l1)
              (i64.const 0)))))
      (return
        (f64.div
          (f64.const 0x0p+0 (;=0;))
          (f64.sub
            (local.get $p0)
            (local.get $p0)))))
    (block $B2
      (block $B3
        (br_if $B3
          (i32.gt_u
            (local.get $l2)
            (i32.const 1071644671)))
        (local.set $l3
          (f64.const 0x1.921fb54442d18p+0 (;=1.5708;)))
        (br_if $B2
          (i32.lt_u
            (local.get $l2)
            (i32.const 1012924417)))
        (return
          (f64.add
            (f64.sub
              (f64.sub
                (f64.const 0x1.1a62633145c07p-54 (;=6.12323e-17;))
                (f64.mul
                  (f64.div
                    (f64.mul
                      (local.tee $l3
                        (f64.mul
                          (local.get $p0)
                          (local.get $p0)))
                      (f64.add
                        (f64.mul
                          (local.get $l3)
                          (f64.add
                            (f64.mul
                              (local.get $l3)
                              (f64.add
                                (f64.mul
                                  (local.get $l3)
                                  (f64.add
                                    (f64.mul
                                      (local.get $l3)
                                      (f64.add
                                        (f64.mul
                                          (local.get $l3)
                                          (f64.const 0x1.23de10dfdf709p-15 (;=3.47933e-05;)))
                                        (f64.const 0x1.9efe07501b288p-11 (;=0.000791535;))))
                                    (f64.const -0x1.48228b5688f3bp-5 (;=-0.0400555;))))
                                (f64.const 0x1.9c1550e884455p-3 (;=0.201213;))))
                            (f64.const -0x1.4d61203eb6f7dp-2 (;=-0.325566;))))
                        (f64.const 0x1.5555555555555p-3 (;=0.166667;))))
                    (f64.add
                      (f64.mul
                        (local.get $l3)
                        (f64.add
                          (f64.mul
                            (local.get $l3)
                            (f64.add
                              (f64.mul
                                (local.get $l3)
                                (f64.add
                                  (f64.mul
                                    (local.get $l3)
                                    (f64.const 0x1.3b8c5b12e9282p-4 (;=0.0770382;)))
                                  (f64.const -0x1.6066c1b8d0159p-1 (;=-0.688284;))))
                              (f64.const 0x1.02ae59c598ac8p+1 (;=2.02095;))))
                          (f64.const -0x1.33a271c8a2d4bp+1 (;=-2.40339;))))
                      (f64.const 0x1p+0 (;=1;))))
                  (local.get $p0)))
              (local.get $p0))
            (f64.const 0x1.921fb54442d18p+0 (;=1.5708;)))))
      (block $B4
        (br_if $B4
          (i64.gt_s
            (local.get $l1)
            (i64.const -1)))
        (return
          (f64.add
            (local.tee $p0
              (f64.sub
                (f64.const 0x1.921fb54442d18p+0 (;=1.5708;))
                (f64.add
                  (local.tee $l3
                    (f64.sqrt
                      (local.tee $p0
                        (f64.mul
                          (f64.add
                            (local.get $p0)
                            (f64.const 0x1p+0 (;=1;)))
                          (f64.const 0x1p-1 (;=0.5;))))))
                  (f64.add
                    (f64.mul
                      (local.get $l3)
                      (f64.div
                        (f64.mul
                          (local.get $p0)
                          (f64.add
                            (f64.mul
                              (local.get $p0)
                              (f64.add
                                (f64.mul
                                  (local.get $p0)
                                  (f64.add
                                    (f64.mul
                                      (local.get $p0)
                                      (f64.add
                                        (f64.mul
                                          (local.get $p0)
                                          (f64.add
                                            (f64.mul
                                              (local.get $p0)
                                              (f64.const 0x1.23de10dfdf709p-15 (;=3.47933e-05;)))
                                            (f64.const 0x1.9efe07501b288p-11 (;=0.000791535;))))
                                        (f64.const -0x1.48228b5688f3bp-5 (;=-0.0400555;))))
                                    (f64.const 0x1.9c1550e884455p-3 (;=0.201213;))))
                                (f64.const -0x1.4d61203eb6f7dp-2 (;=-0.325566;))))
                            (f64.const 0x1.5555555555555p-3 (;=0.166667;))))
                        (f64.add
                          (f64.mul
                            (local.get $p0)
                            (f64.add
                              (f64.mul
                                (local.get $p0)
                                (f64.add
                                  (f64.mul
                                    (local.get $p0)
                                    (f64.add
                                      (f64.mul
                                        (local.get $p0)
                                        (f64.const 0x1.3b8c5b12e9282p-4 (;=0.0770382;)))
                                      (f64.const -0x1.6066c1b8d0159p-1 (;=-0.688284;))))
                                  (f64.const 0x1.02ae59c598ac8p+1 (;=2.02095;))))
                              (f64.const -0x1.33a271c8a2d4bp+1 (;=-2.40339;))))
                          (f64.const 0x1p+0 (;=1;)))))
                    (f64.const -0x1.1a62633145c07p-54 (;=-6.12323e-17;))))))
            (local.get $p0))))
      (local.set $l3
        (f64.add
          (local.tee $p0
            (f64.add
              (f64.add
                (f64.div
                  (f64.sub
                    (local.tee $p0
                      (f64.mul
                        (f64.sub
                          (f64.const 0x1p+0 (;=1;))
                          (local.get $p0))
                        (f64.const 0x1p-1 (;=0.5;))))
                    (f64.mul
                      (local.tee $l3
                        (f64.reinterpret_i64
                          (i64.and
                            (i64.reinterpret_f64
                              (local.tee $l4
                                (f64.sqrt
                                  (local.get $p0))))
                            (i64.const -4294967296))))
                      (local.get $l3)))
                  (f64.add
                    (local.get $l4)
                    (local.get $l3)))
                (f64.mul
                  (local.get $l4)
                  (f64.div
                    (f64.mul
                      (local.get $p0)
                      (f64.add
                        (f64.mul
                          (local.get $p0)
                          (f64.add
                            (f64.mul
                              (local.get $p0)
                              (f64.add
                                (f64.mul
                                  (local.get $p0)
                                  (f64.add
                                    (f64.mul
                                      (local.get $p0)
                                      (f64.add
                                        (f64.mul
                                          (local.get $p0)
                                          (f64.const 0x1.23de10dfdf709p-15 (;=3.47933e-05;)))
                                        (f64.const 0x1.9efe07501b288p-11 (;=0.000791535;))))
                                    (f64.const -0x1.48228b5688f3bp-5 (;=-0.0400555;))))
                                (f64.const 0x1.9c1550e884455p-3 (;=0.201213;))))
                            (f64.const -0x1.4d61203eb6f7dp-2 (;=-0.325566;))))
                        (f64.const 0x1.5555555555555p-3 (;=0.166667;))))
                    (f64.add
                      (f64.mul
                        (local.get $p0)
                        (f64.add
                          (f64.mul
                            (local.get $p0)
                            (f64.add
                              (f64.mul
                                (local.get $p0)
                                (f64.add
                                  (f64.mul
                                    (local.get $p0)
                                    (f64.const 0x1.3b8c5b12e9282p-4 (;=0.0770382;)))
                                  (f64.const -0x1.6066c1b8d0159p-1 (;=-0.688284;))))
                              (f64.const 0x1.02ae59c598ac8p+1 (;=2.02095;))))
                          (f64.const -0x1.33a271c8a2d4bp+1 (;=-2.40339;))))
                      (f64.const 0x1p+0 (;=1;))))))
              (local.get $l3)))
          (local.get $p0))))
    (local.get $l3))
  (func $atan (type $t31) (param $p0 f64) (result f64)
    (local $l1 i64) (local $l2 i32) (local $l3 i32) (local $l4 f64) (local $l5 f64) (local $l6 f64)
    (block $B0
      (block $B1
        (br_if $B1
          (i32.lt_u
            (local.tee $l2
              (i32.and
                (i32.wrap_i64
                  (i64.shr_u
                    (local.tee $l1
                      (i64.reinterpret_f64
                        (local.get $p0)))
                    (i64.const 32)))
                (i32.const 2147483647)))
            (i32.const 1141899264)))
        (br_if $B0
          (f64.ne
            (local.get $p0)
            (local.get $p0)))
        (return
          (select
            (f64.const -0x1.921fb54442d18p+0 (;=-1.5708;))
            (f64.const 0x1.921fb54442d18p+0 (;=1.5708;))
            (i64.lt_s
              (local.get $l1)
              (i64.const 0)))))
      (block $B2
        (block $B3
          (br_if $B3
            (i32.gt_u
              (local.get $l2)
              (i32.const 1071382527)))
          (local.set $l3
            (i32.const -1))
          (br_if $B2
            (i32.ge_u
              (local.get $l2)
              (i32.const 1044381696)))
          (br $B0))
        (local.set $p0
          (f64.abs
            (local.get $p0)))
        (block $B4
          (br_if $B4
            (i32.gt_u
              (local.get $l2)
              (i32.const 1072889855)))
          (block $B5
            (br_if $B5
              (i32.gt_u
                (local.get $l2)
                (i32.const 1072037887)))
            (local.set $p0
              (f64.div
                (f64.add
                  (f64.add
                    (local.get $p0)
                    (local.get $p0))
                  (f64.const -0x1p+0 (;=-1;)))
                (f64.add
                  (local.get $p0)
                  (f64.const 0x1p+1 (;=2;)))))
            (local.set $l3
              (i32.const 0))
            (br $B2))
          (local.set $p0
            (f64.div
              (f64.add
                (local.get $p0)
                (f64.const -0x1p+0 (;=-1;)))
              (f64.add
                (local.get $p0)
                (f64.const 0x1p+0 (;=1;)))))
          (local.set $l3
            (i32.const 1))
          (br $B2))
        (block $B6
          (br_if $B6
            (i32.gt_u
              (local.get $l2)
              (i32.const 1073971199)))
          (local.set $p0
            (f64.div
              (f64.add
                (local.get $p0)
                (f64.const -0x1.8p+0 (;=-1.5;)))
              (f64.add
                (f64.mul
                  (local.get $p0)
                  (f64.const 0x1.8p+0 (;=1.5;)))
                (f64.const 0x1p+0 (;=1;)))))
          (local.set $l3
            (i32.const 2))
          (br $B2))
        (local.set $p0
          (f64.div
            (f64.const -0x1p+0 (;=-1;))
            (local.get $p0)))
        (local.set $l3
          (i32.const 3)))
      (local.set $l6
        (f64.mul
          (local.tee $l5
            (f64.mul
              (local.tee $l4
                (f64.mul
                  (local.get $p0)
                  (local.get $p0)))
              (local.get $l4)))
          (f64.add
            (f64.mul
              (local.get $l5)
              (f64.add
                (f64.mul
                  (local.get $l5)
                  (f64.add
                    (f64.mul
                      (local.get $l5)
                      (f64.add
                        (f64.mul
                          (local.get $l5)
                          (f64.const -0x1.2b4442c6a6c2fp-5 (;=-0.0365316;)))
                        (f64.const -0x1.dde2d52defd9ap-5 (;=-0.0583357;))))
                    (f64.const -0x1.3b0f2af749a6dp-4 (;=-0.0769188;))))
                (f64.const -0x1.c71c6fe231671p-4 (;=-0.111111;))))
            (f64.const -0x1.999999998ebc4p-3 (;=-0.2;)))))
      (local.set $l5
        (f64.mul
          (local.get $l4)
          (f64.add
            (f64.mul
              (local.get $l5)
              (f64.add
                (f64.mul
                  (local.get $l5)
                  (f64.add
                    (f64.mul
                      (local.get $l5)
                      (f64.add
                        (f64.mul
                          (local.get $l5)
                          (f64.add
                            (f64.mul
                              (local.get $l5)
                              (f64.const 0x1.0ad3ae322da11p-6 (;=0.0162858;)))
                            (f64.const 0x1.97b4b24760debp-5 (;=0.0497688;))))
                        (f64.const 0x1.10d66a0d03d51p-4 (;=0.0666107;))))
                    (f64.const 0x1.745cdc54c206ep-4 (;=0.0909089;))))
                (f64.const 0x1.24924920083ffp-3 (;=0.142857;))))
            (f64.const 0x1.555555555550dp-2 (;=0.333333;)))))
      (block $B7
        (br_if $B7
          (i32.gt_s
            (local.get $l3)
            (i32.const -1)))
        (return
          (f64.sub
            (local.get $p0)
            (f64.mul
              (local.get $p0)
              (f64.add
                (local.get $l6)
                (local.get $l5))))))
      (local.set $p0
        (select
          (f64.neg
            (local.tee $p0
              (f64.sub
                (f64.load
                  (i32.add
                    (i32.add
                      (local.tee $l2
                        (i32.const 66384))
                      (i32.const 6288))
                    (local.tee $l3
                      (i32.shl
                        (local.get $l3)
                        (i32.const 3)))))
                (f64.sub
                  (f64.sub
                    (f64.mul
                      (local.get $p0)
                      (f64.add
                        (local.get $l6)
                        (local.get $l5)))
                    (f64.load
                      (i32.add
                        (i32.add
                          (local.get $l2)
                          (i32.const 6320))
                        (local.get $l3))))
                  (local.get $p0)))))
          (local.get $p0)
          (i64.lt_s
            (local.get $l1)
            (i64.const 0)))))
    (local.get $p0))
  (func $atan2 (type $t30) (param $p0 f64) (param $p1 f64) (result f64)
    (local $l2 i64) (local $l3 i32) (local $l4 i32) (local $l5 i32) (local $l6 i32) (local $l7 i32) (local $l8 f64)
    (block $B0
      (br_if $B0
        (i32.and
          (f64.eq
            (local.get $p1)
            (local.get $p1))
          (f64.eq
            (local.get $p0)
            (local.get $p0))))
      (return
        (f64.add
          (local.get $p0)
          (local.get $p1))))
    (block $B1
      (br_if $B1
        (i32.or
          (i32.add
            (local.tee $l3
              (i32.wrap_i64
                (i64.shr_u
                  (local.tee $l2
                    (i64.reinterpret_f64
                      (local.get $p1)))
                  (i64.const 32))))
            (i32.const -1072693248))
          (local.tee $l4
            (i32.wrap_i64
              (local.get $l2)))))
      (return
        (call $atan
          (local.get $p0))))
    (local.set $l6
      (i32.or
        (local.tee $l5
          (i32.and
            (i32.wrap_i64
              (i64.shr_u
                (local.get $l2)
                (i64.const 62)))
            (i32.const 2)))
        (i32.wrap_i64
          (i64.shr_u
            (local.tee $l2
              (i64.reinterpret_f64
                (local.get $p0)))
            (i64.const 63)))))
    (block $B2
      (block $B3
        (block $B4
          (br_if $B4
            (i32.or
              (local.tee $l7
                (i32.and
                  (i32.wrap_i64
                    (i64.shr_u
                      (local.get $l2)
                      (i64.const 32)))
                  (i32.const 2147483647)))
              (i32.wrap_i64
                (local.get $l2))))
          (block $B5
            (br_table $B2 $B2 $B3 $B5 $B2
              (local.get $l6)))
          (return
            (f64.const -0x1.921fb54442d18p+1 (;=-3.14159;))))
        (block $B6
          (br_if $B6
            (i32.or
              (local.tee $l3
                (i32.and
                  (local.get $l3)
                  (i32.const 2147483647)))
              (local.get $l4)))
          (return
            (select
              (f64.const -0x1.921fb54442d18p+0 (;=-1.5708;))
              (f64.const 0x1.921fb54442d18p+0 (;=1.5708;))
              (i64.lt_s
                (local.get $l2)
                (i64.const 0)))))
        (block $B7
          (block $B8
            (br_if $B8
              (i32.ne
                (local.get $l3)
                (i32.const 2146435072)))
            (br_if $B7
              (i32.ne
                (local.get $l7)
                (i32.const 2146435072)))
            (return
              (f64.load
                (i32.add
                  (i32.add
                    (i32.const 66384)
                    (i32.const 6352))
                  (i32.shl
                    (local.get $l6)
                    (i32.const 3))))))
          (block $B9
            (block $B10
              (br_if $B10
                (i32.eq
                  (local.get $l7)
                  (i32.const 2146435072)))
              (br_if $B9
                (i32.ge_u
                  (i32.add
                    (local.get $l3)
                    (i32.const 67108864))
                  (local.get $l7))))
            (return
              (select
                (f64.const -0x1.921fb54442d18p+0 (;=-1.5708;))
                (f64.const 0x1.921fb54442d18p+0 (;=1.5708;))
                (i64.lt_s
                  (local.get $l2)
                  (i64.const 0)))))
          (block $B11
            (block $B12
              (br_if $B12
                (i32.eqz
                  (local.get $l5)))
              (local.set $l8
                (f64.const 0x0p+0 (;=0;)))
              (br_if $B11
                (i32.lt_u
                  (i32.add
                    (local.get $l7)
                    (i32.const 67108864))
                  (local.get $l3))))
            (local.set $l8
              (call $atan
                (f64.abs
                  (f64.div
                    (local.get $p0)
                    (local.get $p1))))))
          (block $B13
            (br_if $B13
              (i32.gt_u
                (local.get $l6)
                (i32.const 2)))
            (local.set $p0
              (local.get $l8))
            (block $B14
              (block $B15
                (br_table $B2 $B15 $B14 $B2
                  (local.get $l6)))
              (return
                (f64.neg
                  (local.get $l8))))
            (return
              (f64.sub
                (f64.const 0x1.921fb54442d18p+1 (;=3.14159;))
                (f64.add
                  (local.get $l8)
                  (f64.const -0x1.1a62633145c07p-53 (;=-1.22465e-16;))))))
          (return
            (f64.add
              (f64.add
                (local.get $l8)
                (f64.const -0x1.1a62633145c07p-53 (;=-1.22465e-16;)))
              (f64.const -0x1.921fb54442d18p+1 (;=-3.14159;)))))
        (return
          (f64.load
            (i32.add
              (i32.add
                (i32.const 66384)
                (i32.const 6384))
              (i32.shl
                (local.get $l6)
                (i32.const 3))))))
      (local.set $p0
        (f64.const 0x1.921fb54442d18p+1 (;=3.14159;))))
    (local.get $p0))
  (func $exp (type $t31) (param $p0 f64) (result f64)
    (local $l1 i64) (local $l2 i32) (local $l3 i32) (local $l4 f64) (local $l5 i32) (local $l6 f64) (local $l7 i32) (local $l8 i32) (local $l9 f64)
    (block $B0
      (block $B1
        (block $B2
          (br_if $B2
            (i32.ge_u
              (i32.add
                (local.tee $l2
                  (i32.and
                    (i32.wrap_i64
                      (i64.shr_u
                        (local.tee $l1
                          (i64.reinterpret_f64
                            (local.get $p0)))
                        (i64.const 52)))
                    (i32.const 2047)))
                (i32.const -969))
              (i32.const 63)))
          (local.set $l3
            (local.get $l2))
          (br $B1))
        (local.set $l4
          (f64.const 0x1p+0 (;=1;)))
        (br_if $B0
          (i32.lt_u
            (local.get $l2)
            (i32.const 969)))
        (local.set $l3
          (i32.const 0))
        (br_if $B1
          (i32.lt_u
            (local.get $l2)
            (i32.const 1033)))
        (local.set $l4
          (f64.const 0x0p+0 (;=0;)))
        (br_if $B0
          (i64.eq
            (local.get $l1)
            (i64.const -4503599627370496)))
        (block $B3
          (br_if $B3
            (i32.ne
              (local.get $l2)
              (i32.const 2047)))
          (return
            (f64.add
              (local.get $p0)
              (f64.const 0x1p+0 (;=1;)))))
        (block $B4
          (br_if $B4
            (i64.gt_s
              (local.get $l1)
              (i64.const -1)))
          (return
            (call $__math_uflow
              (i32.const 0))))
        (return
          (call $__math_oflow
            (i32.const 0))))
      (local.set $p0
        (f64.add
          (f64.add
            (f64.add
              (f64.load
                (i32.add
                  (local.tee $l5
                    (i32.add
                      (local.tee $l2
                        (i32.add
                          (i32.const 66384)
                          (i32.const 6416)))
                      (i32.const 112)))
                  (local.tee $l8
                    (i32.and
                      (i32.shl
                        (local.tee $l7
                          (i32.wrap_i64
                            (local.tee $l1
                              (i64.reinterpret_f64
                                (local.tee $l6
                                  (f64.add
                                    (f64.mul
                                      (f64.load
                                        (local.get $l2))
                                      (local.get $p0))
                                    (local.tee $l4
                                      (f64.load offset=8
                                        (local.get $l2)))))))))
                        (i32.const 4))
                      (i32.const 2032)))))
              (local.tee $p0
                (f64.add
                  (f64.mul
                    (local.tee $l4
                      (f64.sub
                        (local.get $l6)
                        (local.get $l4)))
                    (f64.load offset=24
                      (local.get $l2)))
                  (f64.add
                    (f64.mul
                      (f64.load offset=16
                        (local.get $l2))
                      (local.get $l4))
                    (local.get $p0)))))
            (f64.mul
              (local.tee $l4
                (f64.mul
                  (local.get $p0)
                  (local.get $p0)))
              (f64.add
                (f64.load offset=32
                  (local.get $l2))
                (f64.mul
                  (local.get $p0)
                  (f64.load
                    (i32.add
                      (local.get $l2)
                      (i32.const 40)))))))
          (f64.mul
            (f64.mul
              (local.get $l4)
              (local.get $l4))
            (f64.add
              (f64.load
                (i32.add
                  (local.get $l2)
                  (i32.const 48)))
              (f64.mul
                (local.get $p0)
                (f64.load
                  (i32.add
                    (local.get $l2)
                    (i32.const 56))))))))
      (local.set $l1
        (i64.add
          (i64.load
            (i32.add
              (local.get $l5)
              (i32.or
                (local.get $l8)
                (i32.const 8))))
          (i64.shl
            (local.get $l1)
            (i64.const 45))))
      (block $B5
        (br_if $B5
          (local.get $l3))
        (block $B6
          (br_if $B6
            (i32.lt_s
              (local.get $l7)
              (i32.const 0)))
          (return
            (f64.mul
              (f64.add
                (f64.mul
                  (local.get $p0)
                  (local.tee $l4
                    (f64.reinterpret_i64
                      (i64.add
                        (local.get $l1)
                        (i64.const -4544132024016830464)))))
                (local.get $l4))
              (f64.const 0x1p+1009 (;=5.48612e+303;)))))
        (block $B7
          (br_if $B7
            (i32.xor
              (f64.lt
                (local.tee $p0
                  (f64.add
                    (local.tee $l6
                      (f64.mul
                        (local.get $p0)
                        (local.tee $l4
                          (f64.reinterpret_i64
                            (i64.add
                              (local.get $l1)
                              (i64.const 4602678819172646912))))))
                    (local.get $l4)))
                (f64.const 0x1p+0 (;=1;)))
              (i32.const 1)))
          (local.set $p0
            (f64.add
              (f64.add
                (local.tee $l9
                  (f64.add
                    (local.get $p0)
                    (f64.const 0x1p+0 (;=1;))))
                (f64.add
                  (f64.add
                    (local.get $l6)
                    (f64.sub
                      (local.get $l4)
                      (local.get $p0)))
                  (f64.add
                    (local.get $p0)
                    (f64.sub
                      (f64.const 0x1p+0 (;=1;))
                      (local.get $l9)))))
              (f64.const -0x1p+0 (;=-1;)))))
        (return
          (f64.mul
            (local.get $p0)
            (f64.const 0x1p-1022 (;=2.22507e-308;)))))
      (local.set $l4
        (f64.add
          (f64.mul
            (local.get $p0)
            (local.tee $l4
              (f64.reinterpret_i64
                (local.get $l1))))
          (local.get $l4))))
    (local.get $l4))
  (func $log (type $t31) (param $p0 f64) (result f64)
    (local $l1 i64) (local $l2 f64) (local $l3 i32) (local $l4 f64) (local $l5 f64) (local $l6 f64) (local $l7 i64) (local $l8 i32)
    (block $B0
      (br_if $B0
        (i64.gt_u
          (i64.add
            (local.tee $l1
              (i64.reinterpret_f64
                (local.get $p0)))
            (i64.const -4606619468846596096))
          (i64.const 854320534781951)))
      (return
        (f64.add
          (local.tee $l6
            (f64.add
              (local.tee $p0
                (f64.add
                  (local.get $p0)
                  (f64.const -0x1p+0 (;=-1;))))
              (local.tee $l5
                (f64.mul
                  (f64.mul
                    (local.tee $l2
                      (f64.sub
                        (f64.add
                          (local.get $p0)
                          (local.tee $l2
                            (f64.mul
                              (local.get $p0)
                              (f64.const 0x1p+27 (;=1.34218e+08;)))))
                        (local.get $l2)))
                    (local.get $l2))
                  (local.tee $l4
                    (f64.load offset=56
                      (local.tee $l3
                        (i32.add
                          (i32.const 66384)
                          (i32.const 8576)))))))))
          (f64.add
            (f64.add
              (f64.mul
                (f64.add
                  (local.get $p0)
                  (local.get $l2))
                (f64.mul
                  (f64.sub
                    (local.get $p0)
                    (local.get $l2))
                  (local.get $l4)))
              (f64.add
                (local.get $l5)
                (f64.sub
                  (local.get $p0)
                  (local.get $l6))))
            (f64.mul
              (local.tee $l4
                (f64.mul
                  (local.get $p0)
                  (local.tee $l2
                    (f64.mul
                      (local.get $p0)
                      (local.get $p0)))))
              (f64.add
                (f64.add
                  (f64.add
                    (f64.load
                      (i32.add
                        (local.get $l3)
                        (i32.const 64)))
                    (f64.mul
                      (local.get $p0)
                      (f64.load
                        (i32.add
                          (local.get $l3)
                          (i32.const 72)))))
                  (f64.mul
                    (local.get $l2)
                    (f64.load
                      (i32.add
                        (local.get $l3)
                        (i32.const 80)))))
                (f64.mul
                  (local.get $l4)
                  (f64.add
                    (f64.add
                      (f64.add
                        (f64.load
                          (i32.add
                            (local.get $l3)
                            (i32.const 88)))
                        (f64.mul
                          (local.get $p0)
                          (f64.load
                            (i32.add
                              (local.get $l3)
                              (i32.const 96)))))
                      (f64.mul
                        (local.get $l2)
                        (f64.load
                          (i32.add
                            (local.get $l3)
                            (i32.const 104)))))
                    (f64.mul
                      (local.get $l4)
                      (f64.add
                        (f64.add
                          (f64.add
                            (f64.load
                              (i32.add
                                (local.get $l3)
                                (i32.const 112)))
                            (f64.mul
                              (local.get $p0)
                              (f64.load
                                (i32.add
                                  (local.get $l3)
                                  (i32.const 120)))))
                          (f64.mul
                            (local.get $l2)
                            (f64.load
                              (i32.add
                                (local.get $l3)
                                (i32.const 128)))))
                        (f64.mul
                          (local.get $l4)
                          (f64.load
                            (i32.add
                              (local.get $l3)
                              (i32.const 136))))))))))))))
    (block $B1
      (block $B2
        (br_if $B2
          (i32.lt_u
            (i32.add
              (local.tee $l3
                (i32.wrap_i64
                  (i64.shr_u
                    (local.get $l1)
                    (i64.const 48))))
              (i32.const -16))
            (i32.const 32736)))
        (block $B3
          (br_if $B3
            (i64.ne
              (i64.and
                (local.get $l1)
                (i64.const 9223372036854775807))
              (i64.const 0)))
          (return
            (call $__math_divzero
              (i32.const 1))))
        (br_if $B1
          (i64.eq
            (local.get $l1)
            (i64.const 9218868437227405312)))
        (block $B4
          (block $B5
            (br_if $B5
              (i32.and
                (local.get $l3)
                (i32.const 32768)))
            (br_if $B4
              (i32.ne
                (i32.and
                  (local.get $l3)
                  (i32.const 32752))
                (i32.const 32752))))
          (return
            (call $__math_invalid
              (local.get $p0))))
        (local.set $l1
          (i64.add
            (i64.reinterpret_f64
              (f64.mul
                (local.get $p0)
                (f64.const 0x1p+52 (;=4.5036e+15;))))
            (i64.const -234187180623265792))))
      (local.set $p0
        (f64.add
          (local.tee $l6
            (f64.add
              (local.tee $l5
                (f64.add
                  (f64.load
                    (i32.add
                      (local.tee $l8
                        (i32.add
                          (local.tee $l3
                            (i32.add
                              (i32.const 66384)
                              (i32.const 8576)))
                          (i32.shl
                            (i32.and
                              (i32.wrap_i64
                                (i64.shr_u
                                  (local.tee $l7
                                    (i64.add
                                      (local.get $l1)
                                      (i64.const -4604367669032910848)))
                                  (i64.const 45)))
                              (i32.const 127))
                            (i32.const 4))))
                      (i32.const 152)))
                  (f64.mul
                    (f64.load
                      (local.get $l3))
                    (local.tee $l4
                      (f64.convert_i32_s
                        (i32.wrap_i64
                          (i64.shr_s
                            (local.get $l7)
                            (i64.const 52))))))))
              (local.tee $p0
                (f64.mul
                  (f64.load
                    (i32.add
                      (local.get $l8)
                      (i32.const 144)))
                  (f64.sub
                    (f64.sub
                      (f64.reinterpret_i64
                        (i64.sub
                          (local.get $l1)
                          (i64.and
                            (local.get $l7)
                            (i64.const -4503599627370496))))
                      (f64.load
                        (i32.add
                          (local.get $l8)
                          (i32.const 2192))))
                    (f64.load
                      (i32.add
                        (local.get $l8)
                        (i32.const 2200))))))))
          (f64.add
            (f64.add
              (f64.mul
                (f64.load offset=16
                  (local.get $l3))
                (local.tee $l2
                  (f64.mul
                    (local.get $p0)
                    (local.get $p0))))
              (f64.add
                (f64.mul
                  (f64.load offset=8
                    (local.get $l3))
                  (local.get $l4))
                (f64.add
                  (local.get $p0)
                  (f64.sub
                    (local.get $l5)
                    (local.get $l6)))))
            (f64.mul
              (f64.mul
                (local.get $p0)
                (local.get $l2))
              (f64.add
                (f64.add
                  (f64.load
                    (i32.add
                      (local.get $l3)
                      (i32.const 24)))
                  (f64.mul
                    (local.get $p0)
                    (f64.load
                      (i32.add
                        (local.get $l3)
                        (i32.const 32)))))
                (f64.mul
                  (local.get $l2)
                  (f64.add
                    (f64.load
                      (i32.add
                        (local.get $l3)
                        (i32.const 40)))
                    (f64.mul
                      (local.get $p0)
                      (f64.load
                        (i32.add
                          (local.get $l3)
                          (i32.const 48))))))))))))
    (local.get $p0))
  (func $floor (type $t31) (param $p0 f64) (result f64)
    (local $l1 i64) (local $l2 i32) (local $l3 f64)
    (block $B0
      (br_if $B0
        (f64.eq
          (local.get $p0)
          (f64.const 0x0p+0 (;=0;))))
      (br_if $B0
        (i32.gt_u
          (local.tee $l2
            (i32.and
              (i32.wrap_i64
                (i64.shr_u
                  (local.tee $l1
                    (i64.reinterpret_f64
                      (local.get $p0)))
                  (i64.const 52)))
              (i32.const 2047)))
          (i32.const 1074)))
      (block $B1
        (br_if $B1
          (i32.gt_u
            (local.get $l2)
            (i32.const 1022)))
        (return
          (f64.convert_i32_s
            (i32.wrap_i64
              (i64.shr_s
                (local.get $l1)
                (i64.const 63))))))
      (local.set $p0
        (f64.add
          (local.tee $l3
            (f64.sub
              (select
                (f64.add
                  (f64.add
                    (local.get $p0)
                    (f64.const -0x1p+52 (;=-4.5036e+15;)))
                  (f64.const 0x1p+52 (;=4.5036e+15;)))
                (f64.add
                  (f64.add
                    (local.get $p0)
                    (f64.const 0x1p+52 (;=4.5036e+15;)))
                  (f64.const -0x1p+52 (;=-4.5036e+15;)))
                (i64.lt_s
                  (local.get $l1)
                  (i64.const 0)))
              (local.get $p0)))
          (local.get $p0)))
      (br_if $B0
        (i32.xor
          (f64.gt
            (local.get $l3)
            (f64.const 0x0p+0 (;=0;)))
          (i32.const 1)))
      (local.set $p0
        (f64.add
          (local.get $p0)
          (f64.const -0x1p+0 (;=-1;)))))
    (local.get $p0))
  (func $scalbn (type $t34) (param $p0 f64) (param $p1 i32) (result f64)
    (block $B0
      (block $B1
        (br_if $B1
          (i32.lt_s
            (local.get $p1)
            (i32.const 1024)))
        (local.set $p0
          (f64.mul
            (local.get $p0)
            (f64.const 0x1p+1023 (;=8.98847e+307;))))
        (block $B2
          (br_if $B2
            (i32.ge_s
              (local.get $p1)
              (i32.const 2047)))
          (local.set $p1
            (i32.add
              (local.get $p1)
              (i32.const -1023)))
          (br $B0))
        (local.set $p0
          (f64.mul
            (local.get $p0)
            (f64.const 0x1p+1023 (;=8.98847e+307;))))
        (local.set $p1
          (i32.add
            (select
              (local.get $p1)
              (i32.const 3069)
              (i32.lt_s
                (local.get $p1)
                (i32.const 3069)))
            (i32.const -2046)))
        (br $B0))
      (br_if $B0
        (i32.gt_s
          (local.get $p1)
          (i32.const -1023)))
      (local.set $p0
        (f64.mul
          (local.get $p0)
          (f64.const 0x1p-969 (;=2.00417e-292;))))
      (block $B3
        (br_if $B3
          (i32.le_s
            (local.get $p1)
            (i32.const -1992)))
        (local.set $p1
          (i32.add
            (local.get $p1)
            (i32.const 969)))
        (br $B0))
      (local.set $p0
        (f64.mul
          (local.get $p0)
          (f64.const 0x1p-969 (;=2.00417e-292;))))
      (local.set $p1
        (i32.add
          (select
            (local.get $p1)
            (i32.const -2960)
            (i32.gt_s
              (local.get $p1)
              (i32.const -2960)))
          (i32.const 1938))))
    (f64.mul
      (local.get $p0)
      (f64.reinterpret_i64
        (i64.shl
          (i64.extend_i32_u
            (i32.add
              (local.get $p1)
              (i32.const 1023)))
          (i64.const 52)))))
  (func $frexp (type $t34) (param $p0 f64) (param $p1 i32) (result f64)
    (local $l2 i64) (local $l3 i32)
    (block $B0
      (br_if $B0
        (i32.eq
          (local.tee $l3
            (i32.and
              (i32.wrap_i64
                (i64.shr_u
                  (local.tee $l2
                    (i64.reinterpret_f64
                      (local.get $p0)))
                  (i64.const 52)))
              (i32.const 2047)))
          (i32.const 2047)))
      (block $B1
        (br_if $B1
          (local.get $l3))
        (block $B2
          (block $B3
            (br_if $B3
              (f64.ne
                (local.get $p0)
                (f64.const 0x0p+0 (;=0;))))
            (local.set $l3
              (i32.const 0))
            (br $B2))
          (local.set $p0
            (call $frexp
              (f64.mul
                (local.get $p0)
                (f64.const 0x1p+64 (;=1.84467e+19;)))
              (local.get $p1)))
          (local.set $l3
            (i32.add
              (i32.load
                (local.get $p1))
              (i32.const -64))))
        (i32.store
          (local.get $p1)
          (local.get $l3))
        (return
          (local.get $p0)))
      (i32.store
        (local.get $p1)
        (i32.add
          (local.get $l3)
          (i32.const -1022)))
      (local.set $p0
        (f64.reinterpret_i64
          (i64.or
            (i64.and
              (local.get $l2)
              (i64.const -9218868437227405313))
            (i64.const 4602678819172646912)))))
    (local.get $p0))
  (func $strnlen (type $t26) (param $p0 i32) (param $p1 i32) (result i32)
    (local $l2 i32)
    (select
      (i32.sub
        (local.tee $l2
          (call $memchr
            (local.get $p0)
            (i32.const 0)
            (local.get $p1)))
        (local.get $p0))
      (local.get $p1)
      (local.get $l2)))
  (func $memchr (type $t18) (param $p0 i32) (param $p1 i32) (param $p2 i32) (result i32)
    (local $l3 i32) (local $l4 i32) (local $l5 i32) (local $l6 i32)
    (local.set $l3
      (i32.ne
        (local.get $p2)
        (i32.const 0)))
    (block $B0
      (block $B1
        (block $B2
          (block $B3
            (br_if $B3
              (i32.eqz
                (local.get $p2)))
            (br_if $B3
              (i32.eqz
                (i32.and
                  (local.get $p0)
                  (i32.const 3))))
            (local.set $l4
              (i32.and
                (local.get $p1)
                (i32.const 255)))
            (loop $L4
              (block $B5
                (br_if $B5
                  (i32.ne
                    (i32.load8_u
                      (local.get $p0))
                    (local.get $l4)))
                (local.set $l5
                  (local.get $p2))
                (br $B1))
              (local.set $l3
                (i32.ne
                  (local.get $p2)
                  (i32.const 1)))
              (local.set $l5
                (i32.add
                  (local.get $p2)
                  (i32.const -1)))
              (local.set $p0
                (i32.add
                  (local.get $p0)
                  (i32.const 1)))
              (br_if $B2
                (i32.eq
                  (local.get $p2)
                  (i32.const 1)))
              (local.set $p2
                (local.get $l5))
              (br_if $L4
                (i32.and
                  (local.get $p0)
                  (i32.const 3)))
              (br $B2)))
          (local.set $l5
            (local.get $p2)))
        (br_if $B0
          (i32.eqz
            (local.get $l3))))
      (block $B6
        (br_if $B6
          (i32.eq
            (i32.load8_u
              (local.get $p0))
            (i32.and
              (local.get $p1)
              (i32.const 255))))
        (br_if $B6
          (i32.lt_u
            (local.get $l5)
            (i32.const 4)))
        (local.set $l3
          (i32.mul
            (i32.and
              (local.get $p1)
              (i32.const 255))
            (i32.const 16843009)))
        (local.set $l4
          (i32.and
            (local.tee $p2
              (i32.add
                (local.get $l5)
                (i32.const -4)))
            (i32.const 3)))
        (local.set $l6
          (i32.add
            (i32.add
              (i32.and
                (local.get $p2)
                (i32.const -4))
              (local.get $p0))
            (i32.const 4)))
        (loop $L7
          (br_if $B6
            (i32.and
              (i32.and
                (i32.xor
                  (local.tee $p2
                    (i32.xor
                      (i32.load
                        (local.get $p0))
                      (local.get $l3)))
                  (i32.const -1))
                (i32.add
                  (local.get $p2)
                  (i32.const -16843009)))
              (i32.const -2139062144)))
          (local.set $p0
            (i32.add
              (local.get $p0)
              (i32.const 4)))
          (br_if $L7
            (i32.gt_u
              (local.tee $l5
                (i32.add
                  (local.get $l5)
                  (i32.const -4)))
              (i32.const 3))))
        (local.set $l5
          (local.get $l4))
        (local.set $p0
          (local.get $l6)))
      (br_if $B0
        (i32.eqz
          (local.get $l5)))
      (local.set $p2
        (i32.and
          (local.get $p1)
          (i32.const 255)))
      (loop $L8
        (block $B9
          (br_if $B9
            (i32.ne
              (i32.load8_u
                (local.get $p0))
              (local.get $p2)))
          (return
            (local.get $p0)))
        (local.set $p0
          (i32.add
            (local.get $p0)
            (i32.const 1)))
        (br_if $L8
          (local.tee $l5
            (i32.add
              (local.get $l5)
              (i32.const -1))))))
    (i32.const 0))
  (func $memset (type $t18) (param $p0 i32) (param $p1 i32) (param $p2 i32) (result i32)
    (local $l3 i32) (local $l4 i32) (local $l5 i32) (local $l6 i64)
    (block $B0
      (br_if $B0
        (i32.eqz
          (local.get $p2)))
      (i32.store8
        (local.get $p0)
        (local.get $p1))
      (i32.store8
        (i32.add
          (local.tee $l3
            (i32.add
              (local.get $p2)
              (local.get $p0)))
          (i32.const -1))
        (local.get $p1))
      (br_if $B0
        (i32.lt_u
          (local.get $p2)
          (i32.const 3)))
      (i32.store8 offset=2
        (local.get $p0)
        (local.get $p1))
      (i32.store8 offset=1
        (local.get $p0)
        (local.get $p1))
      (i32.store8
        (i32.add
          (local.get $l3)
          (i32.const -3))
        (local.get $p1))
      (i32.store8
        (i32.add
          (local.get $l3)
          (i32.const -2))
        (local.get $p1))
      (br_if $B0
        (i32.lt_u
          (local.get $p2)
          (i32.const 7)))
      (i32.store8 offset=3
        (local.get $p0)
        (local.get $p1))
      (i32.store8
        (i32.add
          (local.get $l3)
          (i32.const -4))
        (local.get $p1))
      (br_if $B0
        (i32.lt_u
          (local.get $p2)
          (i32.const 9)))
      (i32.store
        (local.tee $l3
          (i32.add
            (local.get $p0)
            (local.tee $l4
              (i32.and
                (i32.sub
                  (i32.const 0)
                  (local.get $p0))
                (i32.const 3)))))
        (local.tee $p1
          (i32.mul
            (i32.and
              (local.get $p1)
              (i32.const 255))
            (i32.const 16843009))))
      (i32.store
        (i32.add
          (local.tee $p2
            (i32.add
              (local.get $l3)
              (local.tee $l4
                (i32.and
                  (i32.sub
                    (local.get $p2)
                    (local.get $l4))
                  (i32.const -4)))))
          (i32.const -4))
        (local.get $p1))
      (br_if $B0
        (i32.lt_u
          (local.get $l4)
          (i32.const 9)))
      (i32.store offset=8
        (local.get $l3)
        (local.get $p1))
      (i32.store offset=4
        (local.get $l3)
        (local.get $p1))
      (i32.store
        (i32.add
          (local.get $p2)
          (i32.const -8))
        (local.get $p1))
      (i32.store
        (i32.add
          (local.get $p2)
          (i32.const -12))
        (local.get $p1))
      (br_if $B0
        (i32.lt_u
          (local.get $l4)
          (i32.const 25)))
      (i32.store offset=24
        (local.get $l3)
        (local.get $p1))
      (i32.store offset=20
        (local.get $l3)
        (local.get $p1))
      (i32.store offset=16
        (local.get $l3)
        (local.get $p1))
      (i32.store offset=12
        (local.get $l3)
        (local.get $p1))
      (i32.store
        (i32.add
          (local.get $p2)
          (i32.const -16))
        (local.get $p1))
      (i32.store
        (i32.add
          (local.get $p2)
          (i32.const -20))
        (local.get $p1))
      (i32.store
        (i32.add
          (local.get $p2)
          (i32.const -24))
        (local.get $p1))
      (i32.store
        (i32.add
          (local.get $p2)
          (i32.const -28))
        (local.get $p1))
      (br_if $B0
        (i32.lt_u
          (local.tee $p2
            (i32.sub
              (local.get $l4)
              (local.tee $l5
                (i32.or
                  (i32.and
                    (local.get $l3)
                    (i32.const 4))
                  (i32.const 24)))))
          (i32.const 32)))
      (local.set $l6
        (i64.or
          (i64.shl
            (local.tee $l6
              (i64.extend_i32_u
                (local.get $p1)))
            (i64.const 32))
          (local.get $l6)))
      (local.set $p1
        (i32.add
          (local.get $l3)
          (local.get $l5)))
      (loop $L1
        (i64.store
          (local.get $p1)
          (local.get $l6))
        (i64.store
          (i32.add
            (local.get $p1)
            (i32.const 24))
          (local.get $l6))
        (i64.store
          (i32.add
            (local.get $p1)
            (i32.const 16))
          (local.get $l6))
        (i64.store
          (i32.add
            (local.get $p1)
            (i32.const 8))
          (local.get $l6))
        (local.set $p1
          (i32.add
            (local.get $p1)
            (i32.const 32)))
        (br_if $L1
          (i32.gt_u
            (local.tee $p2
              (i32.add
                (local.get $p2)
                (i32.const -32)))
            (i32.const 31)))))
    (local.get $p0))
  (func $memcpy (type $t18) (param $p0 i32) (param $p1 i32) (param $p2 i32) (result i32)
    (local $l3 i32) (local $l4 i32) (local $l5 i32) (local $l6 i32) (local $l7 i32) (local $l8 i32) (local $l9 i32) (local $l10 i32)
    (block $B0
      (block $B1
        (br_if $B1
          (i32.eqz
            (local.get $p2)))
        (br_if $B1
          (i32.eqz
            (i32.and
              (local.get $p1)
              (i32.const 3))))
        (local.set $l3
          (local.get $p0))
        (loop $L2
          (i32.store8
            (local.get $l3)
            (i32.load8_u
              (local.get $p1)))
          (local.set $l4
            (i32.add
              (local.get $p2)
              (i32.const -1)))
          (local.set $l3
            (i32.add
              (local.get $l3)
              (i32.const 1)))
          (local.set $p1
            (i32.add
              (local.get $p1)
              (i32.const 1)))
          (br_if $B0
            (i32.eq
              (local.get $p2)
              (i32.const 1)))
          (local.set $p2
            (local.get $l4))
          (br_if $L2
            (i32.and
              (local.get $p1)
              (i32.const 3)))
          (br $B0)))
      (local.set $l4
        (local.get $p2))
      (local.set $l3
        (local.get $p0)))
    (block $B3
      (block $B4
        (br_if $B4
          (local.tee $p2
            (i32.and
              (local.get $l3)
              (i32.const 3))))
        (block $B5
          (block $B6
            (br_if $B6
              (i32.ge_u
                (local.get $l4)
                (i32.const 16)))
            (local.set $p2
              (local.get $l4))
            (br $B5))
          (local.set $p2
            (i32.add
              (local.get $l4)
              (i32.const -16)))
          (loop $L7
            (i32.store
              (local.get $l3)
              (i32.load
                (local.get $p1)))
            (i32.store
              (i32.add
                (local.get $l3)
                (i32.const 4))
              (i32.load
                (i32.add
                  (local.get $p1)
                  (i32.const 4))))
            (i32.store
              (i32.add
                (local.get $l3)
                (i32.const 8))
              (i32.load
                (i32.add
                  (local.get $p1)
                  (i32.const 8))))
            (i32.store
              (i32.add
                (local.get $l3)
                (i32.const 12))
              (i32.load
                (i32.add
                  (local.get $p1)
                  (i32.const 12))))
            (local.set $l3
              (i32.add
                (local.get $l3)
                (i32.const 16)))
            (local.set $p1
              (i32.add
                (local.get $p1)
                (i32.const 16)))
            (br_if $L7
              (i32.gt_u
                (local.tee $l4
                  (i32.add
                    (local.get $l4)
                    (i32.const -16)))
                (i32.const 15)))))
        (block $B8
          (br_if $B8
            (i32.eqz
              (i32.and
                (local.get $p2)
                (i32.const 8))))
          (i64.store align=4
            (local.get $l3)
            (i64.load align=4
              (local.get $p1)))
          (local.set $p1
            (i32.add
              (local.get $p1)
              (i32.const 8)))
          (local.set $l3
            (i32.add
              (local.get $l3)
              (i32.const 8))))
        (block $B9
          (br_if $B9
            (i32.eqz
              (i32.and
                (local.get $p2)
                (i32.const 4))))
          (i32.store
            (local.get $l3)
            (i32.load
              (local.get $p1)))
          (local.set $p1
            (i32.add
              (local.get $p1)
              (i32.const 4)))
          (local.set $l3
            (i32.add
              (local.get $l3)
              (i32.const 4))))
        (block $B10
          (br_if $B10
            (i32.eqz
              (i32.and
                (local.get $p2)
                (i32.const 2))))
          (i32.store8
            (local.get $l3)
            (i32.load8_u
              (local.get $p1)))
          (i32.store8 offset=1
            (local.get $l3)
            (i32.load8_u offset=1
              (local.get $p1)))
          (local.set $l3
            (i32.add
              (local.get $l3)
              (i32.const 2)))
          (local.set $p1
            (i32.add
              (local.get $p1)
              (i32.const 2))))
        (br_if $B3
          (i32.eqz
            (i32.and
              (local.get $p2)
              (i32.const 1))))
        (i32.store8
          (local.get $l3)
          (i32.load8_u
            (local.get $p1)))
        (return
          (local.get $p0)))
      (block $B11
        (br_if $B11
          (i32.lt_u
            (local.get $l4)
            (i32.const 32)))
        (br_if $B11
          (i32.gt_u
            (local.tee $p2
              (i32.add
                (local.get $p2)
                (i32.const -1)))
            (i32.const 2)))
        (block $B12
          (block $B13
            (block $B14
              (br_table $B14 $B13 $B12 $B14
                (local.get $p2)))
            (i32.store8 offset=1
              (local.get $l3)
              (i32.load8_u offset=1
                (local.get $p1)))
            (i32.store8
              (local.get $l3)
              (local.tee $l5
                (i32.load
                  (local.get $p1))))
            (i32.store8 offset=2
              (local.get $l3)
              (i32.load8_u offset=2
                (local.get $p1)))
            (local.set $l6
              (i32.add
                (local.get $l4)
                (i32.const -3)))
            (local.set $l7
              (i32.add
                (local.get $l3)
                (i32.const 3)))
            (local.set $l8
              (i32.and
                (i32.add
                  (local.get $l4)
                  (i32.const -20))
                (i32.const -16)))
            (local.set $p2
              (i32.const 0))
            (loop $L15
              (i32.store
                (local.tee $l3
                  (i32.add
                    (local.get $l7)
                    (local.get $p2)))
                (i32.or
                  (i32.shl
                    (local.tee $l10
                      (i32.load
                        (i32.add
                          (local.tee $l9
                            (i32.add
                              (local.get $p1)
                              (local.get $p2)))
                          (i32.const 4))))
                    (i32.const 8))
                  (i32.shr_u
                    (local.get $l5)
                    (i32.const 24))))
              (i32.store
                (i32.add
                  (local.get $l3)
                  (i32.const 4))
                (i32.or
                  (i32.shl
                    (local.tee $l5
                      (i32.load
                        (i32.add
                          (local.get $l9)
                          (i32.const 8))))
                    (i32.const 8))
                  (i32.shr_u
                    (local.get $l10)
                    (i32.const 24))))
              (i32.store
                (i32.add
                  (local.get $l3)
                  (i32.const 8))
                (i32.or
                  (i32.shl
                    (local.tee $l10
                      (i32.load
                        (i32.add
                          (local.get $l9)
                          (i32.const 12))))
                    (i32.const 8))
                  (i32.shr_u
                    (local.get $l5)
                    (i32.const 24))))
              (i32.store
                (i32.add
                  (local.get $l3)
                  (i32.const 12))
                (i32.or
                  (i32.shl
                    (local.tee $l5
                      (i32.load
                        (i32.add
                          (local.get $l9)
                          (i32.const 16))))
                    (i32.const 8))
                  (i32.shr_u
                    (local.get $l10)
                    (i32.const 24))))
              (local.set $p2
                (i32.add
                  (local.get $p2)
                  (i32.const 16)))
              (br_if $L15
                (i32.gt_u
                  (local.tee $l6
                    (i32.add
                      (local.get $l6)
                      (i32.const -16)))
                  (i32.const 16))))
            (local.set $l3
              (i32.add
                (local.get $l7)
                (local.get $p2)))
            (local.set $p1
              (i32.add
                (i32.add
                  (local.get $p1)
                  (local.get $p2))
                (i32.const 3)))
            (local.set $l4
              (i32.add
                (i32.sub
                  (local.get $l4)
                  (local.get $l8))
                (i32.const -19)))
            (br $B11))
          (i32.store8
            (local.get $l3)
            (local.tee $l5
              (i32.load
                (local.get $p1))))
          (i32.store8 offset=1
            (local.get $l3)
            (i32.load8_u offset=1
              (local.get $p1)))
          (local.set $l6
            (i32.add
              (local.get $l4)
              (i32.const -2)))
          (local.set $l7
            (i32.add
              (local.get $l3)
              (i32.const 2)))
          (local.set $l8
            (i32.and
              (i32.add
                (local.get $l4)
                (i32.const -20))
              (i32.const -16)))
          (local.set $p2
            (i32.const 0))
          (loop $L16
            (i32.store
              (local.tee $l3
                (i32.add
                  (local.get $l7)
                  (local.get $p2)))
              (i32.or
                (i32.shl
                  (local.tee $l10
                    (i32.load
                      (i32.add
                        (local.tee $l9
                          (i32.add
                            (local.get $p1)
                            (local.get $p2)))
                        (i32.const 4))))
                  (i32.const 16))
                (i32.shr_u
                  (local.get $l5)
                  (i32.const 16))))
            (i32.store
              (i32.add
                (local.get $l3)
                (i32.const 4))
              (i32.or
                (i32.shl
                  (local.tee $l5
                    (i32.load
                      (i32.add
                        (local.get $l9)
                        (i32.const 8))))
                  (i32.const 16))
                (i32.shr_u
                  (local.get $l10)
                  (i32.const 16))))
            (i32.store
              (i32.add
                (local.get $l3)
                (i32.const 8))
              (i32.or
                (i32.shl
                  (local.tee $l10
                    (i32.load
                      (i32.add
                        (local.get $l9)
                        (i32.const 12))))
                  (i32.const 16))
                (i32.shr_u
                  (local.get $l5)
                  (i32.const 16))))
            (i32.store
              (i32.add
                (local.get $l3)
                (i32.const 12))
              (i32.or
                (i32.shl
                  (local.tee $l5
                    (i32.load
                      (i32.add
                        (local.get $l9)
                        (i32.const 16))))
                  (i32.const 16))
                (i32.shr_u
                  (local.get $l10)
                  (i32.const 16))))
            (local.set $p2
              (i32.add
                (local.get $p2)
                (i32.const 16)))
            (br_if $L16
              (i32.gt_u
                (local.tee $l6
                  (i32.add
                    (local.get $l6)
                    (i32.const -16)))
                (i32.const 17))))
          (local.set $l3
            (i32.add
              (local.get $l7)
              (local.get $p2)))
          (local.set $p1
            (i32.add
              (i32.add
                (local.get $p1)
                (local.get $p2))
              (i32.const 2)))
          (local.set $l4
            (i32.add
              (i32.sub
                (local.get $l4)
                (local.get $l8))
              (i32.const -18)))
          (br $B11))
        (i32.store8
          (local.get $l3)
          (local.tee $l5
            (i32.load
              (local.get $p1))))
        (local.set $l6
          (i32.add
            (local.get $l4)
            (i32.const -1)))
        (local.set $l7
          (i32.add
            (local.get $l3)
            (i32.const 1)))
        (local.set $l8
          (i32.and
            (i32.add
              (local.get $l4)
              (i32.const -20))
            (i32.const -16)))
        (local.set $p2
          (i32.const 0))
        (loop $L17
          (i32.store
            (local.tee $l3
              (i32.add
                (local.get $l7)
                (local.get $p2)))
            (i32.or
              (i32.shl
                (local.tee $l10
                  (i32.load
                    (i32.add
                      (local.tee $l9
                        (i32.add
                          (local.get $p1)
                          (local.get $p2)))
                      (i32.const 4))))
                (i32.const 24))
              (i32.shr_u
                (local.get $l5)
                (i32.const 8))))
          (i32.store
            (i32.add
              (local.get $l3)
              (i32.const 4))
            (i32.or
              (i32.shl
                (local.tee $l5
                  (i32.load
                    (i32.add
                      (local.get $l9)
                      (i32.const 8))))
                (i32.const 24))
              (i32.shr_u
                (local.get $l10)
                (i32.const 8))))
          (i32.store
            (i32.add
              (local.get $l3)
              (i32.const 8))
            (i32.or
              (i32.shl
                (local.tee $l10
                  (i32.load
                    (i32.add
                      (local.get $l9)
                      (i32.const 12))))
                (i32.const 24))
              (i32.shr_u
                (local.get $l5)
                (i32.const 8))))
          (i32.store
            (i32.add
              (local.get $l3)
              (i32.const 12))
            (i32.or
              (i32.shl
                (local.tee $l5
                  (i32.load
                    (i32.add
                      (local.get $l9)
                      (i32.const 16))))
                (i32.const 24))
              (i32.shr_u
                (local.get $l10)
                (i32.const 8))))
          (local.set $p2
            (i32.add
              (local.get $p2)
              (i32.const 16)))
          (br_if $L17
            (i32.gt_u
              (local.tee $l6
                (i32.add
                  (local.get $l6)
                  (i32.const -16)))
              (i32.const 18))))
        (local.set $l3
          (i32.add
            (local.get $l7)
            (local.get $p2)))
        (local.set $p1
          (i32.add
            (i32.add
              (local.get $p1)
              (local.get $p2))
            (i32.const 1)))
        (local.set $l4
          (i32.add
            (i32.sub
              (local.get $l4)
              (local.get $l8))
            (i32.const -17))))
      (block $B18
        (br_if $B18
          (i32.eqz
            (i32.and
              (local.get $l4)
              (i32.const 16))))
        (i32.store16 align=1
          (local.get $l3)
          (i32.load16_u align=1
            (local.get $p1)))
        (i32.store8 offset=2
          (local.get $l3)
          (i32.load8_u offset=2
            (local.get $p1)))
        (i32.store8 offset=3
          (local.get $l3)
          (i32.load8_u offset=3
            (local.get $p1)))
        (i32.store8 offset=4
          (local.get $l3)
          (i32.load8_u offset=4
            (local.get $p1)))
        (i32.store8 offset=5
          (local.get $l3)
          (i32.load8_u offset=5
            (local.get $p1)))
        (i32.store8 offset=6
          (local.get $l3)
          (i32.load8_u offset=6
            (local.get $p1)))
        (i32.store8 offset=7
          (local.get $l3)
          (i32.load8_u offset=7
            (local.get $p1)))
        (i32.store8 offset=8
          (local.get $l3)
          (i32.load8_u offset=8
            (local.get $p1)))
        (i32.store8 offset=9
          (local.get $l3)
          (i32.load8_u offset=9
            (local.get $p1)))
        (i32.store8 offset=10
          (local.get $l3)
          (i32.load8_u offset=10
            (local.get $p1)))
        (i32.store8 offset=11
          (local.get $l3)
          (i32.load8_u offset=11
            (local.get $p1)))
        (i32.store8 offset=12
          (local.get $l3)
          (i32.load8_u offset=12
            (local.get $p1)))
        (i32.store8 offset=13
          (local.get $l3)
          (i32.load8_u offset=13
            (local.get $p1)))
        (i32.store8 offset=14
          (local.get $l3)
          (i32.load8_u offset=14
            (local.get $p1)))
        (i32.store8 offset=15
          (local.get $l3)
          (i32.load8_u offset=15
            (local.get $p1)))
        (local.set $l3
          (i32.add
            (local.get $l3)
            (i32.const 16)))
        (local.set $p1
          (i32.add
            (local.get $p1)
            (i32.const 16))))
      (block $B19
        (br_if $B19
          (i32.eqz
            (i32.and
              (local.get $l4)
              (i32.const 8))))
        (i32.store8
          (local.get $l3)
          (i32.load8_u
            (local.get $p1)))
        (i32.store8 offset=1
          (local.get $l3)
          (i32.load8_u offset=1
            (local.get $p1)))
        (i32.store8 offset=2
          (local.get $l3)
          (i32.load8_u offset=2
            (local.get $p1)))
        (i32.store8 offset=3
          (local.get $l3)
          (i32.load8_u offset=3
            (local.get $p1)))
        (i32.store8 offset=4
          (local.get $l3)
          (i32.load8_u offset=4
            (local.get $p1)))
        (i32.store8 offset=5
          (local.get $l3)
          (i32.load8_u offset=5
            (local.get $p1)))
        (i32.store8 offset=6
          (local.get $l3)
          (i32.load8_u offset=6
            (local.get $p1)))
        (i32.store8 offset=7
          (local.get $l3)
          (i32.load8_u offset=7
            (local.get $p1)))
        (local.set $l3
          (i32.add
            (local.get $l3)
            (i32.const 8)))
        (local.set $p1
          (i32.add
            (local.get $p1)
            (i32.const 8))))
      (block $B20
        (br_if $B20
          (i32.eqz
            (i32.and
              (local.get $l4)
              (i32.const 4))))
        (i32.store8
          (local.get $l3)
          (i32.load8_u
            (local.get $p1)))
        (i32.store8 offset=1
          (local.get $l3)
          (i32.load8_u offset=1
            (local.get $p1)))
        (i32.store8 offset=2
          (local.get $l3)
          (i32.load8_u offset=2
            (local.get $p1)))
        (i32.store8 offset=3
          (local.get $l3)
          (i32.load8_u offset=3
            (local.get $p1)))
        (local.set $l3
          (i32.add
            (local.get $l3)
            (i32.const 4)))
        (local.set $p1
          (i32.add
            (local.get $p1)
            (i32.const 4))))
      (block $B21
        (br_if $B21
          (i32.eqz
            (i32.and
              (local.get $l4)
              (i32.const 2))))
        (i32.store8
          (local.get $l3)
          (i32.load8_u
            (local.get $p1)))
        (i32.store8 offset=1
          (local.get $l3)
          (i32.load8_u offset=1
            (local.get $p1)))
        (local.set $l3
          (i32.add
            (local.get $l3)
            (i32.const 2)))
        (local.set $p1
          (i32.add
            (local.get $p1)
            (i32.const 2))))
      (br_if $B3
        (i32.eqz
          (i32.and
            (local.get $l4)
            (i32.const 1))))
      (i32.store8
        (local.get $l3)
        (i32.load8_u
          (local.get $p1))))
    (local.get $p0))
  (func $snprintf (type $t33) (param $p0 i32) (param $p1 i32) (param $p2 i32) (param $p3 i32) (result i32)
    (local $l4 i32)
    (global.set $g4
      (local.tee $l4
        (i32.sub
          (global.get $g4)
          (i32.const 16))))
    (i32.store offset=12
      (local.get $l4)
      (local.get $p3))
    (local.set $p3
      (call $vsnprintf
        (local.get $p0)
        (local.get $p1)
        (local.get $p2)
        (local.get $p3)))
    (global.set $g4
      (i32.add
        (local.get $l4)
        (i32.const 16)))
    (local.get $p3))
  (func $vsnprintf (type $t33) (param $p0 i32) (param $p1 i32) (param $p2 i32) (param $p3 i32) (result i32)
    (local $l4 i32) (local $l5 i32) (local $l6 i32)
    (global.set $g4
      (local.tee $l4
        (i32.sub
          (global.get $g4)
          (i32.const 128))))
    (local.set $l5
      (i32.const -1))
    (i32.store offset=116
      (local.get $l4)
      (select
        (local.tee $l6
          (i32.add
            (local.get $p1)
            (i32.const -1)))
        (i32.const 0)
        (local.tee $l6
          (i32.lt_u
            (local.get $l6)
            (local.get $p1)))))
    (i32.store offset=112
      (local.get $l4)
      (local.tee $p0
        (select
          (local.get $p0)
          (i32.add
            (local.get $l4)
            (i32.const 126))
          (local.get $l6))))
    (i32.store offset=64
      (local.tee $l4
        (call $memset
          (local.get $l4)
          (i32.const 0)
          (i32.const 112)))
      (i32.const -1))
    (i32.store offset=32
      (local.get $l4)
      (i32.add
        (i32.const 28)
        (i32.const 1)))
    (i32.store offset=68
      (local.get $l4)
      (i32.add
        (local.get $l4)
        (i32.const 112)))
    (i32.store offset=40
      (local.get $l4)
      (i32.add
        (local.get $l4)
        (i32.const 127)))
    (block $B0
      (br_if $B0
        (i32.lt_s
          (local.get $p1)
          (i32.const 0)))
      (i32.store8
        (local.get $p0)
        (i32.const 0))
      (local.set $l5
        (call $vfprintf
          (local.get $l4)
          (local.get $p2)
          (local.get $p3))))
    (global.set $g4
      (i32.add
        (local.get $l4)
        (i32.const 128)))
    (local.get $l5))
  (func $sn_write (type $t18) (param $p0 i32) (param $p1 i32) (param $p2 i32) (result i32)
    (local $l3 i32) (local $l4 i32) (local $l5 i32) (local $l6 i32)
    (block $B0
      (br_if $B0
        (i32.eqz
          (local.tee $l6
            (select
              (local.tee $l4
                (i32.load offset=4
                  (local.tee $l3
                    (i32.load offset=68
                      (local.get $p0)))))
              (local.tee $l6
                (i32.sub
                  (i32.load offset=20
                    (local.get $p0))
                  (local.tee $l5
                    (i32.load offset=24
                      (local.get $p0)))))
              (i32.lt_u
                (local.get $l4)
                (local.get $l6))))))
      (drop
        (call $memcpy
          (i32.load
            (local.get $l3))
          (local.get $l5)
          (local.get $l6)))
      (i32.store
        (local.get $l3)
        (i32.add
          (i32.load
            (local.get $l3))
          (local.get $l6)))
      (i32.store offset=4
        (local.get $l3)
        (local.tee $l4
          (i32.sub
            (i32.load offset=4
              (local.get $l3))
            (local.get $l6)))))
    (local.set $l6
      (i32.load
        (local.get $l3)))
    (block $B1
      (br_if $B1
        (i32.eqz
          (local.tee $l4
            (select
              (local.get $l4)
              (local.get $p2)
              (i32.lt_u
                (local.get $l4)
                (local.get $p2))))))
      (drop
        (call $memcpy
          (local.get $l6)
          (local.get $p1)
          (local.get $l4)))
      (i32.store
        (local.get $l3)
        (local.tee $l6
          (i32.add
            (i32.load
              (local.get $l3))
            (local.get $l4))))
      (i32.store offset=4
        (local.get $l3)
        (i32.sub
          (i32.load offset=4
            (local.get $l3))
          (local.get $l4))))
    (i32.store8
      (local.get $l6)
      (i32.const 0))
    (i32.store offset=24
      (local.get $p0)
      (local.tee $l3
        (i32.load offset=40
          (local.get $p0))))
    (i32.store offset=20
      (local.get $p0)
      (local.get $l3))
    (local.get $p2))
  (func $vfprintf (type $t18) (param $p0 i32) (param $p1 i32) (param $p2 i32) (result i32)
    (local $l3 i32) (local $l4 i32)
    (global.set $g4
      (local.tee $l3
        (i32.sub
          (global.get $g4)
          (i32.const 208))))
    (i32.store offset=204
      (local.get $l3)
      (local.get $p2))
    (drop
      (call $memset
        (i32.add
          (local.get $l3)
          (i32.const 160))
        (i32.const 0)
        (i32.const 40)))
    (i32.store offset=200
      (local.get $l3)
      (i32.load offset=204
        (local.get $l3)))
    (block $B0
      (block $B1
        (br_if $B1
          (i32.ge_s
            (call $printf_core
              (i32.const 0)
              (local.get $p1)
              (i32.add
                (local.get $l3)
                (i32.const 200))
              (i32.add
                (local.get $l3)
                (i32.const 80))
              (i32.add
                (local.get $l3)
                (i32.const 160)))
            (i32.const 0)))
        (local.set $p0
          (i32.const -1))
        (br $B0))
      (local.set $p2
        (i32.load
          (local.get $p0)))
      (block $B2
        (br_if $B2
          (i32.gt_s
            (i32.load offset=60
              (local.get $p0))
            (i32.const 0)))
        (i32.store
          (local.get $p0)
          (i32.and
            (local.get $p2)
            (i32.const -33))))
      (local.set $p2
        (i32.and
          (local.get $p2)
          (i32.const 32)))
      (block $B3
        (block $B4
          (br_if $B4
            (i32.eqz
              (i32.load offset=44
                (local.get $p0))))
          (local.set $p1
            (call $printf_core
              (local.get $p0)
              (local.get $p1)
              (i32.add
                (local.get $l3)
                (i32.const 200))
              (i32.add
                (local.get $l3)
                (i32.const 80))
              (i32.add
                (local.get $l3)
                (i32.const 160))))
          (br $B3))
        (i32.store offset=44
          (local.get $p0)
          (i32.const 80))
        (i32.store offset=24
          (local.get $p0)
          (i32.const 0))
        (i64.store offset=16
          (local.get $p0)
          (i64.const 0))
        (local.set $l4
          (i32.load offset=40
            (local.get $p0)))
        (i32.store offset=40
          (local.get $p0)
          (local.get $l3))
        (local.set $p1
          (call $printf_core
            (local.get $p0)
            (local.get $p1)
            (i32.add
              (local.get $l3)
              (i32.const 200))
            (i32.add
              (local.get $l3)
              (i32.const 80))
            (i32.add
              (local.get $l3)
              (i32.const 160))))
        (br_if $B3
          (i32.eqz
            (local.get $l4)))
        (drop
          (call_indirect $table (type $t18)
            (local.get $p0)
            (i32.const 0)
            (i32.const 0)
            (i32.load offset=32
              (local.get $p0))))
        (i32.store offset=44
          (local.get $p0)
          (i32.const 0))
        (i32.store offset=40
          (local.get $p0)
          (local.get $l4))
        (i32.store offset=24
          (local.get $p0)
          (i32.const 0))
        (i32.store offset=16
          (local.get $p0)
          (i32.const 0))
        (local.set $l4
          (i32.load offset=20
            (local.get $p0)))
        (i32.store offset=20
          (local.get $p0)
          (i32.const 0))
        (local.set $p1
          (select
            (local.get $p1)
            (i32.const -1)
            (local.get $l4))))
      (i32.store
        (local.get $p0)
        (i32.or
          (local.tee $l4
            (i32.load
              (local.get $p0)))
          (local.get $p2)))
      (local.set $p0
        (select
          (i32.const -1)
          (local.get $p1)
          (i32.and
            (local.get $l4)
            (i32.const 32)))))
    (global.set $g4
      (i32.add
        (local.get $l3)
        (i32.const 208)))
    (local.get $p0))
  (func $printf_core (type $t25) (param $p0 i32) (param $p1 i32) (param $p2 i32) (param $p3 i32) (param $p4 i32) (result i32)
    (local $l5 i32) (local $l6 i32) (local $l7 i32) (local $l8 i32) (local $l9 i32) (local $l10 i32) (local $l11 i32) (local $l12 i32) (local $l13 i32) (local $l14 i32) (local $l15 i32) (local $l16 i32) (local $l17 i32) (local $l18 i32) (local $l19 i32) (local $l20 i32) (local $l21 i32) (local $l22 i32) (local $l23 i32) (local $l24 i32) (local $l25 i32) (local $l26 i32) (local $l27 i32) (local $l28 i32) (local $l29 f64) (local $l30 i32) (local $l31 i32) (local $l32 f64) (local $l33 i32) (local $l34 i32) (local $l35 i32) (local $l36 i64) (local $l37 i64) (local $l38 i32)
    (global.set $g4
      (local.tee $l5
        (i32.sub
          (global.get $g4)
          (i32.const 624))))
    (local.set $l6
      (i32.add
        (local.get $l5)
        (i32.const 55)))
    (local.set $l7
      (i32.sub
        (i32.const -2)
        (i32.add
          (local.get $l5)
          (i32.const 80))))
    (local.set $l8
      (i32.add
        (i32.add
          (local.get $l5)
          (i32.const 68))
        (i32.const 11)))
    (local.set $l9
      (i32.or
        (i32.add
          (local.get $l5)
          (i32.const 80))
        (i32.const 8)))
    (local.set $l10
      (i32.or
        (i32.add
          (local.get $l5)
          (i32.const 80))
        (i32.const 9)))
    (local.set $l11
      (i32.add
        (local.get $l5)
        (i32.const 400)))
    (local.set $l12
      (i32.add
        (i32.add
          (local.get $l5)
          (i32.const 68))
        (i32.const 12)))
    (local.set $l13
      (i32.add
        (local.get $l5)
        (i32.const 56)))
    (local.set $l14
      (i32.const 0))
    (local.set $l15
      (i32.const 0))
    (local.set $l16
      (i32.const 0))
    (block $B0
      (block $B1
        (loop $L2
          (local.set $l17
            (local.get $p1))
          (br_if $B1
            (i32.gt_s
              (local.get $l16)
              (i32.sub
                (i32.const 2147483647)
                (local.get $l15))))
          (local.set $l15
            (i32.add
              (local.get $l16)
              (local.get $l15)))
          (block $B3
            (block $B4
              (block $B5
                (block $B6
                  (block $B7
                    (block $B8
                      (br_if $B8
                        (i32.eqz
                          (local.tee $l16
                            (i32.load8_u
                              (local.get $l17)))))
                      (local.set $p1
                        (local.get $l17))
                      (loop $L9
                        (block $B10
                          (block $B11
                            (block $B12
                              (br_if $B12
                                (i32.eqz
                                  (local.tee $l16
                                    (i32.and
                                      (local.get $l16)
                                      (i32.const 255)))))
                              (br_if $B10
                                (i32.ne
                                  (local.get $l16)
                                  (i32.const 37)))
                              (local.set $l18
                                (local.get $p1))
                              (local.set $l16
                                (local.get $p1))
                              (loop $L13
                                (block $B14
                                  (br_if $B14
                                    (i32.eq
                                      (i32.load8_u
                                        (i32.add
                                          (local.get $l16)
                                          (i32.const 1)))
                                      (i32.const 37)))
                                  (local.set $p1
                                    (local.get $l16))
                                  (br $B11))
                                (local.set $l18
                                  (i32.add
                                    (local.get $l18)
                                    (i32.const 1)))
                                (local.set $l19
                                  (i32.load8_u offset=2
                                    (local.get $l16)))
                                (local.set $l16
                                  (local.tee $p1
                                    (i32.add
                                      (local.get $l16)
                                      (i32.const 2))))
                                (br_if $L13
                                  (i32.eq
                                    (local.get $l19)
                                    (i32.const 37)))
                                (br $B11)))
                            (local.set $l18
                              (local.get $p1)))
                          (local.set $l19
                            (i32.const -1))
                          (br_if $B0
                            (i32.gt_s
                              (local.tee $l16
                                (i32.sub
                                  (local.get $l18)
                                  (local.get $l17)))
                              (local.tee $l20
                                (i32.sub
                                  (i32.const 2147483647)
                                  (local.get $l15)))))
                          (block $B15
                            (br_if $B15
                              (i32.eqz
                                (local.get $p0)))
                            (br_if $B15
                              (i32.and
                                (i32.load8_u
                                  (local.get $p0))
                                (i32.const 32)))
                            (drop
                              (call_indirect $table (type $t18)
                                (local.get $p0)
                                (local.get $l17)
                                (local.get $l16)
                                (i32.load offset=32
                                  (local.get $p0)))))
                          (br_if $L2
                            (local.get $l16))
                          (local.set $l16
                            (i32.add
                              (local.get $p1)
                              (i32.const 1)))
                          (block $B16
                            (block $B17
                              (br_if $B17
                                (i32.le_u
                                  (local.tee $l19
                                    (i32.add
                                      (local.tee $l21
                                        (i32.load8_s offset=1
                                          (local.get $p1)))
                                      (i32.const -48)))
                                  (i32.const 9)))
                              (local.set $l22
                                (i32.const -1))
                              (br $B16))
                            (local.set $l16
                              (select
                                (i32.add
                                  (local.get $p1)
                                  (i32.const 3))
                                (local.get $l16)
                                (local.tee $l18
                                  (i32.eq
                                    (i32.load8_u offset=2
                                      (local.get $p1))
                                    (i32.const 36)))))
                            (local.set $l14
                              (select
                                (i32.const 1)
                                (local.get $l14)
                                (local.get $l18)))
                            (local.set $l22
                              (select
                                (local.get $l19)
                                (i32.const -1)
                                (local.get $l18)))
                            (local.set $l21
                              (i32.load8_s
                                (i32.add
                                  (local.get $p1)
                                  (select
                                    (i32.const 3)
                                    (i32.const 1)
                                    (local.get $l18))))))
                          (local.set $l18
                            (i32.const 0))
                          (br_if $B7
                            (i32.gt_u
                              (local.tee $p1
                                (i32.add
                                  (local.get $l21)
                                  (i32.const -32)))
                              (i32.const 31)))
                          (br_if $B7
                            (i32.eqz
                              (i32.and
                                (local.tee $l19
                                  (i32.shl
                                    (i32.const 1)
                                    (local.get $p1)))
                                (i32.const 75913))))
                          (local.set $l18
                            (i32.const 0))
                          (loop $L18
                            (local.set $p1
                              (i32.add
                                (local.get $l16)
                                (i32.const 1)))
                            (local.set $l18
                              (i32.or
                                (local.get $l19)
                                (local.get $l18)))
                            (br_if $B6
                              (i32.gt_u
                                (local.tee $l19
                                  (i32.add
                                    (local.tee $l21
                                      (i32.load8_s offset=1
                                        (local.get $l16)))
                                    (i32.const -32)))
                                (i32.const 31)))
                            (local.set $l16
                              (local.get $p1))
                            (br_if $L18
                              (i32.and
                                (local.tee $l19
                                  (i32.shl
                                    (i32.const 1)
                                    (local.get $l19)))
                                (i32.const 75913)))
                            (br $B6)))
                        (local.set $l16
                          (i32.load8_u offset=1
                            (local.get $p1)))
                        (local.set $p1
                          (i32.add
                            (local.get $p1)
                            (i32.const 1)))
                        (br $L9)))
                    (local.set $l19
                      (local.get $l15))
                    (br_if $B0
                      (local.get $p0))
                    (br_if $B5
                      (i32.eqz
                        (local.get $l14)))
                    (local.set $l16
                      (i32.add
                        (local.get $p3)
                        (i32.const 8)))
                    (local.set $p1
                      (i32.add
                        (local.get $p4)
                        (i32.const 4)))
                    (local.set $l18
                      (i32.const 0))
                    (block $B19
                      (loop $L20
                        (br_if $B19
                          (i32.eqz
                            (local.tee $l19
                              (i32.load
                                (local.get $p1)))))
                        (call $pop_arg
                          (local.get $l16)
                          (local.get $l19)
                          (local.get $p2))
                        (local.set $l16
                          (i32.add
                            (local.get $l16)
                            (i32.const 8)))
                        (local.set $p1
                          (i32.add
                            (local.get $p1)
                            (i32.const 4)))
                        (local.set $l19
                          (i32.const 1))
                        (br_if $L20
                          (i32.ne
                            (local.tee $l18
                              (i32.add
                                (local.get $l18)
                                (i32.const 1)))
                            (i32.const 9)))
                        (br $B0)))
                    (local.set $l19
                      (i32.const 1))
                    (br_if $B0
                      (i32.gt_u
                        (i32.add
                          (local.get $l18)
                          (i32.const 1))
                        (i32.const 9)))
                    (loop $L21
                      (br_if $B1
                        (i32.load
                          (local.get $p1)))
                      (local.set $p1
                        (i32.add
                          (local.get $p1)
                          (i32.const 4)))
                      (local.set $l19
                        (i32.const 1))
                      (br_if $B0
                        (i32.gt_u
                          (local.tee $l18
                            (i32.add
                              (local.get $l18)
                              (i32.const 1)))
                          (i32.const 8)))
                      (br $L21)))
                  (local.set $p1
                    (local.get $l16)))
                (block $B22
                  (block $B23
                    (br_if $B23
                      (i32.ne
                        (local.get $l21)
                        (i32.const 42)))
                    (block $B24
                      (block $B25
                        (br_if $B25
                          (i32.gt_u
                            (local.tee $l16
                              (i32.add
                                (i32.load8_s offset=1
                                  (local.get $p1))
                                (i32.const -48)))
                            (i32.const 9)))
                        (br_if $B25
                          (i32.ne
                            (i32.load8_u offset=2
                              (local.get $p1))
                            (i32.const 36)))
                        (i32.store
                          (i32.add
                            (local.get $p4)
                            (i32.shl
                              (local.get $l16)
                              (i32.const 2)))
                          (i32.const 10))
                        (local.set $l21
                          (i32.add
                            (local.get $p1)
                            (i32.const 3)))
                        (local.set $l23
                          (i32.load
                            (i32.add
                              (i32.add
                                (i32.shl
                                  (i32.load8_s offset=1
                                    (local.get $p1))
                                  (i32.const 3))
                                (local.get $p3))
                              (i32.const -384))))
                        (local.set $l14
                          (i32.const 1))
                        (br $B24))
                      (br_if $B1
                        (local.get $l14))
                      (local.set $l21
                        (i32.add
                          (local.get $p1)
                          (i32.const 1)))
                      (block $B26
                        (br_if $B26
                          (local.get $p0))
                        (local.set $l23
                          (i32.const 0))
                        (local.set $l14
                          (i32.const 0))
                        (br $B22))
                      (i32.store
                        (local.get $p2)
                        (i32.add
                          (local.tee $p1
                            (i32.load
                              (local.get $p2)))
                          (i32.const 4)))
                      (local.set $l23
                        (i32.load
                          (local.get $p1)))
                      (local.set $l14
                        (i32.const 0)))
                    (br_if $B22
                      (i32.gt_s
                        (local.get $l23)
                        (i32.const -1)))
                    (local.set $l23
                      (i32.sub
                        (i32.const 0)
                        (local.get $l23)))
                    (local.set $l18
                      (i32.or
                        (local.get $l18)
                        (i32.const 8192)))
                    (br $B22))
                  (local.set $l23
                    (i32.const 0))
                  (block $B27
                    (br_if $B27
                      (i32.le_u
                        (local.tee $l19
                          (i32.add
                            (local.get $l21)
                            (i32.const -48)))
                        (i32.const 9)))
                    (local.set $l21
                      (local.get $p1))
                    (br $B22))
                  (local.set $l16
                    (i32.const 0))
                  (loop $L28
                    (local.set $l23
                      (i32.const -1))
                    (block $B29
                      (br_if $B29
                        (i32.gt_u
                          (local.get $l16)
                          (i32.const 214748364)))
                      (local.set $l23
                        (select
                          (i32.const -1)
                          (i32.add
                            (local.tee $l16
                              (i32.mul
                                (local.get $l16)
                                (i32.const 10)))
                            (local.get $l19))
                          (i32.gt_s
                            (local.get $l19)
                            (i32.sub
                              (i32.const 2147483647)
                              (local.get $l16))))))
                    (local.set $l19
                      (i32.load8_s offset=1
                        (local.get $p1)))
                    (local.set $p1
                      (local.tee $l21
                        (i32.add
                          (local.get $p1)
                          (i32.const 1))))
                    (local.set $l16
                      (local.get $l23))
                    (br_if $L28
                      (i32.lt_u
                        (local.tee $l19
                          (i32.add
                            (local.get $l19)
                            (i32.const -48)))
                        (i32.const 10))))
                  (br_if $B1
                    (i32.lt_s
                      (local.get $l23)
                      (i32.const 0))))
                (local.set $l16
                  (i32.const 0))
                (local.set $l24
                  (i32.const -1))
                (block $B30
                  (block $B31
                    (br_if $B31
                      (i32.eq
                        (i32.load8_u
                          (local.get $l21))
                        (i32.const 46)))
                    (local.set $p1
                      (local.get $l21))
                    (local.set $l25
                      (i32.const 0))
                    (br $B30))
                  (block $B32
                    (br_if $B32
                      (i32.ne
                        (local.tee $l19
                          (i32.load8_s offset=1
                            (local.get $l21)))
                        (i32.const 42)))
                    (block $B33
                      (block $B34
                        (br_if $B34
                          (i32.gt_u
                            (local.tee $p1
                              (i32.add
                                (i32.load8_s offset=2
                                  (local.get $l21))
                                (i32.const -48)))
                            (i32.const 9)))
                        (br_if $B34
                          (i32.ne
                            (i32.load8_u offset=3
                              (local.get $l21))
                            (i32.const 36)))
                        (i32.store
                          (i32.add
                            (local.get $p4)
                            (i32.shl
                              (local.get $p1)
                              (i32.const 2)))
                          (i32.const 10))
                        (local.set $p1
                          (i32.add
                            (local.get $l21)
                            (i32.const 4)))
                        (local.set $l24
                          (i32.load
                            (i32.add
                              (i32.add
                                (i32.shl
                                  (i32.load8_s offset=2
                                    (local.get $l21))
                                  (i32.const 3))
                                (local.get $p3))
                              (i32.const -384))))
                        (br $B33))
                      (br_if $B1
                        (local.get $l14))
                      (local.set $p1
                        (i32.add
                          (local.get $l21)
                          (i32.const 2)))
                      (block $B35
                        (br_if $B35
                          (local.get $p0))
                        (local.set $l24
                          (i32.const 0))
                        (br $B33))
                      (i32.store
                        (local.get $p2)
                        (i32.add
                          (local.tee $l19
                            (i32.load
                              (local.get $p2)))
                          (i32.const 4)))
                      (local.set $l24
                        (i32.load
                          (local.get $l19))))
                    (local.set $l25
                      (i32.shr_u
                        (i32.xor
                          (local.get $l24)
                          (i32.const -1))
                        (i32.const 31)))
                    (br $B30))
                  (local.set $p1
                    (i32.add
                      (local.get $l21)
                      (i32.const 1)))
                  (block $B36
                    (br_if $B36
                      (i32.le_u
                        (local.tee $l26
                          (i32.add
                            (local.get $l19)
                            (i32.const -48)))
                        (i32.const 9)))
                    (local.set $l25
                      (i32.const 1))
                    (local.set $l24
                      (i32.const 0))
                    (br $B30))
                  (local.set $l21
                    (i32.const 0))
                  (local.set $l19
                    (local.get $p1))
                  (loop $L37
                    (local.set $l24
                      (i32.const -1))
                    (block $B38
                      (br_if $B38
                        (i32.gt_u
                          (local.get $l21)
                          (i32.const 214748364)))
                      (local.set $l24
                        (select
                          (i32.const -1)
                          (i32.add
                            (local.tee $p1
                              (i32.mul
                                (local.get $l21)
                                (i32.const 10)))
                            (local.get $l26))
                          (i32.gt_s
                            (local.get $l26)
                            (i32.sub
                              (i32.const 2147483647)
                              (local.get $p1))))))
                    (local.set $l25
                      (i32.const 1))
                    (local.set $l26
                      (i32.load8_s offset=1
                        (local.get $l19)))
                    (local.set $l19
                      (local.tee $p1
                        (i32.add
                          (local.get $l19)
                          (i32.const 1))))
                    (local.set $l21
                      (local.get $l24))
                    (br_if $L37
                      (i32.lt_u
                        (local.tee $l26
                          (i32.add
                            (local.get $l26)
                            (i32.const -48)))
                        (i32.const 10)))))
                (loop $L39
                  (local.set $l21
                    (local.get $l16))
                  (br_if $B1
                    (i32.gt_u
                      (local.tee $l16
                        (i32.add
                          (i32.load8_s
                            (local.get $p1))
                          (i32.const -65)))
                      (i32.const 57)))
                  (local.set $p1
                    (i32.add
                      (local.get $p1)
                      (i32.const 1)))
                  (br_if $L39
                    (i32.lt_u
                      (i32.add
                        (local.tee $l16
                          (i32.load8_u
                            (i32.add
                              (i32.add
                                (i32.add
                                  (i32.const 66384)
                                  (i32.const 12848))
                                (i32.mul
                                  (local.get $l21)
                                  (i32.const 58)))
                              (local.get $l16))))
                        (i32.const -1))
                      (i32.const 8))))
                (br_if $B1
                  (i32.eqz
                    (local.get $l16)))
                (block $B40
                  (block $B41
                    (block $B42
                      (br_if $B42
                        (i32.ne
                          (local.get $l16)
                          (i32.const 27)))
                      (local.set $l19
                        (i32.const -1))
                      (br_if $B41
                        (i32.le_s
                          (local.get $l22)
                          (i32.const -1)))
                      (br $B0))
                    (br_if $B40
                      (i32.lt_s
                        (local.get $l22)
                        (i32.const 0)))
                    (i32.store
                      (i32.add
                        (local.get $p4)
                        (i32.shl
                          (local.get $l22)
                          (i32.const 2)))
                      (local.get $l16))
                    (i64.store offset=56
                      (local.get $l5)
                      (i64.load
                        (i32.add
                          (local.get $p3)
                          (i32.shl
                            (local.get $l22)
                            (i32.const 3))))))
                  (local.set $l16
                    (i32.const 0))
                  (br_if $L2
                    (i32.eqz
                      (local.get $p0)))
                  (br $B3))
                (br_if $B4
                  (local.get $p0)))
              (local.set $l19
                (i32.const 0))
              (br $B0))
            (call $pop_arg
              (i32.add
                (local.get $l5)
                (i32.const 56))
              (local.get $l16)
              (local.get $p2)))
          (local.set $l22
            (select
              (local.tee $l26
                (i32.and
                  (local.get $l18)
                  (i32.const -65537)))
              (local.get $l18)
              (i32.and
                (local.get $l18)
                (i32.const 8192))))
          (block $B43
            (block $B44
              (block $B45
                (block $B46
                  (block $B47
                    (block $B48
                      (block $B49
                        (block $B50
                          (block $B51
                            (block $B52
                              (block $B53
                                (block $B54
                                  (block $B55
                                    (block $B56
                                      (block $B57
                                        (block $B58
                                          (block $B59
                                            (block $B60
                                              (block $B61
                                                (block $B62
                                                  (block $B63
                                                    (br_if $B63
                                                      (i32.le_u
                                                        (local.tee $l16
                                                          (i32.add
                                                            (local.tee $l27
                                                              (select
                                                                (select
                                                                  (i32.and
                                                                    (local.tee $l16
                                                                      (i32.load8_s
                                                                        (i32.add
                                                                          (local.get $p1)
                                                                          (i32.const -1))))
                                                                    (i32.const -33))
                                                                  (local.get $l16)
                                                                  (i32.eq
                                                                    (i32.and
                                                                      (local.get $l16)
                                                                      (i32.const 15))
                                                                    (i32.const 3)))
                                                                (local.get $l16)
                                                                (local.get $l21)))
                                                            (i32.const -83)))
                                                        (i32.const 37)))
                                                    (br_if $B62
                                                      (i32.gt_u
                                                        (local.tee $l16
                                                          (i32.add
                                                            (local.get $l27)
                                                            (i32.const -65)))
                                                        (i32.const 6)))
                                                    (block $B64
                                                      (br_table $B61 $B62 $B64 $B62 $B61 $B61 $B61 $B61
                                                        (local.get $l16)))
                                                    (i32.store offset=12
                                                      (local.get $l5)
                                                      (i32.const 0))
                                                    (i64.store32 offset=8
                                                      (local.get $l5)
                                                      (i64.load offset=56
                                                        (local.get $l5)))
                                                    (i32.store offset=56
                                                      (local.get $l5)
                                                      (i32.add
                                                        (local.get $l5)
                                                        (i32.const 8)))
                                                    (local.set $l24
                                                      (i32.const -1))
                                                    (local.set $l18
                                                      (i32.add
                                                        (local.get $l5)
                                                        (i32.const 8)))
                                                    (br $B59))
                                                  (br_table $B60 $B62 $B62 $B62 $B62 $B49 $B62 $B62 $B62 $B62 $B62 $B62 $B62 $B62 $B61 $B62 $B53 $B52 $B61 $B61 $B61 $B62 $B52 $B62 $B62 $B62 $B55 $B48 $B51 $B50 $B62 $B62 $B56 $B62 $B47 $B62 $B62 $B49 $B60
                                                    (local.get $l16)))
                                                (local.set $l28
                                                  (i32.add
                                                    (i32.const 66384)
                                                    (i32.const 12816)))
                                                (local.set $l21
                                                  (i32.const 0))
                                                (br $B44))
                                              (local.set $l19
                                                (i32.const -1))
                                              (block $B65
                                                (br_if $B65
                                                  (i32.gt_s
                                                    (local.get $l24)
                                                    (i32.const -1)))
                                                (br_if $B0
                                                  (local.get $l25)))
                                              (local.set $l29
                                                (f64.load offset=56
                                                  (local.get $l5)))
                                              (i32.store offset=108
                                                (local.get $l5)
                                                (i32.const 0))
                                              (block $B66
                                                (block $B67
                                                  (br_if $B67
                                                    (i64.gt_s
                                                      (i64.reinterpret_f64
                                                        (local.get $l29))
                                                      (i64.const -1)))
                                                  (local.set $l30
                                                    (i32.add
                                                      (i32.const 66384)
                                                      (i32.const 13424)))
                                                  (local.set $l29
                                                    (f64.neg
                                                      (local.get $l29)))
                                                  (local.set $l31
                                                    (i32.const 1))
                                                  (br $B66))
                                                (local.set $l16
                                                  (i32.const 66384))
                                                (block $B68
                                                  (br_if $B68
                                                    (i32.eqz
                                                      (i32.and
                                                        (local.get $l22)
                                                        (i32.const 2048))))
                                                  (local.set $l30
                                                    (i32.add
                                                      (i32.add
                                                        (local.get $l16)
                                                        (i32.const 13424))
                                                      (i32.const 3)))
                                                  (local.set $l31
                                                    (i32.const 1))
                                                  (br $B66))
                                                (local.set $l30
                                                  (select
                                                    (i32.add
                                                      (local.tee $l16
                                                        (i32.add
                                                          (i32.const 66384)
                                                          (i32.const 13424)))
                                                      (i32.const 6))
                                                    (i32.add
                                                      (local.get $l16)
                                                      (i32.const 1))
                                                    (local.tee $l31
                                                      (i32.and
                                                        (local.get $l22)
                                                        (i32.const 1))))))
                                              (block $B69
                                                (block $B70
                                                  (br_if $B70
                                                    (i32.and
                                                      (f64.ne
                                                        (local.tee $l32
                                                          (f64.abs
                                                            (local.get $l29)))
                                                        (f64.const inf (;=inf;)))
                                                      (f64.eq
                                                        (local.get $l32)
                                                        (local.get $l32))))
                                                  (call $pad
                                                    (local.get $p0)
                                                    (i32.const 32)
                                                    (local.get $l23)
                                                    (local.tee $l16
                                                      (i32.add
                                                        (local.get $l31)
                                                        (i32.const 3)))
                                                    (local.get $l26))
                                                  (local.set $l18
                                                    (i32.const 66384))
                                                  (block $B71
                                                    (br_if $B71
                                                      (i32.and
                                                        (local.tee $l17
                                                          (i32.load
                                                            (local.get $p0)))
                                                        (i32.const 32)))
                                                    (drop
                                                      (call_indirect $table (type $t18)
                                                        (local.get $p0)
                                                        (local.get $l30)
                                                        (local.get $l31)
                                                        (i32.load offset=32
                                                          (local.get $p0))))
                                                    (local.set $l17
                                                      (i32.load
                                                        (local.get $p0))))
                                                  (block $B72
                                                    (br_if $B72
                                                      (i32.and
                                                        (local.get $l17)
                                                        (i32.const 32)))
                                                    (drop
                                                      (call_indirect $table (type $t18)
                                                        (local.get $p0)
                                                        (select
                                                          (select
                                                            (i32.add
                                                              (local.get $l18)
                                                              (i32.const 13451))
                                                            (i32.add
                                                              (local.get $l18)
                                                              (i32.const 13455))
                                                            (local.tee $l17
                                                              (i32.shr_u
                                                                (i32.and
                                                                  (local.get $l27)
                                                                  (i32.const 32))
                                                                (i32.const 5))))
                                                          (select
                                                            (i32.add
                                                              (local.get $l18)
                                                              (i32.const 13443))
                                                            (i32.add
                                                              (local.get $l18)
                                                              (i32.const 13447))
                                                            (local.get $l17))
                                                          (f64.ne
                                                            (local.get $l29)
                                                            (local.get $l29)))
                                                        (i32.const 3)
                                                        (i32.load offset=32
                                                          (local.get $p0)))))
                                                  (call $pad
                                                    (local.get $p0)
                                                    (i32.const 32)
                                                    (local.get $l23)
                                                    (local.get $l16)
                                                    (i32.xor
                                                      (local.get $l22)
                                                      (i32.const 8192)))
                                                  (local.set $l16
                                                    (select
                                                      (local.get $l23)
                                                      (local.get $l16)
                                                      (i32.lt_s
                                                        (local.get $l16)
                                                        (local.get $l23))))
                                                  (br $B69))
                                                (block $B73
                                                  (br_if $B73
                                                    (f64.eq
                                                      (local.tee $l29
                                                        (f64.add
                                                          (local.tee $l29
                                                            (call $frexp
                                                              (local.get $l29)
                                                              (i32.add
                                                                (local.get $l5)
                                                                (i32.const 108))))
                                                          (local.get $l29)))
                                                      (f64.const 0x0p+0 (;=0;))))
                                                  (i32.store offset=108
                                                    (local.get $l5)
                                                    (i32.add
                                                      (i32.load offset=108
                                                        (local.get $l5))
                                                      (i32.const -1))))
                                                (block $B74
                                                  (br_if $B74
                                                    (i32.ne
                                                      (local.tee $l33
                                                        (i32.or
                                                          (local.get $l27)
                                                          (i32.const 32)))
                                                      (i32.const 97)))
                                                  (local.set $l28
                                                    (select
                                                      (i32.add
                                                        (local.get $l30)
                                                        (i32.const 9))
                                                      (local.get $l30)
                                                      (local.tee $l20
                                                        (i32.and
                                                          (local.get $l27)
                                                          (i32.const 32)))))
                                                  (block $B75
                                                    (br_if $B75
                                                      (i32.gt_u
                                                        (local.get $l24)
                                                        (i32.const 11)))
                                                    (br_if $B75
                                                      (i32.eqz
                                                        (i32.sub
                                                          (i32.const 12)
                                                          (local.get $l24))))
                                                    (local.set $l16
                                                      (i32.add
                                                        (local.get $l24)
                                                        (i32.const -12)))
                                                    (local.set $l32
                                                      (f64.const 0x1p+4 (;=16;)))
                                                    (loop $L76
                                                      (local.set $l32
                                                        (f64.mul
                                                          (local.get $l32)
                                                          (f64.const 0x1p+4 (;=16;))))
                                                      (local.set $l17
                                                        (i32.ge_u
                                                          (local.tee $l18
                                                            (i32.add
                                                              (local.get $l16)
                                                              (i32.const 1)))
                                                          (local.get $l16)))
                                                      (local.set $l16
                                                        (local.get $l18))
                                                      (br_if $L76
                                                        (local.get $l17)))
                                                    (block $B77
                                                      (br_if $B77
                                                        (i32.ne
                                                          (i32.load8_u
                                                            (local.get $l28))
                                                          (i32.const 45)))
                                                      (local.set $l29
                                                        (f64.neg
                                                          (f64.add
                                                            (local.get $l32)
                                                            (f64.sub
                                                              (f64.neg
                                                                (local.get $l29))
                                                              (local.get $l32)))))
                                                      (br $B75))
                                                    (local.set $l29
                                                      (f64.sub
                                                        (f64.add
                                                          (local.get $l29)
                                                          (local.get $l32))
                                                        (local.get $l32))))
                                                  (block $B78
                                                    (br_if $B78
                                                      (i32.ne
                                                        (local.tee $l16
                                                          (call $fmt_u
                                                            (i64.extend_i32_u
                                                              (i32.xor
                                                                (i32.add
                                                                  (local.tee $l16
                                                                    (i32.load offset=108
                                                                      (local.get $l5)))
                                                                  (local.tee $l16
                                                                    (i32.shr_s
                                                                      (local.get $l16)
                                                                      (i32.const 31))))
                                                                (local.get $l16)))
                                                            (local.get $l12)))
                                                        (local.get $l12)))
                                                    (i32.store8 offset=79
                                                      (local.get $l5)
                                                      (i32.const 48))
                                                    (local.set $l16
                                                      (local.get $l8)))
                                                  (local.set $l26
                                                    (i32.or
                                                      (local.get $l31)
                                                      (i32.const 2)))
                                                  (local.set $l18
                                                    (i32.load offset=108
                                                      (local.get $l5)))
                                                  (i32.store8
                                                    (local.tee $l25
                                                      (i32.add
                                                        (local.get $l16)
                                                        (i32.const -2)))
                                                    (i32.add
                                                      (local.get $l27)
                                                      (i32.const 15)))
                                                  (i32.store8
                                                    (i32.add
                                                      (local.get $l16)
                                                      (i32.const -1))
                                                    (select
                                                      (i32.const 45)
                                                      (i32.const 43)
                                                      (i32.lt_s
                                                        (local.get $l18)
                                                        (i32.const 0))))
                                                  (local.set $l21
                                                    (i32.and
                                                      (local.get $l22)
                                                      (i32.const 8)))
                                                  (local.set $l18
                                                    (i32.add
                                                      (local.get $l5)
                                                      (i32.const 80)))
                                                  (loop $L79
                                                    (local.set $l16
                                                      (local.get $l18))
                                                    (local.set $l17
                                                      (i32.add
                                                        (i32.const 66384)
                                                        (i32.const 13408)))
                                                    (block $B80
                                                      (block $B81
                                                        (br_if $B81
                                                          (i32.eqz
                                                            (f64.lt
                                                              (f64.abs
                                                                (local.get $l29))
                                                              (f64.const 0x1p+31 (;=2.14748e+09;)))))
                                                        (local.set $l18
                                                          (i32.trunc_f64_s
                                                            (local.get $l29)))
                                                        (br $B80))
                                                      (local.set $l18
                                                        (i32.const -2147483648)))
                                                    (i32.store8
                                                      (local.get $l16)
                                                      (i32.or
                                                        (i32.load8_u
                                                          (i32.add
                                                            (local.get $l17)
                                                            (local.get $l18)))
                                                        (local.get $l20)))
                                                    (local.set $l29
                                                      (f64.mul
                                                        (f64.sub
                                                          (local.get $l29)
                                                          (f64.convert_i32_s
                                                            (local.get $l18)))
                                                        (f64.const 0x1p+4 (;=16;))))
                                                    (block $B82
                                                      (br_if $B82
                                                        (i32.ne
                                                          (i32.sub
                                                            (local.tee $l18
                                                              (i32.add
                                                                (local.get $l16)
                                                                (i32.const 1)))
                                                            (i32.add
                                                              (local.get $l5)
                                                              (i32.const 80)))
                                                          (i32.const 1)))
                                                      (block $B83
                                                        (br_if $B83
                                                          (local.get $l21))
                                                        (br_if $B83
                                                          (i32.gt_s
                                                            (local.get $l24)
                                                            (i32.const 0)))
                                                        (br_if $B82
                                                          (f64.eq
                                                            (local.get $l29)
                                                            (f64.const 0x0p+0 (;=0;)))))
                                                      (i32.store8 offset=1
                                                        (local.get $l16)
                                                        (i32.const 46))
                                                      (local.set $l18
                                                        (i32.add
                                                          (local.get $l16)
                                                          (i32.const 2))))
                                                    (br_if $L79
                                                      (f64.ne
                                                        (local.get $l29)
                                                        (f64.const 0x0p+0 (;=0;)))))
                                                  (local.set $l16
                                                    (i32.const -1))
                                                  (br_if $B69
                                                    (i32.lt_s
                                                      (i32.sub
                                                        (i32.const 2147483645)
                                                        (local.tee $l20
                                                          (i32.add
                                                            (local.get $l26)
                                                            (local.tee $l21
                                                              (i32.sub
                                                                (local.get $l12)
                                                                (local.get $l25))))))
                                                      (local.get $l24)))
                                                  (call $pad
                                                    (local.get $p0)
                                                    (i32.const 32)
                                                    (local.get $l23)
                                                    (local.tee $l16
                                                      (i32.add
                                                        (local.get $l20)
                                                        (local.tee $l18
                                                          (select
                                                            (select
                                                              (i32.add
                                                                (local.get $l24)
                                                                (i32.const 2))
                                                              (local.tee $l17
                                                                (i32.sub
                                                                  (local.get $l18)
                                                                  (i32.add
                                                                    (local.get $l5)
                                                                    (i32.const 80))))
                                                              (i32.lt_s
                                                                (i32.add
                                                                  (local.get $l7)
                                                                  (local.get $l18))
                                                                (local.get $l24)))
                                                            (local.get $l17)
                                                            (local.get $l24)))))
                                                    (local.get $l22))
                                                  (block $B84
                                                    (br_if $B84
                                                      (i32.and
                                                        (i32.load8_u
                                                          (local.get $p0))
                                                        (i32.const 32)))
                                                    (drop
                                                      (call_indirect $table (type $t18)
                                                        (local.get $p0)
                                                        (local.get $l28)
                                                        (local.get $l26)
                                                        (i32.load offset=32
                                                          (local.get $p0)))))
                                                  (call $pad
                                                    (local.get $p0)
                                                    (i32.const 48)
                                                    (local.get $l23)
                                                    (local.get $l16)
                                                    (i32.xor
                                                      (local.get $l22)
                                                      (i32.const 65536)))
                                                  (block $B85
                                                    (br_if $B85
                                                      (i32.and
                                                        (i32.load8_u
                                                          (local.get $p0))
                                                        (i32.const 32)))
                                                    (drop
                                                      (call_indirect $table (type $t18)
                                                        (local.get $p0)
                                                        (i32.add
                                                          (local.get $l5)
                                                          (i32.const 80))
                                                        (local.get $l17)
                                                        (i32.load offset=32
                                                          (local.get $p0)))))
                                                  (call $pad
                                                    (local.get $p0)
                                                    (i32.const 48)
                                                    (i32.sub
                                                      (local.get $l18)
                                                      (local.get $l17))
                                                    (i32.const 0)
                                                    (i32.const 0))
                                                  (block $B86
                                                    (br_if $B86
                                                      (i32.and
                                                        (i32.load8_u
                                                          (local.get $p0))
                                                        (i32.const 32)))
                                                    (drop
                                                      (call_indirect $table (type $t18)
                                                        (local.get $p0)
                                                        (local.get $l25)
                                                        (local.get $l21)
                                                        (i32.load offset=32
                                                          (local.get $p0)))))
                                                  (call $pad
                                                    (local.get $p0)
                                                    (i32.const 32)
                                                    (local.get $l23)
                                                    (local.get $l16)
                                                    (i32.xor
                                                      (local.get $l22)
                                                      (i32.const 8192)))
                                                  (local.set $l16
                                                    (select
                                                      (local.get $l23)
                                                      (local.get $l16)
                                                      (i32.lt_s
                                                        (local.get $l16)
                                                        (local.get $l23))))
                                                  (br $B69))
                                                (local.set $l16
                                                  (i32.lt_s
                                                    (local.get $l24)
                                                    (i32.const 0)))
                                                (block $B87
                                                  (block $B88
                                                    (br_if $B88
                                                      (f64.ne
                                                        (local.get $l29)
                                                        (f64.const 0x0p+0 (;=0;))))
                                                    (local.set $l20
                                                      (i32.load offset=108
                                                        (local.get $l5)))
                                                    (br $B87))
                                                  (i32.store offset=108
                                                    (local.get $l5)
                                                    (local.tee $l20
                                                      (i32.add
                                                        (i32.load offset=108
                                                          (local.get $l5))
                                                        (i32.const -28))))
                                                  (local.set $l29
                                                    (f64.mul
                                                      (local.get $l29)
                                                      (f64.const 0x1p+28 (;=2.68435e+08;)))))
                                                (local.set $l34
                                                  (select
                                                    (i32.const 6)
                                                    (local.get $l24)
                                                    (local.get $l16)))
                                                (local.set $l17
                                                  (local.tee $l35
                                                    (select
                                                      (i32.add
                                                        (local.get $l5)
                                                        (i32.const 112))
                                                      (local.get $l11)
                                                      (i32.lt_s
                                                        (local.get $l20)
                                                        (i32.const 0)))))
                                                (loop $L89
                                                  (block $B90
                                                    (block $B91
                                                      (br_if $B91
                                                        (i32.eqz
                                                          (i32.and
                                                            (f64.lt
                                                              (local.get $l29)
                                                              (f64.const 0x1p+32 (;=4.29497e+09;)))
                                                            (f64.ge
                                                              (local.get $l29)
                                                              (f64.const 0x0p+0 (;=0;))))))
                                                      (local.set $l16
                                                        (i32.trunc_f64_u
                                                          (local.get $l29)))
                                                      (br $B90))
                                                    (local.set $l16
                                                      (i32.const 0)))
                                                  (i32.store
                                                    (local.get $l17)
                                                    (local.get $l16))
                                                  (local.set $l17
                                                    (i32.add
                                                      (local.get $l17)
                                                      (i32.const 4)))
                                                  (br_if $L89
                                                    (f64.ne
                                                      (local.tee $l29
                                                        (f64.mul
                                                          (f64.sub
                                                            (local.get $l29)
                                                            (f64.convert_i32_u
                                                              (local.get $l16)))
                                                          (f64.const 0x1.dcd65p+29 (;=1e+09;))))
                                                      (f64.const 0x0p+0 (;=0;)))))
                                                (block $B92
                                                  (block $B93
                                                    (br_if $B93
                                                      (i32.ge_s
                                                        (local.get $l20)
                                                        (i32.const 1)))
                                                    (local.set $l16
                                                      (local.get $l17))
                                                    (local.set $l18
                                                      (local.get $l35))
                                                    (br $B92))
                                                  (local.set $l18
                                                    (local.get $l35))
                                                  (loop $L94
                                                    (local.set $l20
                                                      (select
                                                        (local.get $l20)
                                                        (i32.const 29)
                                                        (i32.lt_s
                                                          (local.get $l20)
                                                          (i32.const 29))))
                                                    (block $B95
                                                      (br_if $B95
                                                        (i32.lt_u
                                                          (local.tee $l16
                                                            (i32.add
                                                              (local.get $l17)
                                                              (i32.const -4)))
                                                          (local.get $l18)))
                                                      (local.set $l36
                                                        (i64.extend_i32_u
                                                          (local.get $l20)))
                                                      (local.set $l37
                                                        (i64.const 0))
                                                      (loop $L96
                                                        (i64.store32
                                                          (local.get $l16)
                                                          (i64.sub
                                                            (local.tee $l37
                                                              (i64.add
                                                                (i64.shl
                                                                  (i64.load32_u
                                                                    (local.get $l16))
                                                                  (local.get $l36))
                                                                (i64.and
                                                                  (local.get $l37)
                                                                  (i64.const 4294967295))))
                                                            (i64.mul
                                                              (local.tee $l37
                                                                (i64.div_u
                                                                  (local.get $l37)
                                                                  (i64.const 1000000000)))
                                                              (i64.const 1000000000))))
                                                        (br_if $L96
                                                          (i32.ge_u
                                                            (local.tee $l16
                                                              (i32.add
                                                                (local.get $l16)
                                                                (i32.const -4)))
                                                            (local.get $l18))))
                                                      (br_if $B95
                                                        (i32.eqz
                                                          (local.tee $l16
                                                            (i32.wrap_i64
                                                              (local.get $l37)))))
                                                      (i32.store
                                                        (local.tee $l18
                                                          (i32.add
                                                            (local.get $l18)
                                                            (i32.const -4)))
                                                        (local.get $l16)))
                                                    (block $B97
                                                      (loop $L98
                                                        (br_if $B97
                                                          (i32.le_u
                                                            (local.tee $l16
                                                              (local.get $l17))
                                                            (local.get $l18)))
                                                        (br_if $L98
                                                          (i32.eqz
                                                            (i32.load
                                                              (local.tee $l17
                                                                (i32.add
                                                                  (local.get $l16)
                                                                  (i32.const -4))))))))
                                                    (i32.store offset=108
                                                      (local.get $l5)
                                                      (local.tee $l20
                                                        (i32.sub
                                                          (i32.load offset=108
                                                            (local.get $l5))
                                                          (local.get $l20))))
                                                    (local.set $l17
                                                      (local.get $l16))
                                                    (br_if $L94
                                                      (i32.gt_s
                                                        (local.get $l20)
                                                        (i32.const 0)))))
                                                (block $B99
                                                  (br_if $B99
                                                    (i32.gt_s
                                                      (local.get $l20)
                                                      (i32.const -1)))
                                                  (local.set $l28
                                                    (i32.add
                                                      (i32.div_u
                                                        (i32.add
                                                          (local.get $l34)
                                                          (i32.const 25))
                                                        (i32.const 9))
                                                      (i32.const 1)))
                                                  (loop $L100
                                                    (local.set $l24
                                                      (select
                                                        (i32.const 9)
                                                        (i32.sub
                                                          (i32.const 0)
                                                          (local.get $l20))
                                                        (i32.lt_s
                                                          (local.get $l20)
                                                          (i32.const -9))))
                                                    (block $B101
                                                      (block $B102
                                                        (br_if $B102
                                                          (i32.lt_u
                                                            (local.get $l18)
                                                            (local.get $l16)))
                                                        (local.set $l18
                                                          (select
                                                            (local.get $l18)
                                                            (i32.add
                                                              (local.get $l18)
                                                              (i32.const 4))
                                                            (i32.load
                                                              (local.get $l18))))
                                                        (br $B101))
                                                      (local.set $l26
                                                        (i32.shr_u
                                                          (i32.const 1000000000)
                                                          (local.get $l24)))
                                                      (local.set $l25
                                                        (i32.xor
                                                          (i32.shl
                                                            (i32.const -1)
                                                            (local.get $l24))
                                                          (i32.const -1)))
                                                      (local.set $l20
                                                        (i32.const 0))
                                                      (local.set $l17
                                                        (local.get $l18))
                                                      (loop $L103
                                                        (i32.store
                                                          (local.get $l17)
                                                          (i32.add
                                                            (i32.shr_u
                                                              (local.tee $l21
                                                                (i32.load
                                                                  (local.get $l17)))
                                                              (local.get $l24))
                                                            (local.get $l20)))
                                                        (local.set $l20
                                                          (i32.mul
                                                            (i32.and
                                                              (local.get $l21)
                                                              (local.get $l25))
                                                            (local.get $l26)))
                                                        (br_if $L103
                                                          (i32.lt_u
                                                            (local.tee $l17
                                                              (i32.add
                                                                (local.get $l17)
                                                                (i32.const 4)))
                                                            (local.get $l16))))
                                                      (local.set $l18
                                                        (select
                                                          (local.get $l18)
                                                          (i32.add
                                                            (local.get $l18)
                                                            (i32.const 4))
                                                          (i32.load
                                                            (local.get $l18))))
                                                      (br_if $B101
                                                        (i32.eqz
                                                          (local.get $l20)))
                                                      (i32.store
                                                        (local.get $l16)
                                                        (local.get $l20))
                                                      (local.set $l16
                                                        (i32.add
                                                          (local.get $l16)
                                                          (i32.const 4))))
                                                    (i32.store offset=108
                                                      (local.get $l5)
                                                      (local.tee $l20
                                                        (i32.add
                                                          (i32.load offset=108
                                                            (local.get $l5))
                                                          (local.get $l24))))
                                                    (local.set $l16
                                                      (select
                                                        (i32.add
                                                          (local.tee $l17
                                                            (select
                                                              (local.get $l35)
                                                              (local.get $l18)
                                                              (i32.eq
                                                                (local.get $l33)
                                                                (i32.const 102))))
                                                          (i32.shl
                                                            (local.get $l28)
                                                            (i32.const 2)))
                                                        (local.get $l16)
                                                        (i32.gt_s
                                                          (i32.shr_s
                                                            (i32.sub
                                                              (local.get $l16)
                                                              (local.get $l17))
                                                            (i32.const 2))
                                                          (local.get $l28))))
                                                    (br_if $L100
                                                      (i32.lt_s
                                                        (local.get $l20)
                                                        (i32.const 0)))))
                                                (local.set $l20
                                                  (i32.const 0))
                                                (block $B104
                                                  (br_if $B104
                                                    (i32.ge_u
                                                      (local.get $l18)
                                                      (local.get $l16)))
                                                  (local.set $l20
                                                    (i32.mul
                                                      (i32.shr_s
                                                        (i32.sub
                                                          (local.get $l35)
                                                          (local.get $l18))
                                                        (i32.const 2))
                                                      (i32.const 9)))
                                                  (br_if $B104
                                                    (i32.lt_u
                                                      (local.tee $l21
                                                        (i32.load
                                                          (local.get $l18)))
                                                      (i32.const 10)))
                                                  (local.set $l17
                                                    (i32.const 10))
                                                  (loop $L105
                                                    (local.set $l20
                                                      (i32.add
                                                        (local.get $l20)
                                                        (i32.const 1)))
                                                    (br_if $L105
                                                      (i32.ge_u
                                                        (local.get $l21)
                                                        (local.tee $l17
                                                          (i32.mul
                                                            (local.get $l17)
                                                            (i32.const 10)))))))
                                                (block $B106
                                                  (br_if $B106
                                                    (i32.ge_s
                                                      (local.tee $l17
                                                        (i32.sub
                                                          (i32.sub
                                                            (local.get $l34)
                                                            (local.tee $l21
                                                              (select
                                                                (i32.const 0)
                                                                (local.get $l20)
                                                                (i32.eq
                                                                  (local.get $l33)
                                                                  (i32.const 102)))))
                                                          (local.tee $l25
                                                            (i32.and
                                                              (i32.ne
                                                                (local.get $l34)
                                                                (i32.const 0))
                                                              (local.tee $l26
                                                                (i32.eq
                                                                  (local.get $l33)
                                                                  (i32.const 103)))))))
                                                      (i32.add
                                                        (i32.mul
                                                          (i32.shr_s
                                                            (i32.sub
                                                              (local.get $l16)
                                                              (local.get $l35))
                                                            (i32.const 2))
                                                          (i32.const 9))
                                                        (i32.const -9))))
                                                  (local.set $l24
                                                    (i32.add
                                                      (local.tee $l38
                                                        (i32.add
                                                          (i32.shl
                                                            (local.tee $l33
                                                              (i32.div_s
                                                                (local.tee $l28
                                                                  (i32.add
                                                                    (local.get $l17)
                                                                    (i32.const 9216)))
                                                                (i32.const 9)))
                                                            (i32.const 2))
                                                          (local.get $l35)))
                                                      (i32.const -4092)))
                                                  (local.set $l17
                                                    (i32.const 10))
                                                  (block $B107
                                                    (br_if $B107
                                                      (i32.gt_s
                                                        (i32.sub
                                                          (local.get $l28)
                                                          (local.tee $l33
                                                            (i32.mul
                                                              (local.get $l33)
                                                              (i32.const 9))))
                                                        (i32.const 7)))
                                                    (local.set $l21
                                                      (i32.add
                                                        (i32.sub
                                                          (i32.sub
                                                            (i32.add
                                                              (local.get $l34)
                                                              (i32.sub
                                                                (i32.const 0)
                                                                (local.get $l25)))
                                                            (local.get $l21))
                                                          (local.get $l33))
                                                        (i32.const 9215)))
                                                    (local.set $l17
                                                      (i32.const 10))
                                                    (loop $L108
                                                      (local.set $l17
                                                        (i32.mul
                                                          (local.get $l17)
                                                          (i32.const 10)))
                                                      (br_if $L108
                                                        (i32.lt_s
                                                          (local.tee $l21
                                                            (i32.add
                                                              (local.get $l21)
                                                              (i32.const 1)))
                                                          (i32.const 7)))))
                                                  (local.set $l21
                                                    (i32.sub
                                                      (local.tee $l25
                                                        (i32.load
                                                          (local.get $l24)))
                                                      (i32.mul
                                                        (local.tee $l28
                                                          (i32.div_u
                                                            (local.get $l25)
                                                            (local.get $l17)))
                                                        (local.get $l17))))
                                                  (block $B109
                                                    (block $B110
                                                      (br_if $B110
                                                        (i32.ne
                                                          (local.tee $l33
                                                            (i32.add
                                                              (local.get $l24)
                                                              (i32.const 4)))
                                                          (local.get $l16)))
                                                      (br_if $B109
                                                        (i32.eqz
                                                          (local.get $l21))))
                                                    (block $B111
                                                      (block $B112
                                                        (br_if $B112
                                                          (i32.and
                                                            (local.get $l28)
                                                            (i32.const 1)))
                                                        (local.set $l29
                                                          (f64.const 0x1p+53 (;=9.0072e+15;)))
                                                        (br_if $B111
                                                          (i32.le_u
                                                            (local.get $l24)
                                                            (local.get $l18)))
                                                        (br_if $B111
                                                          (i32.ne
                                                            (local.get $l17)
                                                            (i32.const 1000000000)))
                                                        (br_if $B111
                                                          (i32.eqz
                                                            (i32.and
                                                              (i32.load8_u
                                                                (i32.add
                                                                  (local.get $l24)
                                                                  (i32.const -4)))
                                                              (i32.const 1)))))
                                                      (local.set $l29
                                                        (f64.const 0x1.0000000000001p+53 (;=9.0072e+15;))))
                                                    (local.set $l32
                                                      (select
                                                        (f64.const 0x1p-1 (;=0.5;))
                                                        (select
                                                          (select
                                                            (f64.const 0x1p+0 (;=1;))
                                                            (f64.const 0x1.8p+0 (;=1.5;))
                                                            (i32.eq
                                                              (local.get $l21)
                                                              (local.tee $l28
                                                                (i32.shr_u
                                                                  (local.get $l17)
                                                                  (i32.const 1)))))
                                                          (f64.const 0x1.8p+0 (;=1.5;))
                                                          (i32.eq
                                                            (local.get $l33)
                                                            (local.get $l16)))
                                                        (i32.lt_u
                                                          (local.get $l21)
                                                          (local.get $l28))))
                                                    (block $B113
                                                      (br_if $B113
                                                        (i32.eqz
                                                          (local.get $l31)))
                                                      (br_if $B113
                                                        (i32.ne
                                                          (i32.load8_u
                                                            (local.get $l30))
                                                          (i32.const 45)))
                                                      (local.set $l32
                                                        (f64.neg
                                                          (local.get $l32)))
                                                      (local.set $l29
                                                        (f64.neg
                                                          (local.get $l29))))
                                                    (i32.store
                                                      (local.get $l24)
                                                      (local.tee $l21
                                                        (i32.sub
                                                          (local.get $l25)
                                                          (local.get $l21))))
                                                    (br_if $B109
                                                      (f64.eq
                                                        (f64.add
                                                          (local.get $l29)
                                                          (local.get $l32))
                                                        (local.get $l29)))
                                                    (i32.store
                                                      (local.get $l24)
                                                      (local.tee $l17
                                                        (i32.add
                                                          (local.get $l21)
                                                          (local.get $l17))))
                                                    (block $B114
                                                      (br_if $B114
                                                        (i32.lt_u
                                                          (local.get $l17)
                                                          (i32.const 1000000000)))
                                                      (local.set $l17
                                                        (i32.add
                                                          (local.get $l38)
                                                          (i32.const -4096)))
                                                      (loop $L115
                                                        (i32.store
                                                          (i32.add
                                                            (local.get $l17)
                                                            (i32.const 4))
                                                          (i32.const 0))
                                                        (block $B116
                                                          (br_if $B116
                                                            (i32.ge_u
                                                              (local.get $l17)
                                                              (local.get $l18)))
                                                          (i32.store
                                                            (local.tee $l18
                                                              (i32.add
                                                                (local.get $l18)
                                                                (i32.const -4)))
                                                            (i32.const 0)))
                                                        (i32.store
                                                          (local.get $l17)
                                                          (local.tee $l20
                                                            (i32.add
                                                              (i32.load
                                                                (local.get $l17))
                                                              (i32.const 1))))
                                                        (local.set $l17
                                                          (i32.add
                                                            (local.get $l17)
                                                            (i32.const -4)))
                                                        (br_if $L115
                                                          (i32.gt_u
                                                            (local.get $l20)
                                                            (i32.const 999999999))))
                                                      (local.set $l24
                                                        (i32.add
                                                          (local.get $l17)
                                                          (i32.const 4))))
                                                    (local.set $l20
                                                      (i32.mul
                                                        (i32.shr_s
                                                          (i32.sub
                                                            (local.get $l35)
                                                            (local.get $l18))
                                                          (i32.const 2))
                                                        (i32.const 9)))
                                                    (br_if $B109
                                                      (i32.lt_u
                                                        (local.tee $l21
                                                          (i32.load
                                                            (local.get $l18)))
                                                        (i32.const 10)))
                                                    (local.set $l17
                                                      (i32.const 10))
                                                    (loop $L117
                                                      (local.set $l20
                                                        (i32.add
                                                          (local.get $l20)
                                                          (i32.const 1)))
                                                      (br_if $L117
                                                        (i32.ge_u
                                                          (local.get $l21)
                                                          (local.tee $l17
                                                            (i32.mul
                                                              (local.get $l17)
                                                              (i32.const 10)))))))
                                                  (local.set $l16
                                                    (select
                                                      (local.tee $l17
                                                        (i32.add
                                                          (local.get $l24)
                                                          (i32.const 4)))
                                                      (local.get $l16)
                                                      (i32.gt_u
                                                        (local.get $l16)
                                                        (local.get $l17)))))
                                                (block $B118
                                                  (loop $L119
                                                    (block $B120
                                                      (br_if $B120
                                                        (i32.gt_u
                                                          (local.tee $l17
                                                            (local.get $l16))
                                                          (local.get $l18)))
                                                      (local.set $l28
                                                        (i32.const 0))
                                                      (br $B118))
                                                    (br_if $L119
                                                      (i32.eqz
                                                        (i32.load
                                                          (local.tee $l16
                                                            (i32.add
                                                              (local.get $l17)
                                                              (i32.const -4)))))))
                                                  (local.set $l28
                                                    (i32.const 1)))
                                                (block $B121
                                                  (block $B122
                                                    (br_if $B122
                                                      (local.get $l26))
                                                    (local.set $l26
                                                      (i32.and
                                                        (local.get $l22)
                                                        (i32.const 8)))
                                                    (br $B121))
                                                  (local.set $l34
                                                    (i32.add
                                                      (select
                                                        (i32.xor
                                                          (local.get $l20)
                                                          (i32.const -1))
                                                        (i32.const -1)
                                                        (local.tee $l21
                                                          (i32.and
                                                            (i32.gt_s
                                                              (local.tee $l16
                                                                (select
                                                                  (local.get $l34)
                                                                  (i32.const 1)
                                                                  (local.get $l34)))
                                                              (local.get $l20))
                                                            (i32.gt_s
                                                              (local.get $l20)
                                                              (i32.const -5)))))
                                                      (local.get $l16)))
                                                  (local.set $l27
                                                    (i32.add
                                                      (select
                                                        (i32.const -1)
                                                        (i32.const -2)
                                                        (local.get $l21))
                                                      (local.get $l27)))
                                                  (br_if $B121
                                                    (local.tee $l26
                                                      (i32.and
                                                        (local.get $l22)
                                                        (i32.const 8))))
                                                  (local.set $l16
                                                    (i32.const 9))
                                                  (block $B123
                                                    (br_if $B123
                                                      (i32.eqz
                                                        (local.get $l28)))
                                                    (br_if $B123
                                                      (i32.eqz
                                                        (local.tee $l24
                                                          (i32.load
                                                            (i32.add
                                                              (local.get $l17)
                                                              (i32.const -4))))))
                                                    (local.set $l16
                                                      (i32.const 0))
                                                    (br_if $B123
                                                      (i32.rem_u
                                                        (local.get $l24)
                                                        (i32.const 10)))
                                                    (local.set $l21
                                                      (i32.const 10))
                                                    (local.set $l16
                                                      (i32.const 0))
                                                    (loop $L124
                                                      (local.set $l16
                                                        (i32.add
                                                          (local.get $l16)
                                                          (i32.const 1)))
                                                      (br_if $L124
                                                        (i32.eqz
                                                          (i32.rem_u
                                                            (local.get $l24)
                                                            (local.tee $l21
                                                              (i32.mul
                                                                (local.get $l21)
                                                                (i32.const 10))))))))
                                                  (local.set $l21
                                                    (i32.add
                                                      (i32.mul
                                                        (i32.shr_s
                                                          (i32.sub
                                                            (local.get $l17)
                                                            (local.get $l35))
                                                          (i32.const 2))
                                                        (i32.const 9))
                                                      (i32.const -9)))
                                                  (block $B125
                                                    (br_if $B125
                                                      (i32.ne
                                                        (i32.or
                                                          (local.get $l27)
                                                          (i32.const 32))
                                                        (i32.const 102)))
                                                    (local.set $l26
                                                      (i32.const 0))
                                                    (local.set $l34
                                                      (select
                                                        (local.get $l34)
                                                        (local.tee $l16
                                                          (select
                                                            (local.tee $l16
                                                              (i32.sub
                                                                (local.get $l21)
                                                                (local.get $l16)))
                                                            (i32.const 0)
                                                            (i32.gt_s
                                                              (local.get $l16)
                                                              (i32.const 0))))
                                                        (i32.lt_s
                                                          (local.get $l34)
                                                          (local.get $l16))))
                                                    (br $B121))
                                                  (local.set $l26
                                                    (i32.const 0))
                                                  (local.set $l34
                                                    (select
                                                      (local.get $l34)
                                                      (local.tee $l16
                                                        (select
                                                          (local.tee $l16
                                                            (i32.sub
                                                              (i32.add
                                                                (local.get $l21)
                                                                (local.get $l20))
                                                              (local.get $l16)))
                                                          (i32.const 0)
                                                          (i32.gt_s
                                                            (local.get $l16)
                                                            (i32.const 0))))
                                                      (i32.lt_s
                                                        (local.get $l34)
                                                        (local.get $l16)))))
                                                (local.set $l16
                                                  (i32.const -1))
                                                (br_if $B69
                                                  (i32.gt_s
                                                    (local.get $l34)
                                                    (select
                                                      (i32.const 2147483645)
                                                      (i32.const 2147483646)
                                                      (local.tee $l25
                                                        (i32.or
                                                          (local.get $l34)
                                                          (local.get $l26))))))
                                                (local.set $l33
                                                  (i32.add
                                                    (i32.add
                                                      (local.get $l34)
                                                      (i32.ne
                                                        (local.get $l25)
                                                        (i32.const 0)))
                                                    (i32.const 1)))
                                                (block $B126
                                                  (block $B127
                                                    (br_if $B127
                                                      (local.tee $l38
                                                        (i32.ne
                                                          (i32.or
                                                            (local.get $l27)
                                                            (i32.const 32))
                                                          (i32.const 102))))
                                                    (br_if $B69
                                                      (i32.gt_s
                                                        (local.get $l20)
                                                        (i32.sub
                                                          (i32.const 2147483647)
                                                          (local.get $l33))))
                                                    (local.set $l20
                                                      (select
                                                        (local.get $l20)
                                                        (i32.const 0)
                                                        (i32.gt_s
                                                          (local.get $l20)
                                                          (i32.const 0))))
                                                    (br $B126))
                                                  (block $B128
                                                    (br_if $B128
                                                      (i32.gt_s
                                                        (i32.sub
                                                          (local.get $l12)
                                                          (local.tee $l21
                                                            (call $fmt_u
                                                              (i64.extend_i32_u
                                                                (i32.xor
                                                                  (i32.add
                                                                    (local.get $l20)
                                                                    (local.tee $l16
                                                                      (i32.shr_s
                                                                        (local.get $l20)
                                                                        (i32.const 31))))
                                                                  (local.get $l16)))
                                                              (local.get $l12))))
                                                        (i32.const 1)))
                                                    (local.set $l16
                                                      (i32.add
                                                        (local.get $l21)
                                                        (i32.const -1)))
                                                    (loop $L129
                                                      (i32.store8
                                                        (local.get $l16)
                                                        (i32.const 48))
                                                      (local.set $l21
                                                        (i32.sub
                                                          (local.get $l12)
                                                          (local.get $l16)))
                                                      (local.set $l16
                                                        (local.tee $l24
                                                          (i32.add
                                                            (local.get $l16)
                                                            (i32.const -1))))
                                                      (br_if $L129
                                                        (i32.lt_s
                                                          (local.get $l21)
                                                          (i32.const 2))))
                                                    (local.set $l21
                                                      (i32.add
                                                        (local.get $l24)
                                                        (i32.const 1))))
                                                  (i32.store8
                                                    (local.tee $l24
                                                      (i32.add
                                                        (local.get $l21)
                                                        (i32.const -2)))
                                                    (local.get $l27))
                                                  (local.set $l16
                                                    (i32.const -1))
                                                  (i32.store8
                                                    (i32.add
                                                      (local.get $l21)
                                                      (i32.const -1))
                                                    (select
                                                      (i32.const 45)
                                                      (i32.const 43)
                                                      (i32.lt_s
                                                        (local.get $l20)
                                                        (i32.const 0))))
                                                  (br_if $B69
                                                    (i32.gt_s
                                                      (local.tee $l20
                                                        (i32.sub
                                                          (local.get $l12)
                                                          (local.get $l24)))
                                                      (i32.sub
                                                        (i32.const 2147483647)
                                                        (local.get $l33)))))
                                                (local.set $l16
                                                  (i32.const -1))
                                                (br_if $B69
                                                  (i32.gt_s
                                                    (local.tee $l20
                                                      (i32.add
                                                        (local.get $l20)
                                                        (local.get $l33)))
                                                    (i32.xor
                                                      (local.get $l31)
                                                      (i32.const 2147483647))))
                                                (call $pad
                                                  (local.get $p0)
                                                  (i32.const 32)
                                                  (local.get $l23)
                                                  (local.tee $l27
                                                    (i32.add
                                                      (local.get $l20)
                                                      (local.get $l31)))
                                                  (local.get $l22))
                                                (block $B130
                                                  (br_if $B130
                                                    (i32.and
                                                      (i32.load8_u
                                                        (local.get $p0))
                                                      (i32.const 32)))
                                                  (drop
                                                    (call_indirect $table (type $t18)
                                                      (local.get $p0)
                                                      (local.get $l30)
                                                      (local.get $l31)
                                                      (i32.load offset=32
                                                        (local.get $p0)))))
                                                (call $pad
                                                  (local.get $p0)
                                                  (i32.const 48)
                                                  (local.get $l23)
                                                  (local.get $l27)
                                                  (i32.xor
                                                    (local.get $l22)
                                                    (i32.const 65536)))
                                                (block $B131
                                                  (block $B132
                                                    (block $B133
                                                      (block $B134
                                                        (br_if $B134
                                                          (local.get $l38))
                                                        (local.set $l18
                                                          (local.tee $l20
                                                            (select
                                                              (local.get $l35)
                                                              (local.get $l18)
                                                              (i32.gt_u
                                                                (local.get $l18)
                                                                (local.get $l35)))))
                                                        (loop $L135
                                                          (local.set $l16
                                                            (call $fmt_u
                                                              (i64.load32_u
                                                                (local.get $l18))
                                                              (local.get $l10)))
                                                          (block $B136
                                                            (block $B137
                                                              (br_if $B137
                                                                (i32.eq
                                                                  (local.get $l18)
                                                                  (local.get $l20)))
                                                              (br_if $B136
                                                                (i32.le_u
                                                                  (local.get $l16)
                                                                  (i32.add
                                                                    (local.get $l5)
                                                                    (i32.const 80))))
                                                              (loop $L138
                                                                (i32.store8
                                                                  (local.tee $l16
                                                                    (i32.add
                                                                      (local.get $l16)
                                                                      (i32.const -1)))
                                                                  (i32.const 48))
                                                                (br_if $L138
                                                                  (i32.gt_u
                                                                    (local.get $l16)
                                                                    (i32.add
                                                                      (local.get $l5)
                                                                      (i32.const 80))))
                                                                (br $B136)))
                                                            (br_if $B136
                                                              (i32.ne
                                                                (local.get $l16)
                                                                (local.get $l10)))
                                                            (i32.store8 offset=88
                                                              (local.get $l5)
                                                              (i32.const 48))
                                                            (local.set $l16
                                                              (local.get $l9)))
                                                          (block $B139
                                                            (br_if $B139
                                                              (i32.and
                                                                (i32.load8_u
                                                                  (local.get $p0))
                                                                (i32.const 32)))
                                                            (drop
                                                              (call_indirect $table (type $t18)
                                                                (local.get $p0)
                                                                (local.get $l16)
                                                                (i32.sub
                                                                  (local.get $l10)
                                                                  (local.get $l16))
                                                                (i32.load offset=32
                                                                  (local.get $p0)))))
                                                          (br_if $L135
                                                            (i32.le_u
                                                              (local.tee $l18
                                                                (i32.add
                                                                  (local.get $l18)
                                                                  (i32.const 4)))
                                                              (local.get $l35))))
                                                        (block $B140
                                                          (br_if $B140
                                                            (i32.eqz
                                                              (local.get $l25)))
                                                          (br_if $B140
                                                            (i32.and
                                                              (i32.load8_u
                                                                (local.get $p0))
                                                              (i32.const 32)))
                                                          (drop
                                                            (call_indirect $table (type $t18)
                                                              (local.get $p0)
                                                              (i32.add
                                                                (i32.const 66384)
                                                                (i32.const 13459))
                                                              (i32.const 1)
                                                              (i32.load offset=32
                                                                (local.get $p0)))))
                                                        (br_if $B133
                                                          (i32.lt_s
                                                            (local.get $l34)
                                                            (i32.const 1)))
                                                        (br_if $B133
                                                          (i32.ge_u
                                                            (local.get $l18)
                                                            (local.get $l17)))
                                                        (loop $L141
                                                          (block $B142
                                                            (br_if $B142
                                                              (i32.le_u
                                                                (local.tee $l16
                                                                  (call $fmt_u
                                                                    (i64.load32_u
                                                                      (local.get $l18))
                                                                    (local.get $l10)))
                                                                (i32.add
                                                                  (local.get $l5)
                                                                  (i32.const 80))))
                                                            (loop $L143
                                                              (i32.store8
                                                                (local.tee $l16
                                                                  (i32.add
                                                                    (local.get $l16)
                                                                    (i32.const -1)))
                                                                (i32.const 48))
                                                              (br_if $L143
                                                                (i32.gt_u
                                                                  (local.get $l16)
                                                                  (i32.add
                                                                    (local.get $l5)
                                                                    (i32.const 80))))))
                                                          (block $B144
                                                            (br_if $B144
                                                              (i32.and
                                                                (i32.load8_u
                                                                  (local.get $p0))
                                                                (i32.const 32)))
                                                            (drop
                                                              (call_indirect $table (type $t18)
                                                                (local.get $p0)
                                                                (local.get $l16)
                                                                (select
                                                                  (local.get $l34)
                                                                  (i32.const 9)
                                                                  (i32.lt_s
                                                                    (local.get $l34)
                                                                    (i32.const 9)))
                                                                (i32.load offset=32
                                                                  (local.get $p0)))))
                                                          (local.set $l16
                                                            (i32.add
                                                              (local.get $l34)
                                                              (i32.const -9)))
                                                          (br_if $B132
                                                            (i32.lt_s
                                                              (local.get $l34)
                                                              (i32.const 10)))
                                                          (local.set $l34
                                                            (local.get $l16))
                                                          (br_if $L141
                                                            (i32.lt_u
                                                              (local.tee $l18
                                                                (i32.add
                                                                  (local.get $l18)
                                                                  (i32.const 4)))
                                                              (local.get $l17)))
                                                          (br $B132)))
                                                      (block $B145
                                                        (br_if $B145
                                                          (i32.lt_s
                                                            (local.get $l34)
                                                            (i32.const 0)))
                                                        (local.set $l21
                                                          (select
                                                            (local.get $l17)
                                                            (i32.add
                                                              (local.get $l18)
                                                              (i32.const 4))
                                                            (local.get $l28)))
                                                        (local.set $l17
                                                          (local.get $l18))
                                                        (loop $L146
                                                          (block $B147
                                                            (br_if $B147
                                                              (i32.ne
                                                                (local.tee $l16
                                                                  (call $fmt_u
                                                                    (i64.load32_u
                                                                      (local.get $l17))
                                                                    (local.get $l10)))
                                                                (local.get $l10)))
                                                            (i32.store8 offset=88
                                                              (local.get $l5)
                                                              (i32.const 48))
                                                            (local.set $l16
                                                              (local.get $l9)))
                                                          (block $B148
                                                            (block $B149
                                                              (br_if $B149
                                                                (i32.eq
                                                                  (local.get $l17)
                                                                  (local.get $l18)))
                                                              (br_if $B148
                                                                (i32.le_u
                                                                  (local.get $l16)
                                                                  (i32.add
                                                                    (local.get $l5)
                                                                    (i32.const 80))))
                                                              (loop $L150
                                                                (i32.store8
                                                                  (local.tee $l16
                                                                    (i32.add
                                                                      (local.get $l16)
                                                                      (i32.const -1)))
                                                                  (i32.const 48))
                                                                (br_if $L150
                                                                  (i32.gt_u
                                                                    (local.get $l16)
                                                                    (i32.add
                                                                      (local.get $l5)
                                                                      (i32.const 80))))
                                                                (br $B148)))
                                                            (block $B151
                                                              (br_if $B151
                                                                (i32.and
                                                                  (i32.load8_u
                                                                    (local.get $p0))
                                                                  (i32.const 32)))
                                                              (drop
                                                                (call_indirect $table (type $t18)
                                                                  (local.get $p0)
                                                                  (local.get $l16)
                                                                  (i32.const 1)
                                                                  (i32.load offset=32
                                                                    (local.get $p0)))))
                                                            (local.set $l16
                                                              (i32.add
                                                                (local.get $l16)
                                                                (i32.const 1)))
                                                            (block $B152
                                                              (br_if $B152
                                                                (local.get $l26))
                                                              (br_if $B148
                                                                (i32.lt_s
                                                                  (local.get $l34)
                                                                  (i32.const 1))))
                                                            (br_if $B148
                                                              (i32.and
                                                                (i32.load8_u
                                                                  (local.get $p0))
                                                                (i32.const 32)))
                                                            (drop
                                                              (call_indirect $table (type $t18)
                                                                (local.get $p0)
                                                                (i32.add
                                                                  (i32.const 66384)
                                                                  (i32.const 13459))
                                                                (i32.const 1)
                                                                (i32.load offset=32
                                                                  (local.get $p0)))))
                                                          (local.set $l20
                                                            (i32.sub
                                                              (local.get $l10)
                                                              (local.get $l16)))
                                                          (block $B153
                                                            (br_if $B153
                                                              (i32.and
                                                                (i32.load8_u
                                                                  (local.get $p0))
                                                                (i32.const 32)))
                                                            (drop
                                                              (call_indirect $table (type $t18)
                                                                (local.get $p0)
                                                                (local.get $l16)
                                                                (select
                                                                  (local.get $l20)
                                                                  (local.get $l34)
                                                                  (i32.gt_s
                                                                    (local.get $l34)
                                                                    (local.get $l20)))
                                                                (i32.load offset=32
                                                                  (local.get $p0)))))
                                                          (local.set $l34
                                                            (i32.sub
                                                              (local.get $l34)
                                                              (local.get $l20)))
                                                          (br_if $B145
                                                            (i32.ge_u
                                                              (local.tee $l17
                                                                (i32.add
                                                                  (local.get $l17)
                                                                  (i32.const 4)))
                                                              (local.get $l21)))
                                                          (br_if $L146
                                                            (i32.gt_s
                                                              (local.get $l34)
                                                              (i32.const -1)))))
                                                      (call $pad
                                                        (local.get $p0)
                                                        (i32.const 48)
                                                        (i32.add
                                                          (local.get $l34)
                                                          (i32.const 18))
                                                        (i32.const 18)
                                                        (i32.const 0))
                                                      (br_if $B131
                                                        (i32.and
                                                          (i32.load8_u
                                                            (local.get $p0))
                                                          (i32.const 32)))
                                                      (drop
                                                        (call_indirect $table (type $t18)
                                                          (local.get $p0)
                                                          (local.get $l24)
                                                          (i32.sub
                                                            (local.get $l12)
                                                            (local.get $l24))
                                                          (i32.load offset=32
                                                            (local.get $p0))))
                                                      (br $B131))
                                                    (local.set $l16
                                                      (local.get $l34)))
                                                  (call $pad
                                                    (local.get $p0)
                                                    (i32.const 48)
                                                    (i32.add
                                                      (local.get $l16)
                                                      (i32.const 9))
                                                    (i32.const 9)
                                                    (i32.const 0)))
                                                (call $pad
                                                  (local.get $p0)
                                                  (i32.const 32)
                                                  (local.get $l23)
                                                  (local.get $l27)
                                                  (i32.xor
                                                    (local.get $l22)
                                                    (i32.const 8192)))
                                                (local.set $l16
                                                  (select
                                                    (local.get $l23)
                                                    (local.get $l27)
                                                    (i32.lt_s
                                                      (local.get $l27)
                                                      (local.get $l23)))))
                                              (br_if $L2
                                                (i32.ge_s
                                                  (local.get $l16)
                                                  (i32.const 0)))
                                              (br $B0))
                                            (local.set $l18
                                              (i32.load offset=56
                                                (local.get $l5)))
                                            (br_if $B58
                                              (i32.eqz
                                                (local.get $l24))))
                                          (br_if $B58
                                            (i32.eqz
                                              (local.tee $l19
                                                (i32.load
                                                  (local.get $l18)))))
                                          (local.set $l20
                                            (i32.add
                                              (local.get $l18)
                                              (i32.const 4)))
                                          (local.set $l16
                                            (i32.const 0))
                                          (loop $L154
                                            (br_if $B57
                                              (i32.lt_s
                                                (local.tee $l17
                                                  (call $wctomb
                                                    (i32.add
                                                      (local.get $l5)
                                                      (i32.const 4))
                                                    (local.get $l19)))
                                                (i32.const 0)))
                                            (br_if $B57
                                              (i32.gt_u
                                                (local.get $l17)
                                                (i32.sub
                                                  (local.get $l24)
                                                  (local.get $l16))))
                                            (br_if $B57
                                              (i32.le_u
                                                (local.get $l24)
                                                (local.tee $l16
                                                  (i32.add
                                                    (local.get $l17)
                                                    (local.get $l16)))))
                                            (local.set $l19
                                              (i32.load
                                                (local.get $l20)))
                                            (local.set $l20
                                              (i32.add
                                                (local.get $l20)
                                                (i32.const 4)))
                                            (br_if $B57
                                              (i32.eqz
                                                (local.get $l19)))
                                            (br $L154)))
                                        (local.set $l16
                                          (i32.const 0))
                                        (local.set $l17
                                          (i32.const 0)))
                                      (local.set $l19
                                        (i32.const -1))
                                      (br_if $B0
                                        (i32.lt_s
                                          (i32.or
                                            (local.get $l17)
                                            (local.get $l16))
                                          (i32.const 0)))
                                      (call $pad
                                        (local.get $p0)
                                        (i32.const 32)
                                        (local.get $l23)
                                        (local.get $l16)
                                        (local.get $l22))
                                      (block $B155
                                        (br_if $B155
                                          (i32.eqz
                                            (local.get $l16)))
                                        (local.set $l19
                                          (i32.const 0))
                                        (loop $L156
                                          (br_if $B155
                                            (i32.eqz
                                              (local.tee $l17
                                                (i32.load
                                                  (local.get $l18)))))
                                          (br_if $B155
                                            (i32.gt_u
                                              (local.tee $l19
                                                (i32.add
                                                  (local.tee $l17
                                                    (call $wctomb
                                                      (i32.add
                                                        (local.get $l5)
                                                        (i32.const 4))
                                                      (local.get $l17)))
                                                  (local.get $l19)))
                                              (local.get $l16)))
                                          (block $B157
                                            (br_if $B157
                                              (i32.and
                                                (i32.load8_u
                                                  (local.get $p0))
                                                (i32.const 32)))
                                            (drop
                                              (call_indirect $table (type $t18)
                                                (local.get $p0)
                                                (i32.add
                                                  (local.get $l5)
                                                  (i32.const 4))
                                                (local.get $l17)
                                                (i32.load offset=32
                                                  (local.get $p0)))))
                                          (local.set $l18
                                            (i32.add
                                              (local.get $l18)
                                              (i32.const 4)))
                                          (br_if $L156
                                            (i32.lt_u
                                              (local.get $l19)
                                              (local.get $l16)))))
                                      (call $pad
                                        (local.get $p0)
                                        (i32.const 32)
                                        (local.get $l23)
                                        (local.get $l16)
                                        (i32.xor
                                          (local.get $l22)
                                          (i32.const 8192)))
                                      (local.set $l16
                                        (select
                                          (local.get $l23)
                                          (local.get $l16)
                                          (i32.gt_s
                                            (local.get $l23)
                                            (local.get $l16))))
                                      (br $L2))
                                    (local.set $l16
                                      (i32.const 66384))
                                    (local.set $l17
                                      (select
                                        (local.tee $l18
                                          (i32.load offset=56
                                            (local.get $l5)))
                                        (i32.add
                                          (local.get $l16)
                                          (i32.const 12826))
                                        (local.get $l18)))
                                    (br $B54))
                                  (local.set $l17
                                    (call $strerror
                                      (i32.const 0))))
                                (local.set $l19
                                  (i32.const 66384))
                                (local.set $l21
                                  (i32.const 0))
                                (local.set $l16
                                  (i32.add
                                    (local.get $l17)
                                    (local.tee $l18
                                      (call $strnlen
                                        (local.get $l17)
                                        (select
                                          (i32.const 2147483647)
                                          (local.get $l24)
                                          (i32.lt_s
                                            (local.get $l24)
                                            (i32.const 0)))))))
                                (block $B158
                                  (block $B159
                                    (br_if $B159
                                      (i32.le_s
                                        (local.get $l24)
                                        (i32.const -1)))
                                    (local.set $l28
                                      (i32.add
                                        (local.get $l19)
                                        (i32.const 12816)))
                                    (br $B158))
                                  (local.set $l19
                                    (i32.const 66384))
                                  (br_if $B1
                                    (i32.load8_u
                                      (local.get $l16)))
                                  (local.set $l28
                                    (i32.add
                                      (local.get $l19)
                                      (i32.const 12816))))
                                (local.set $l22
                                  (local.get $l26))
                                (local.set $l24
                                  (local.get $l18))
                                (br $B43))
                              (i64.store8 offset=55
                                (local.get $l5)
                                (i64.load offset=56
                                  (local.get $l5)))
                              (local.set $l28
                                (i32.add
                                  (i32.const 66384)
                                  (i32.const 12816)))
                              (local.set $l21
                                (i32.const 0))
                              (local.set $l24
                                (i32.const 1))
                              (local.set $l22
                                (local.get $l26))
                              (local.set $l16
                                (local.get $l13))
                              (local.set $l17
                                (local.get $l6))
                              (br $B43))
                            (block $B160
                              (br_if $B160
                                (i64.gt_s
                                  (local.tee $l37
                                    (i64.load offset=56
                                      (local.get $l5)))
                                  (i64.const -1)))
                              (i64.store offset=56
                                (local.get $l5)
                                (local.tee $l37
                                  (i64.sub
                                    (i64.const 0)
                                    (local.get $l37))))
                              (local.set $l28
                                (i32.add
                                  (i32.const 66384)
                                  (i32.const 12816)))
                              (local.set $l21
                                (i32.const 1))
                              (br $B46))
                            (local.set $l16
                              (i32.const 66384))
                            (block $B161
                              (br_if $B161
                                (i32.eqz
                                  (i32.and
                                    (local.get $l22)
                                    (i32.const 2048))))
                              (local.set $l21
                                (i32.const 1))
                              (local.set $l28
                                (i32.add
                                  (i32.add
                                    (local.get $l16)
                                    (i32.const 12816))
                                  (i32.const 1)))
                              (br $B46))
                            (local.set $l28
                              (select
                                (i32.add
                                  (local.tee $l16
                                    (i32.add
                                      (i32.const 66384)
                                      (i32.const 12816)))
                                  (i32.const 2))
                                (local.get $l16)
                                (local.tee $l21
                                  (i32.and
                                    (local.get $l22)
                                    (i32.const 1)))))
                            (br $B46))
                          (local.set $l17
                            (local.get $l13))
                          (block $B162
                            (br_if $B162
                              (i64.eqz
                                (local.tee $l37
                                  (i64.load offset=56
                                    (local.get $l5)))))
                            (local.set $l17
                              (local.get $l13))
                            (loop $L163
                              (i32.store8
                                (local.tee $l17
                                  (i32.add
                                    (local.get $l17)
                                    (i32.const -1)))
                                (i32.or
                                  (i32.and
                                    (i32.wrap_i64
                                      (local.get $l37))
                                    (i32.const 7))
                                  (i32.const 48)))
                              (br_if $L163
                                (i64.ne
                                  (local.tee $l37
                                    (i64.shr_u
                                      (local.get $l37)
                                      (i64.const 3)))
                                  (i64.const 0)))))
                          (local.set $l16
                            (i32.const 66384))
                          (local.set $l21
                            (i32.const 0))
                          (block $B164
                            (br_if $B164
                              (i32.and
                                (local.get $l22)
                                (i32.const 8)))
                            (local.set $l28
                              (i32.add
                                (local.get $l16)
                                (i32.const 12816)))
                            (br $B45))
                          (local.set $l24
                            (select
                              (local.get $l24)
                              (i32.add
                                (local.tee $l16
                                  (i32.sub
                                    (local.get $l13)
                                    (local.get $l17)))
                                (i32.const 1))
                              (i32.gt_s
                                (local.get $l24)
                                (local.get $l16))))
                          (local.set $l28
                            (i32.add
                              (i32.const 66384)
                              (i32.const 12816)))
                          (br $B45))
                        (local.set $l24
                          (select
                            (local.get $l24)
                            (i32.const 8)
                            (i32.gt_u
                              (local.get $l24)
                              (i32.const 8))))
                        (local.set $l22
                          (i32.or
                            (local.get $l22)
                            (i32.const 8)))
                        (local.set $l27
                          (i32.const 120)))
                      (local.set $l16
                        (i32.const 66384))
                      (local.set $l21
                        (i32.const 0))
                      (block $B165
                        (br_if $B165
                          (i32.eqz
                            (i64.eqz
                              (local.tee $l37
                                (i64.load offset=56
                                  (local.get $l5))))))
                        (local.set $l28
                          (i32.add
                            (local.get $l16)
                            (i32.const 12816)))
                        (local.set $l17
                          (local.get $l13))
                        (br $B45))
                      (local.set $l16
                        (i32.and
                          (local.get $l27)
                          (i32.const 32)))
                      (local.set $l17
                        (local.get $l13))
                      (loop $L166
                        (i32.store8
                          (local.tee $l17
                            (i32.add
                              (local.get $l17)
                              (i32.const -1)))
                          (i32.or
                            (i32.load8_u
                              (i32.add
                                (i32.add
                                  (i32.const 66384)
                                  (i32.const 13408))
                                (i32.and
                                  (i32.wrap_i64
                                    (local.get $l37))
                                  (i32.const 15))))
                            (local.get $l16)))
                        (br_if $L166
                          (i64.ne
                            (local.tee $l37
                              (i64.shr_u
                                (local.get $l37)
                                (i64.const 4)))
                            (i64.const 0))))
                      (local.set $l28
                        (i32.add
                          (i32.const 66384)
                          (i32.const 12816)))
                      (br_if $B45
                        (i32.eqz
                          (i32.and
                            (local.get $l22)
                            (i32.const 8))))
                      (br_if $B45
                        (i64.eqz
                          (i64.load offset=56
                            (local.get $l5))))
                      (local.set $l28
                        (i32.add
                          (i32.add
                            (i32.const 66384)
                            (i32.const 12816))
                          (i32.shr_s
                            (local.get $l27)
                            (i32.const 4))))
                      (local.set $l21
                        (i32.const 2))
                      (br $B45))
                    (local.set $l16
                      (i32.const 0))
                    (br_if $L2
                      (i32.gt_u
                        (local.tee $l18
                          (i32.and
                            (local.get $l21)
                            (i32.const 255)))
                        (i32.const 7)))
                    (block $B167
                      (block $B168
                        (block $B169
                          (block $B170
                            (block $B171
                              (block $B172
                                (block $B173
                                  (br_table $B173 $B172 $B171 $B170 $B169 $L2 $B168 $B167 $B173
                                    (local.get $l18)))
                                (i32.store
                                  (i32.load offset=56
                                    (local.get $l5))
                                  (local.get $l15))
                                (br $L2))
                              (i32.store
                                (i32.load offset=56
                                  (local.get $l5))
                                (local.get $l15))
                              (br $L2))
                            (i64.store
                              (i32.load offset=56
                                (local.get $l5))
                              (i64.extend_i32_s
                                (local.get $l15)))
                            (br $L2))
                          (i32.store16
                            (i32.load offset=56
                              (local.get $l5))
                            (local.get $l15))
                          (br $L2))
                        (i32.store8
                          (i32.load offset=56
                            (local.get $l5))
                          (local.get $l15))
                        (br $L2))
                      (i32.store
                        (i32.load offset=56
                          (local.get $l5))
                        (local.get $l15))
                      (br $L2))
                    (i64.store
                      (i32.load offset=56
                        (local.get $l5))
                      (i64.extend_i32_s
                        (local.get $l15)))
                    (br $L2))
                  (local.set $l28
                    (i32.add
                      (i32.const 66384)
                      (i32.const 12816)))
                  (local.set $l21
                    (i32.const 0))
                  (local.set $l37
                    (i64.load offset=56
                      (local.get $l5))))
                (local.set $l17
                  (call $fmt_u
                    (local.get $l37)
                    (local.get $l13))))
              (block $B174
                (br_if $B174
                  (i32.eqz
                    (local.get $l25)))
                (br_if $B1
                  (i32.lt_s
                    (local.get $l24)
                    (i32.const 0))))
              (local.set $l22
                (select
                  (i32.and
                    (local.get $l22)
                    (i32.const -65537))
                  (local.get $l22)
                  (local.get $l25)))
              (local.set $l37
                (i64.load offset=56
                  (local.get $l5)))
              (block $B175
                (br_if $B175
                  (local.get $l24))
                (br_if $B175
                  (i32.eqz
                    (i64.eqz
                      (local.get $l37))))
                (local.set $l24
                  (i32.const 0))
                (local.set $l16
                  (local.get $l13))
                (local.set $l17
                  (local.get $l13))
                (br $B43))
              (local.set $l24
                (select
                  (local.get $l24)
                  (local.tee $l16
                    (i32.add
                      (i32.sub
                        (local.get $l13)
                        (local.get $l17))
                      (i64.eqz
                        (local.get $l37))))
                  (i32.gt_s
                    (local.get $l24)
                    (local.get $l16)))))
            (local.set $l16
              (local.get $l13)))
          (br_if $B1
            (i32.gt_s
              (local.tee $l24
                (select
                  (local.tee $l26
                    (i32.sub
                      (local.get $l16)
                      (local.get $l17)))
                  (local.get $l24)
                  (i32.lt_s
                    (local.get $l24)
                    (local.get $l26))))
              (i32.sub
                (i32.const 2147483647)
                (local.get $l21))))
          (local.set $l19
            (i32.const -1))
          (br_if $B0
            (i32.gt_s
              (local.tee $l16
                (select
                  (local.tee $l18
                    (i32.add
                      (local.get $l24)
                      (local.get $l21)))
                  (local.get $l23)
                  (i32.lt_s
                    (local.get $l23)
                    (local.get $l18))))
              (local.get $l20)))
          (call $pad
            (local.get $p0)
            (i32.const 32)
            (local.get $l16)
            (local.get $l18)
            (local.get $l22))
          (block $B176
            (br_if $B176
              (i32.and
                (i32.load8_u
                  (local.get $p0))
                (i32.const 32)))
            (drop
              (call_indirect $table (type $t18)
                (local.get $p0)
                (local.get $l28)
                (local.get $l21)
                (i32.load offset=32
                  (local.get $p0)))))
          (call $pad
            (local.get $p0)
            (i32.const 48)
            (local.get $l16)
            (local.get $l18)
            (i32.xor
              (local.get $l22)
              (i32.const 65536)))
          (call $pad
            (local.get $p0)
            (i32.const 48)
            (local.get $l24)
            (local.get $l26)
            (i32.const 0))
          (block $B177
            (br_if $B177
              (i32.and
                (i32.load8_u
                  (local.get $p0))
                (i32.const 32)))
            (drop
              (call_indirect $table (type $t18)
                (local.get $p0)
                (local.get $l17)
                (local.get $l26)
                (i32.load offset=32
                  (local.get $p0)))))
          (call $pad
            (local.get $p0)
            (i32.const 32)
            (local.get $l16)
            (local.get $l18)
            (i32.xor
              (local.get $l22)
              (i32.const 8192)))
          (br $L2)))
      (local.set $l19
        (i32.const -1)))
    (global.set $g4
      (i32.add
        (local.get $l5)
        (i32.const 624)))
    (local.get $l19))
  (func $pop_arg (type $t22) (param $p0 i32) (param $p1 i32) (param $p2 i32)
    (block $B0
      (br_if $B0
        (i32.gt_u
          (local.tee $p1
            (i32.add
              (local.get $p1)
              (i32.const -9)))
          (i32.const 17)))
      (block $B1
        (block $B2
          (block $B3
            (block $B4
              (block $B5
                (block $B6
                  (block $B7
                    (block $B8
                      (block $B9
                        (block $B10
                          (block $B11
                            (block $B12
                              (block $B13
                                (block $B14
                                  (block $B15
                                    (block $B16
                                      (block $B17
                                        (block $B18
                                          (br_table $B1 $B18 $B17 $B14 $B16 $B15 $B13 $B12 $B11 $B10 $B9 $B8 $B7 $B6 $B5 $B4 $B3 $B2 $B1
                                            (local.get $p1)))
                                        (i32.store
                                          (local.get $p2)
                                          (i32.add
                                            (local.tee $p1
                                              (i32.load
                                                (local.get $p2)))
                                            (i32.const 4)))
                                        (i64.store
                                          (local.get $p0)
                                          (i64.load32_s
                                            (local.get $p1)))
                                        (return))
                                      (i32.store
                                        (local.get $p2)
                                        (i32.add
                                          (local.tee $p1
                                            (i32.load
                                              (local.get $p2)))
                                          (i32.const 4)))
                                      (i64.store
                                        (local.get $p0)
                                        (i64.load32_u
                                          (local.get $p1)))
                                      (return))
                                    (i32.store
                                      (local.get $p2)
                                      (i32.add
                                        (local.tee $p1
                                          (i32.load
                                            (local.get $p2)))
                                        (i32.const 4)))
                                    (i64.store
                                      (local.get $p0)
                                      (i64.load32_s
                                        (local.get $p1)))
                                    (return))
                                  (i32.store
                                    (local.get $p2)
                                    (i32.add
                                      (local.tee $p1
                                        (i32.load
                                          (local.get $p2)))
                                      (i32.const 4)))
                                  (i64.store
                                    (local.get $p0)
                                    (i64.load32_u
                                      (local.get $p1)))
                                  (return))
                                (i32.store
                                  (local.get $p2)
                                  (i32.add
                                    (local.tee $p1
                                      (i32.and
                                        (i32.add
                                          (i32.load
                                            (local.get $p2))
                                          (i32.const 7))
                                        (i32.const -8)))
                                    (i32.const 8)))
                                (i64.store
                                  (local.get $p0)
                                  (i64.load
                                    (local.get $p1)))
                                (return))
                              (i32.store
                                (local.get $p2)
                                (i32.add
                                  (local.tee $p1
                                    (i32.load
                                      (local.get $p2)))
                                  (i32.const 4)))
                              (i64.store
                                (local.get $p0)
                                (i64.load16_s
                                  (local.get $p1)))
                              (return))
                            (i32.store
                              (local.get $p2)
                              (i32.add
                                (local.tee $p1
                                  (i32.load
                                    (local.get $p2)))
                                (i32.const 4)))
                            (i64.store
                              (local.get $p0)
                              (i64.load16_u
                                (local.get $p1)))
                            (return))
                          (i32.store
                            (local.get $p2)
                            (i32.add
                              (local.tee $p1
                                (i32.load
                                  (local.get $p2)))
                              (i32.const 4)))
                          (i64.store
                            (local.get $p0)
                            (i64.load8_s
                              (local.get $p1)))
                          (return))
                        (i32.store
                          (local.get $p2)
                          (i32.add
                            (local.tee $p1
                              (i32.load
                                (local.get $p2)))
                            (i32.const 4)))
                        (i64.store
                          (local.get $p0)
                          (i64.load8_u
                            (local.get $p1)))
                        (return))
                      (i32.store
                        (local.get $p2)
                        (i32.add
                          (local.tee $p1
                            (i32.and
                              (i32.add
                                (i32.load
                                  (local.get $p2))
                                (i32.const 7))
                              (i32.const -8)))
                          (i32.const 8)))
                      (i64.store
                        (local.get $p0)
                        (i64.load
                          (local.get $p1)))
                      (return))
                    (i32.store
                      (local.get $p2)
                      (i32.add
                        (local.tee $p1
                          (i32.load
                            (local.get $p2)))
                        (i32.const 4)))
                    (i64.store
                      (local.get $p0)
                      (i64.load32_u
                        (local.get $p1)))
                    (return))
                  (i32.store
                    (local.get $p2)
                    (i32.add
                      (local.tee $p1
                        (i32.and
                          (i32.add
                            (i32.load
                              (local.get $p2))
                            (i32.const 7))
                          (i32.const -8)))
                      (i32.const 8)))
                  (i64.store
                    (local.get $p0)
                    (i64.load
                      (local.get $p1)))
                  (return))
                (i32.store
                  (local.get $p2)
                  (i32.add
                    (local.tee $p1
                      (i32.and
                        (i32.add
                          (i32.load
                            (local.get $p2))
                          (i32.const 7))
                        (i32.const -8)))
                    (i32.const 8)))
                (i64.store
                  (local.get $p0)
                  (i64.load
                    (local.get $p1)))
                (return))
              (i32.store
                (local.get $p2)
                (i32.add
                  (local.tee $p1
                    (i32.load
                      (local.get $p2)))
                  (i32.const 4)))
              (i64.store
                (local.get $p0)
                (i64.load32_s
                  (local.get $p1)))
              (return))
            (i32.store
              (local.get $p2)
              (i32.add
                (local.tee $p1
                  (i32.load
                    (local.get $p2)))
                (i32.const 4)))
            (i64.store
              (local.get $p0)
              (i64.load32_u
                (local.get $p1)))
            (return))
          (i32.store
            (local.get $p2)
            (i32.add
              (local.tee $p1
                (i32.and
                  (i32.add
                    (i32.load
                      (local.get $p2))
                    (i32.const 7))
                  (i32.const -8)))
              (i32.const 8)))
          (i64.store
            (local.get $p0)
            (i64.load
              (local.get $p1)))
          (return))
        (call $long_double_not_supported)
        (unreachable))
      (i32.store
        (local.get $p2)
        (i32.add
          (local.tee $p1
            (i32.load
              (local.get $p2)))
          (i32.const 4)))
      (i32.store
        (local.get $p0)
        (i32.load
          (local.get $p1)))))
  (func $pad (type $t35) (param $p0 i32) (param $p1 i32) (param $p2 i32) (param $p3 i32) (param $p4 i32)
    (local $l5 i32) (local $l6 i32) (local $l7 i32)
    (global.set $g4
      (local.tee $l5
        (i32.sub
          (global.get $g4)
          (i32.const 256))))
    (block $B0
      (br_if $B0
        (i32.le_s
          (local.get $p2)
          (local.get $p3)))
      (br_if $B0
        (i32.and
          (local.get $p4)
          (i32.const 73728)))
      (drop
        (call $memset
          (local.get $l5)
          (local.get $p1)
          (select
            (local.tee $p4
              (i32.sub
                (local.get $p2)
                (local.get $p3)))
            (i32.const 256)
            (local.tee $l6
              (i32.lt_u
                (local.get $p4)
                (i32.const 256))))))
      (local.set $p1
        (i32.and
          (local.tee $l7
            (i32.load
              (local.get $p0)))
          (i32.const 32)))
      (block $B1
        (block $B2
          (br_if $B2
            (local.get $l6))
          (local.set $p1
            (i32.eqz
              (local.get $p1)))
          (local.set $p3
            (i32.sub
              (local.get $p2)
              (local.get $p3)))
          (loop $L3
            (block $B4
              (br_if $B4
                (i32.eqz
                  (i32.and
                    (local.get $p1)
                    (i32.const 1))))
              (drop
                (call_indirect $table (type $t18)
                  (local.get $p0)
                  (local.get $l5)
                  (i32.const 256)
                  (i32.load offset=32
                    (local.get $p0))))
              (local.set $l7
                (i32.load
                  (local.get $p0))))
            (local.set $p1
              (i32.eqz
                (local.tee $p2
                  (i32.and
                    (local.get $l7)
                    (i32.const 32)))))
            (br_if $L3
              (i32.gt_u
                (local.tee $p4
                  (i32.add
                    (local.get $p4)
                    (i32.const -256)))
                (i32.const 255))))
          (br_if $B0
            (local.get $p2))
          (local.set $p4
            (i32.and
              (local.get $p3)
              (i32.const 255)))
          (br $B1))
        (br_if $B0
          (local.get $p1)))
      (drop
        (call_indirect $table (type $t18)
          (local.get $p0)
          (local.get $l5)
          (local.get $p4)
          (i32.load offset=32
            (local.get $p0)))))
    (global.set $g4
      (i32.add
        (local.get $l5)
        (i32.const 256))))
  (func $fmt_u (type $t36) (param $p0 i64) (param $p1 i32) (result i32)
    (local $l2 i64) (local $l3 i32) (local $l4 i32) (local $l5 i32)
    (block $B0
      (block $B1
        (br_if $B1
          (i64.ge_u
            (local.get $p0)
            (i64.const 4294967296)))
        (local.set $l2
          (local.get $p0))
        (br $B0))
      (loop $L2
        (i32.store8
          (local.tee $p1
            (i32.add
              (local.get $p1)
              (i32.const -1)))
          (i32.or
            (i32.wrap_i64
              (i64.sub
                (local.get $p0)
                (i64.mul
                  (local.tee $l2
                    (i64.div_u
                      (local.get $p0)
                      (i64.const 10)))
                  (i64.const 10))))
            (i32.const 48)))
        (local.set $l3
          (i64.gt_u
            (local.get $p0)
            (i64.const 42949672959)))
        (local.set $p0
          (local.get $l2))
        (br_if $L2
          (local.get $l3))))
    (block $B3
      (br_if $B3
        (i32.eqz
          (local.tee $l3
            (i32.wrap_i64
              (local.get $l2)))))
      (loop $L4
        (i32.store8
          (local.tee $p1
            (i32.add
              (local.get $p1)
              (i32.const -1)))
          (i32.or
            (i32.sub
              (local.get $l3)
              (i32.mul
                (local.tee $l4
                  (i32.div_u
                    (local.get $l3)
                    (i32.const 10)))
                (i32.const 10)))
            (i32.const 48)))
        (local.set $l5
          (i32.gt_u
            (local.get $l3)
            (i32.const 9)))
        (local.set $l3
          (local.get $l4))
        (br_if $L4
          (local.get $l5))))
    (local.get $p1))
  (func $long_double_not_supported (type $t21)
    (local $l0 i32)
    (drop
      (call $fputs
        (i32.add
          (local.tee $l0
            (i32.const 66384))
          (i32.const 13312))
        (i32.add
          (local.get $l0)
          (i32.const 0))))
    (call $abort)
    (unreachable))
  (func $__math_oflow (type $t37) (param $p0 i32) (result f64)
    (call $__math_xflow
      (local.get $p0)
      (f64.const 0x1p+769 (;=3.10504e+231;))))
  (func $__math_uflow (type $t37) (param $p0 i32) (result f64)
    (call $__math_xflow
      (local.get $p0)
      (f64.const 0x1p-767 (;=1.28823e-231;))))
  (func $__math_xflow (type $t38) (param $p0 i32) (param $p1 f64) (result f64)
    (f64.mul
      (select
        (f64.neg
          (local.get $p1))
        (local.get $p1)
        (local.get $p0))
      (local.get $p1)))
  (func $__math_divzero (type $t37) (param $p0 i32) (result f64)
    (select
      (f64.const -inf (;=-inf;))
      (f64.const inf (;=inf;))
      (local.get $p0)))
  (func $__math_invalid (type $t31) (param $p0 f64) (result f64)
    (f64.div
      (local.tee $p0
        (f64.sub
          (local.get $p0)
          (local.get $p0)))
      (local.get $p0)))
  (func $__rem_pio2 (type $t39) (param $p0 f64) (param $p1 i32) (result i32)
    (local $l2 i32) (local $l3 i64) (local $l4 i32) (local $l5 i32) (local $l6 f64) (local $l7 f64) (local $l8 f64) (local $l9 i32) (local $l10 f64) (local $l11 i32)
    (global.set $g4
      (local.tee $l2
        (i32.sub
          (global.get $g4)
          (i32.const 48))))
    (block $B0
      (block $B1
        (block $B2
          (block $B3
            (br_if $B3
              (i32.gt_u
                (local.tee $l5
                  (i32.and
                    (local.tee $l4
                      (i32.wrap_i64
                        (i64.shr_u
                          (local.tee $l3
                            (i64.reinterpret_f64
                              (local.get $p0)))
                          (i64.const 32))))
                    (i32.const 2147483647)))
                (i32.const 1074752122)))
            (br_if $B2
              (i32.eq
                (i32.and
                  (local.get $l4)
                  (i32.const 1048575))
                (i32.const 598523)))
            (block $B4
              (br_if $B4
                (i32.gt_u
                  (local.get $l5)
                  (i32.const 1073928572)))
              (block $B5
                (br_if $B5
                  (i64.lt_s
                    (local.get $l3)
                    (i64.const 0)))
                (f64.store
                  (local.get $p1)
                  (local.tee $l6
                    (f64.add
                      (local.tee $p0
                        (f64.add
                          (local.get $p0)
                          (f64.const -0x1.921fb544p+0 (;=-1.5708;))))
                      (f64.const -0x1.0b4611a626331p-34 (;=-6.0771e-11;)))))
                (f64.store offset=8
                  (local.get $p1)
                  (f64.add
                    (f64.sub
                      (local.get $p0)
                      (local.get $l6))
                    (f64.const -0x1.0b4611a626331p-34 (;=-6.0771e-11;))))
                (local.set $l4
                  (i32.const 1))
                (br $B0))
              (f64.store
                (local.get $p1)
                (local.tee $l6
                  (f64.add
                    (local.tee $p0
                      (f64.add
                        (local.get $p0)
                        (f64.const 0x1.921fb544p+0 (;=1.5708;))))
                    (f64.const 0x1.0b4611a626331p-34 (;=6.0771e-11;)))))
              (f64.store offset=8
                (local.get $p1)
                (f64.add
                  (f64.sub
                    (local.get $p0)
                    (local.get $l6))
                  (f64.const 0x1.0b4611a626331p-34 (;=6.0771e-11;))))
              (local.set $l4
                (i32.const -1))
              (br $B0))
            (block $B6
              (br_if $B6
                (i64.lt_s
                  (local.get $l3)
                  (i64.const 0)))
              (f64.store
                (local.get $p1)
                (local.tee $l6
                  (f64.add
                    (local.tee $p0
                      (f64.add
                        (local.get $p0)
                        (f64.const -0x1.921fb544p+1 (;=-3.14159;))))
                    (f64.const -0x1.0b4611a626331p-33 (;=-1.21542e-10;)))))
              (f64.store offset=8
                (local.get $p1)
                (f64.add
                  (f64.sub
                    (local.get $p0)
                    (local.get $l6))
                  (f64.const -0x1.0b4611a626331p-33 (;=-1.21542e-10;))))
              (local.set $l4
                (i32.const 2))
              (br $B0))
            (f64.store
              (local.get $p1)
              (local.tee $l6
                (f64.add
                  (local.tee $p0
                    (f64.add
                      (local.get $p0)
                      (f64.const 0x1.921fb544p+1 (;=3.14159;))))
                  (f64.const 0x1.0b4611a626331p-33 (;=1.21542e-10;)))))
            (f64.store offset=8
              (local.get $p1)
              (f64.add
                (f64.sub
                  (local.get $p0)
                  (local.get $l6))
                (f64.const 0x1.0b4611a626331p-33 (;=1.21542e-10;))))
            (local.set $l4
              (i32.const -2))
            (br $B0))
          (block $B7
            (br_if $B7
              (i32.gt_u
                (local.get $l5)
                (i32.const 1075594811)))
            (block $B8
              (br_if $B8
                (i32.gt_u
                  (local.get $l5)
                  (i32.const 1075183036)))
              (br_if $B2
                (i32.eq
                  (local.get $l5)
                  (i32.const 1074977148)))
              (block $B9
                (br_if $B9
                  (i64.lt_s
                    (local.get $l3)
                    (i64.const 0)))
                (f64.store
                  (local.get $p1)
                  (local.tee $l6
                    (f64.add
                      (local.tee $p0
                        (f64.add
                          (local.get $p0)
                          (f64.const -0x1.2d97c7f3p+2 (;=-4.71239;))))
                      (f64.const -0x1.90e91a79394cap-33 (;=-1.82313e-10;)))))
                (f64.store offset=8
                  (local.get $p1)
                  (f64.add
                    (f64.sub
                      (local.get $p0)
                      (local.get $l6))
                    (f64.const -0x1.90e91a79394cap-33 (;=-1.82313e-10;))))
                (local.set $l4
                  (i32.const 3))
                (br $B0))
              (f64.store
                (local.get $p1)
                (local.tee $l6
                  (f64.add
                    (local.tee $p0
                      (f64.add
                        (local.get $p0)
                        (f64.const 0x1.2d97c7f3p+2 (;=4.71239;))))
                    (f64.const 0x1.90e91a79394cap-33 (;=1.82313e-10;)))))
              (f64.store offset=8
                (local.get $p1)
                (f64.add
                  (f64.sub
                    (local.get $p0)
                    (local.get $l6))
                  (f64.const 0x1.90e91a79394cap-33 (;=1.82313e-10;))))
              (local.set $l4
                (i32.const -3))
              (br $B0))
            (br_if $B2
              (i32.eq
                (local.get $l5)
                (i32.const 1075388923)))
            (block $B10
              (br_if $B10
                (i64.lt_s
                  (local.get $l3)
                  (i64.const 0)))
              (f64.store
                (local.get $p1)
                (local.tee $l6
                  (f64.add
                    (local.tee $p0
                      (f64.add
                        (local.get $p0)
                        (f64.const -0x1.921fb544p+2 (;=-6.28319;))))
                    (f64.const -0x1.0b4611a626331p-32 (;=-2.43084e-10;)))))
              (f64.store offset=8
                (local.get $p1)
                (f64.add
                  (f64.sub
                    (local.get $p0)
                    (local.get $l6))
                  (f64.const -0x1.0b4611a626331p-32 (;=-2.43084e-10;))))
              (local.set $l4
                (i32.const 4))
              (br $B0))
            (f64.store
              (local.get $p1)
              (local.tee $l6
                (f64.add
                  (local.tee $p0
                    (f64.add
                      (local.get $p0)
                      (f64.const 0x1.921fb544p+2 (;=6.28319;))))
                  (f64.const 0x1.0b4611a626331p-32 (;=2.43084e-10;)))))
            (f64.store offset=8
              (local.get $p1)
              (f64.add
                (f64.sub
                  (local.get $p0)
                  (local.get $l6))
                (f64.const 0x1.0b4611a626331p-32 (;=2.43084e-10;))))
            (local.set $l4
              (i32.const -4))
            (br $B0))
          (br_if $B1
            (i32.gt_u
              (local.get $l5)
              (i32.const 1094263290))))
        (f64.store
          (local.get $p1)
          (local.tee $p0
            (f64.sub
              (local.tee $l7
                (f64.add
                  (local.get $p0)
                  (f64.mul
                    (local.tee $l6
                      (f64.add
                        (f64.add
                          (f64.mul
                            (local.get $p0)
                            (f64.const 0x1.45f306dc9c883p-1 (;=0.63662;)))
                          (f64.const 0x1.8p+52 (;=6.7554e+15;)))
                        (f64.const -0x1.8p+52 (;=-6.7554e+15;))))
                    (f64.const -0x1.921fb544p+0 (;=-1.5708;)))))
              (local.tee $l8
                (f64.mul
                  (local.get $l6)
                  (f64.const 0x1.0b4611a626331p-34 (;=6.0771e-11;)))))))
        (local.set $l5
          (i32.lt_s
            (i32.sub
              (local.tee $l9
                (i32.shr_u
                  (local.get $l5)
                  (i32.const 20)))
              (i32.and
                (i32.wrap_i64
                  (i64.shr_u
                    (i64.reinterpret_f64
                      (local.get $p0))
                    (i64.const 52)))
                (i32.const 2047)))
            (i32.const 17)))
        (block $B11
          (block $B12
            (br_if $B12
              (i32.eqz
                (f64.lt
                  (f64.abs
                    (local.get $l6))
                  (f64.const 0x1p+31 (;=2.14748e+09;)))))
            (local.set $l4
              (i32.trunc_f64_s
                (local.get $l6)))
            (br $B11))
          (local.set $l4
            (i32.const -2147483648)))
        (block $B13
          (br_if $B13
            (local.get $l5))
          (f64.store
            (local.get $p1)
            (local.tee $p0
              (f64.sub
                (local.tee $l10
                  (f64.sub
                    (local.get $l7)
                    (local.tee $p0
                      (f64.mul
                        (local.get $l6)
                        (f64.const 0x1.0b4611a6p-34 (;=6.0771e-11;))))))
                (local.tee $l8
                  (f64.sub
                    (f64.mul
                      (local.get $l6)
                      (f64.const 0x1.3198a2e037073p-69 (;=2.02227e-21;)))
                    (f64.sub
                      (f64.sub
                        (local.get $l7)
                        (local.get $l10))
                      (local.get $p0)))))))
          (block $B14
            (br_if $B14
              (i32.ge_s
                (i32.sub
                  (local.get $l9)
                  (i32.and
                    (i32.wrap_i64
                      (i64.shr_u
                        (i64.reinterpret_f64
                          (local.get $p0))
                        (i64.const 52)))
                    (i32.const 2047)))
                (i32.const 50)))
            (local.set $l7
              (local.get $l10))
            (br $B13))
          (f64.store
            (local.get $p1)
            (local.tee $p0
              (f64.sub
                (local.tee $l7
                  (f64.sub
                    (local.get $l10)
                    (local.tee $p0
                      (f64.mul
                        (local.get $l6)
                        (f64.const 0x1.3198a2ep-69 (;=2.02227e-21;))))))
                (local.tee $l8
                  (f64.sub
                    (f64.mul
                      (local.get $l6)
                      (f64.const 0x1.b839a252049c1p-104 (;=8.47843e-32;)))
                    (f64.sub
                      (f64.sub
                        (local.get $l10)
                        (local.get $l7))
                      (local.get $p0))))))))
        (f64.store offset=8
          (local.get $p1)
          (f64.sub
            (f64.sub
              (local.get $l7)
              (local.get $p0))
            (local.get $l8)))
        (br $B0))
      (block $B15
        (br_if $B15
          (i32.lt_u
            (local.get $l5)
            (i32.const 2146435072)))
        (f64.store
          (local.get $p1)
          (local.tee $p0
            (f64.sub
              (local.get $p0)
              (local.get $p0))))
        (f64.store offset=8
          (local.get $p1)
          (local.get $p0))
        (local.set $l4
          (i32.const 0))
        (br $B0))
      (local.set $p0
        (f64.reinterpret_i64
          (i64.or
            (i64.and
              (local.get $l3)
              (i64.const 4503599627370495))
            (i64.const 4710765210229538816))))
      (local.set $l4
        (i32.const 0))
      (loop $L16
        (local.set $l4
          (i32.add
            (i32.add
              (local.get $l2)
              (i32.const 16))
            (i32.shl
              (local.tee $l9
                (local.get $l4))
              (i32.const 3))))
        (block $B17
          (block $B18
            (br_if $B18
              (i32.eqz
                (f64.lt
                  (f64.abs
                    (local.get $p0))
                  (f64.const 0x1p+31 (;=2.14748e+09;)))))
            (local.set $l11
              (i32.trunc_f64_s
                (local.get $p0)))
            (br $B17))
          (local.set $l11
            (i32.const -2147483648)))
        (f64.store
          (local.get $l4)
          (local.tee $l6
            (f64.convert_i32_s
              (local.get $l11))))
        (local.set $p0
          (f64.mul
            (f64.sub
              (local.get $p0)
              (local.get $l6))
            (f64.const 0x1p+24 (;=1.67772e+07;))))
        (local.set $l4
          (i32.const 1))
        (br_if $L16
          (i32.eqz
            (local.get $l9))))
      (f64.store offset=32
        (local.get $l2)
        (local.get $p0))
      (block $B19
        (block $B20
          (br_if $B20
            (f64.eq
              (local.get $p0)
              (f64.const 0x0p+0 (;=0;))))
          (local.set $l9
            (i32.const 2))
          (br $B19))
        (local.set $l4
          (i32.or
            (i32.add
              (local.get $l2)
              (i32.const 16))
            (i32.const 8)))
        (local.set $l9
          (i32.const 2))
        (loop $L21
          (local.set $l9
            (i32.add
              (local.get $l9)
              (i32.const -1)))
          (local.set $p0
            (f64.load
              (local.get $l4)))
          (local.set $l4
            (i32.add
              (local.get $l4)
              (i32.const -8)))
          (br_if $L21
            (f64.eq
              (local.get $p0)
              (f64.const 0x0p+0 (;=0;))))))
      (local.set $l4
        (call $__rem_pio2_large
          (i32.add
            (local.get $l2)
            (i32.const 16))
          (local.get $l2)
          (i32.add
            (i32.shr_u
              (local.get $l5)
              (i32.const 20))
            (i32.const -1046))
          (i32.add
            (local.get $l9)
            (i32.const 1))
          (i32.const 1)))
      (local.set $p0
        (f64.load
          (local.get $l2)))
      (block $B22
        (br_if $B22
          (i64.gt_s
            (local.get $l3)
            (i64.const -1)))
        (f64.store
          (local.get $p1)
          (f64.neg
            (local.get $p0)))
        (f64.store offset=8
          (local.get $p1)
          (f64.neg
            (f64.load offset=8
              (local.get $l2))))
        (local.set $l4
          (i32.sub
            (i32.const 0)
            (local.get $l4)))
        (br $B0))
      (f64.store
        (local.get $p1)
        (local.get $p0))
      (i64.store offset=8
        (local.get $p1)
        (i64.load offset=8
          (local.get $l2))))
    (global.set $g4
      (i32.add
        (local.get $l2)
        (i32.const 48)))
    (local.get $l4))
  (func $__rem_pio2_large (type $t25) (param $p0 i32) (param $p1 i32) (param $p2 i32) (param $p3 i32) (param $p4 i32) (result i32)
    (local $l5 i32) (local $l6 i32) (local $l7 i32) (local $l8 i32) (local $l9 i32) (local $l10 i32) (local $l11 i32) (local $l12 i32) (local $l13 f64) (local $l14 i32) (local $l15 i32) (local $l16 i32) (local $l17 i32) (local $l18 i32) (local $l19 i32) (local $l20 i32) (local $l21 f64) (local $l22 i32) (local $l23 i32) (local $l24 i32) (local $l25 f64) (local $l26 f64)
    (global.set $g4
      (local.tee $l5
        (i32.sub
          (global.get $g4)
          (i32.const 560))))
    (local.set $l6
      (i32.const 0))
    (local.set $l9
      (i32.add
        (local.get $p2)
        (i32.mul
          (local.tee $l8
            (select
              (local.tee $l7
                (i32.div_s
                  (i32.add
                    (local.get $p2)
                    (i32.const -3))
                  (i32.const 24)))
              (i32.const 0)
              (i32.gt_s
                (local.get $l7)
                (i32.const 0))))
          (i32.const -24))))
    (block $B0
      (br_if $B0
        (i32.lt_s
          (i32.add
            (local.tee $l10
              (i32.load
                (i32.add
                  (i32.add
                    (i32.const 66384)
                    (i32.const 13472))
                  (i32.shl
                    (local.get $p4)
                    (i32.const 2)))))
            (local.tee $p2
              (i32.add
                (local.get $p3)
                (i32.const -1))))
          (i32.const 0)))
      (local.set $l11
        (i32.add
          (i32.add
            (i32.shl
              (i32.sub
                (local.get $l8)
                (local.get $p3))
              (i32.const 2))
            (i32.add
              (i32.const 66384)
              (i32.const 13488)))
          (i32.const 4)))
      (local.set $l12
        (i32.add
          (local.get $l10)
          (local.get $p3)))
      (local.set $p2
        (i32.sub
          (local.get $l8)
          (local.get $p2)))
      (local.set $l7
        (i32.add
          (local.get $l5)
          (i32.const 320)))
      (loop $L1
        (block $B2
          (block $B3
            (br_if $B3
              (i32.ge_s
                (local.get $p2)
                (i32.const 0)))
            (local.set $l13
              (f64.const 0x0p+0 (;=0;)))
            (br $B2))
          (local.set $l13
            (f64.convert_i32_s
              (i32.load
                (local.get $l11)))))
        (f64.store
          (local.get $l7)
          (local.get $l13))
        (local.set $l7
          (i32.add
            (local.get $l7)
            (i32.const 8)))
        (local.set $l11
          (i32.add
            (local.get $l11)
            (i32.const 4)))
        (local.set $p2
          (i32.add
            (local.get $p2)
            (i32.const 1)))
        (br_if $L1
          (local.tee $l12
            (i32.add
              (local.get $l12)
              (i32.const -1))))))
    (local.set $l14
      (i32.add
        (local.get $l9)
        (i32.const -24)))
    (local.set $l12
      (i32.add
        (i32.add
          (i32.shl
            (local.get $p3)
            (i32.const 3))
          (i32.add
            (local.get $l5)
            (i32.const 320)))
        (i32.const -8)))
    (local.set $l15
      (i32.lt_s
        (local.get $p3)
        (i32.const 1)))
    (loop $L4
      (local.set $l13
        (f64.const 0x0p+0 (;=0;)))
      (block $B5
        (br_if $B5
          (local.get $l15))
        (local.set $p2
          (local.get $p0))
        (local.set $l11
          (local.get $p3))
        (local.set $l7
          (local.get $l12))
        (loop $L6
          (local.set $l13
            (f64.add
              (local.get $l13)
              (f64.mul
                (f64.load
                  (local.get $p2))
                (f64.load
                  (local.get $l7)))))
          (local.set $p2
            (i32.add
              (local.get $p2)
              (i32.const 8)))
          (local.set $l7
            (i32.add
              (local.get $l7)
              (i32.const -8)))
          (br_if $L6
            (local.tee $l11
              (i32.add
                (local.get $l11)
                (i32.const -1))))))
      (f64.store
        (i32.add
          (local.get $l5)
          (i32.shl
            (local.get $l6)
            (i32.const 3)))
        (local.get $l13))
      (local.set $l12
        (i32.add
          (local.get $l12)
          (i32.const 8)))
      (local.set $p2
        (i32.lt_s
          (local.get $l6)
          (local.get $l10)))
      (local.set $l6
        (i32.add
          (local.get $l6)
          (i32.const 1)))
      (br_if $L4
        (local.get $p2)))
    (local.set $l16
      (i32.sub
        (i32.const 23)
        (local.get $l14)))
    (local.set $l17
      (i32.sub
        (i32.const 24)
        (local.get $l14)))
    (local.set $l18
      (i32.add
        (i32.add
          (i32.shl
            (local.get $l10)
            (i32.const 2))
          (i32.add
            (local.get $l5)
            (i32.const 480)))
        (i32.const -4)))
    (local.set $l19
      (i32.add
        (i32.add
          (local.get $l5)
          (i32.const 480))
        (i32.const -4)))
    (local.set $l20
      (i32.add
        (local.get $l5)
        (i32.const -8)))
    (local.set $p2
      (local.get $l10))
    (block $B7
      (loop $L8
        (local.set $l13
          (f64.load
            (i32.add
              (local.get $l5)
              (local.tee $l7
                (i32.shl
                  (local.get $p2)
                  (i32.const 3))))))
        (block $B9
          (br_if $B9
            (local.tee $l15
              (i32.lt_s
                (local.get $p2)
                (i32.const 1))))
          (local.set $l6
            (i32.add
              (local.get $p2)
              (i32.const 1)))
          (local.set $l7
            (i32.add
              (local.get $l20)
              (local.get $l7)))
          (local.set $l11
            (i32.add
              (local.get $l5)
              (i32.const 480)))
          (loop $L10
            (block $B11
              (block $B12
                (br_if $B12
                  (i32.eqz
                    (f64.lt
                      (f64.abs
                        (local.tee $l21
                          (f64.mul
                            (local.get $l13)
                            (f64.const 0x1p-24 (;=5.96046e-08;)))))
                      (f64.const 0x1p+31 (;=2.14748e+09;)))))
                (local.set $l12
                  (i32.trunc_f64_s
                    (local.get $l21)))
                (br $B11))
              (local.set $l12
                (i32.const -2147483648)))
            (block $B13
              (block $B14
                (br_if $B14
                  (i32.eqz
                    (f64.lt
                      (f64.abs
                        (local.tee $l13
                          (f64.add
                            (local.get $l13)
                            (f64.mul
                              (local.tee $l21
                                (f64.convert_i32_s
                                  (local.get $l12)))
                              (f64.const -0x1p+24 (;=-1.67772e+07;))))))
                      (f64.const 0x1p+31 (;=2.14748e+09;)))))
                (local.set $l12
                  (i32.trunc_f64_s
                    (local.get $l13)))
                (br $B13))
              (local.set $l12
                (i32.const -2147483648)))
            (i32.store
              (local.get $l11)
              (local.get $l12))
            (local.set $l11
              (i32.add
                (local.get $l11)
                (i32.const 4)))
            (local.set $l13
              (f64.add
                (f64.load
                  (local.get $l7))
                (local.get $l21)))
            (local.set $l7
              (i32.add
                (local.get $l7)
                (i32.const -8)))
            (br_if $L10
              (i32.gt_s
                (local.tee $l6
                  (i32.add
                    (local.get $l6)
                    (i32.const -1)))
                (i32.const 1)))))
        (block $B15
          (block $B16
            (br_if $B16
              (i32.eqz
                (f64.lt
                  (f64.abs
                    (local.tee $l13
                      (f64.add
                        (local.tee $l13
                          (call $scalbn
                            (local.get $l13)
                            (local.get $l14)))
                        (f64.mul
                          (call $floor
                            (f64.mul
                              (local.get $l13)
                              (f64.const 0x1p-3 (;=0.125;))))
                          (f64.const -0x1p+3 (;=-8;))))))
                  (f64.const 0x1p+31 (;=2.14748e+09;)))))
            (local.set $l22
              (i32.trunc_f64_s
                (local.get $l13)))
            (br $B15))
          (local.set $l22
            (i32.const -2147483648)))
        (local.set $l13
          (f64.sub
            (local.get $l13)
            (f64.convert_i32_s
              (local.get $l22))))
        (block $B17
          (block $B18
            (block $B19
              (block $B20
                (block $B21
                  (br_if $B21
                    (local.tee $l23
                      (i32.lt_s
                        (local.get $l14)
                        (i32.const 1))))
                  (i32.store
                    (local.tee $l7
                      (i32.add
                        (i32.add
                          (i32.shl
                            (local.get $p2)
                            (i32.const 2))
                          (i32.add
                            (local.get $l5)
                            (i32.const 480)))
                        (i32.const -4)))
                    (local.tee $l11
                      (i32.sub
                        (local.tee $l7
                          (i32.load
                            (local.get $l7)))
                        (i32.shl
                          (local.tee $l7
                            (i32.shr_s
                              (local.get $l7)
                              (local.get $l17)))
                          (local.get $l17)))))
                  (local.set $l24
                    (i32.shr_s
                      (local.get $l11)
                      (local.get $l16)))
                  (local.set $l22
                    (i32.add
                      (local.get $l7)
                      (local.get $l22)))
                  (br $B20))
                (br_if $B19
                  (local.get $l14))
                (local.set $l24
                  (i32.shr_s
                    (i32.load
                      (i32.add
                        (i32.add
                          (i32.shl
                            (local.get $p2)
                            (i32.const 2))
                          (i32.add
                            (local.get $l5)
                            (i32.const 480)))
                        (i32.const -4)))
                    (i32.const 23))))
              (br_if $B17
                (i32.lt_s
                  (local.get $l24)
                  (i32.const 1)))
              (br $B18))
            (local.set $l24
              (i32.const 2))
            (br_if $B18
              (i32.eqz
                (i32.xor
                  (f64.ge
                    (local.get $l13)
                    (f64.const 0x1p-1 (;=0.5;)))
                  (i32.const 1))))
            (local.set $l24
              (i32.const 0))
            (br $B17))
          (block $B22
            (block $B23
              (br_if $B23
                (i32.eqz
                  (local.get $l15)))
              (local.set $l15
                (i32.const 0))
              (br $B22))
            (local.set $l15
              (i32.const 0))
            (local.set $l7
              (i32.add
                (local.get $l5)
                (i32.const 480)))
            (local.set $l12
              (local.get $p2))
            (loop $L24
              (local.set $l11
                (i32.load
                  (local.get $l7)))
              (local.set $l6
                (i32.const 16777215))
              (block $B25
                (block $B26
                  (block $B27
                    (br_if $B27
                      (local.get $l15))
                    (br_if $B26
                      (i32.eqz
                        (local.get $l11)))
                    (local.set $l15
                      (i32.const 1))
                    (local.set $l6
                      (i32.const 16777216)))
                  (i32.store
                    (local.get $l7)
                    (i32.sub
                      (local.get $l6)
                      (local.get $l11)))
                  (br $B25))
                (local.set $l15
                  (i32.const 0)))
              (local.set $l7
                (i32.add
                  (local.get $l7)
                  (i32.const 4)))
              (br_if $L24
                (local.tee $l12
                  (i32.add
                    (local.get $l12)
                    (i32.const -1))))))
          (block $B28
            (br_if $B28
              (local.get $l23))
            (br_if $B28
              (i32.gt_u
                (local.tee $l7
                  (i32.add
                    (local.get $l14)
                    (i32.const -1)))
                (i32.const 1)))
            (block $B29
              (block $B30
                (br_table $B30 $B29 $B30
                  (local.get $l7)))
              (i32.store
                (local.tee $l7
                  (i32.add
                    (i32.add
                      (i32.shl
                        (local.get $p2)
                        (i32.const 2))
                      (i32.add
                        (local.get $l5)
                        (i32.const 480)))
                    (i32.const -4)))
                (i32.and
                  (i32.load
                    (local.get $l7))
                  (i32.const 8388607)))
              (br $B28))
            (i32.store
              (local.tee $l7
                (i32.add
                  (i32.add
                    (i32.shl
                      (local.get $p2)
                      (i32.const 2))
                    (i32.add
                      (local.get $l5)
                      (i32.const 480)))
                  (i32.const -4)))
              (i32.and
                (i32.load
                  (local.get $l7))
                (i32.const 4194303))))
          (local.set $l22
            (i32.add
              (local.get $l22)
              (i32.const 1)))
          (br_if $B17
            (i32.ne
              (local.get $l24)
              (i32.const 2)))
          (local.set $l13
            (f64.sub
              (f64.const 0x1p+0 (;=1;))
              (local.get $l13)))
          (local.set $l24
            (i32.const 2))
          (br_if $B17
            (i32.eqz
              (local.get $l15)))
          (local.set $l13
            (f64.sub
              (local.get $l13)
              (call $scalbn
                (f64.const 0x1p+0 (;=1;))
                (local.get $l14)))))
        (block $B31
          (br_if $B31
            (f64.ne
              (local.get $l13)
              (f64.const 0x0p+0 (;=0;))))
          (block $B32
            (br_if $B32
              (i32.le_s
                (local.get $p2)
                (local.get $l10)))
            (local.set $l7
              (i32.add
                (local.get $l19)
                (i32.shl
                  (local.get $p2)
                  (i32.const 2))))
            (local.set $l11
              (i32.const 0))
            (local.set $l6
              (local.get $p2))
            (loop $L33
              (local.set $l11
                (i32.or
                  (i32.load
                    (local.get $l7))
                  (local.get $l11)))
              (local.set $l7
                (i32.add
                  (local.get $l7)
                  (i32.const -4)))
              (br_if $L33
                (i32.gt_s
                  (local.tee $l6
                    (i32.add
                      (local.get $l6)
                      (i32.const -1)))
                  (local.get $l10))))
            (br_if $B32
              (i32.eqz
                (local.get $l11)))
            (local.set $l7
              (i32.add
                (i32.add
                  (i32.add
                    (local.get $l5)
                    (i32.const 480))
                  (i32.shl
                    (local.get $p2)
                    (i32.const 2)))
                (i32.const -4)))
            (local.set $l9
              (local.get $l14))
            (loop $L34
              (local.set $p2
                (i32.add
                  (local.get $p2)
                  (i32.const -1)))
              (local.set $l9
                (i32.add
                  (local.get $l9)
                  (i32.const -24)))
              (local.set $l11
                (i32.load
                  (local.get $l7)))
              (local.set $l7
                (i32.add
                  (local.get $l7)
                  (i32.const -4)))
              (br_if $L34
                (i32.eqz
                  (local.get $l11)))
              (br $B7)))
          (local.set $l7
            (local.get $l18))
          (local.set $l12
            (local.get $p2))
          (loop $L35
            (local.set $l12
              (i32.add
                (local.get $l12)
                (i32.const 1)))
            (local.set $l11
              (i32.load
                (local.get $l7)))
            (local.set $l7
              (i32.add
                (local.get $l7)
                (i32.const -4)))
            (br_if $L35
              (i32.eqz
                (local.get $l11))))
          (local.set $l15
            (i32.add
              (i32.add
                (local.get $l5)
                (i32.const 320))
              (i32.shl
                (i32.add
                  (local.get $p3)
                  (local.get $p2))
                (i32.const 3))))
          (loop $L36
            (f64.store
              (i32.add
                (i32.add
                  (local.get $l5)
                  (i32.const 320))
                (i32.shl
                  (i32.add
                    (local.get $p2)
                    (local.get $p3))
                  (i32.const 3)))
              (f64.convert_i32_s
                (i32.load
                  (i32.add
                    (i32.add
                      (i32.const 66384)
                      (i32.const 13488))
                    (i32.shl
                      (i32.add
                        (local.tee $l6
                          (i32.add
                            (local.get $p2)
                            (i32.const 1)))
                        (local.get $l8))
                      (i32.const 2))))))
            (local.set $l13
              (f64.const 0x0p+0 (;=0;)))
            (block $B37
              (br_if $B37
                (i32.lt_s
                  (local.get $p3)
                  (i32.const 1)))
              (local.set $p2
                (local.get $p0))
              (local.set $l7
                (local.get $l15))
              (local.set $l11
                (local.get $p3))
              (loop $L38
                (local.set $l13
                  (f64.add
                    (local.get $l13)
                    (f64.mul
                      (f64.load
                        (local.get $p2))
                      (f64.load
                        (local.get $l7)))))
                (local.set $p2
                  (i32.add
                    (local.get $p2)
                    (i32.const 8)))
                (local.set $l7
                  (i32.add
                    (local.get $l7)
                    (i32.const -8)))
                (br_if $L38
                  (local.tee $l11
                    (i32.add
                      (local.get $l11)
                      (i32.const -1))))))
            (f64.store
              (i32.add
                (local.get $l5)
                (i32.shl
                  (local.get $l6)
                  (i32.const 3)))
              (local.get $l13))
            (local.set $l15
              (i32.add
                (local.get $l15)
                (i32.const 8)))
            (local.set $p2
              (local.get $l6))
            (br_if $L36
              (i32.lt_s
                (local.get $l6)
                (local.get $l12))))
          (local.set $p2
            (local.get $l12))
          (br $L8)))
      (block $B39
        (block $B40
          (br_if $B40
            (i32.xor
              (f64.ge
                (local.tee $l13
                  (call $scalbn
                    (local.get $l13)
                    (i32.sub
                      (i32.const 0)
                      (local.get $l14))))
                (f64.const 0x1p+24 (;=1.67772e+07;)))
              (i32.const 1)))
          (local.set $l11
            (i32.shl
              (local.get $p2)
              (i32.const 2)))
          (block $B41
            (block $B42
              (br_if $B42
                (i32.eqz
                  (f64.lt
                    (f64.abs
                      (local.tee $l21
                        (f64.mul
                          (local.get $l13)
                          (f64.const 0x1p-24 (;=5.96046e-08;)))))
                    (f64.const 0x1p+31 (;=2.14748e+09;)))))
              (local.set $l7
                (i32.trunc_f64_s
                  (local.get $l21)))
              (br $B41))
            (local.set $l7
              (i32.const -2147483648)))
          (local.set $l11
            (i32.add
              (i32.add
                (local.get $l5)
                (i32.const 480))
              (local.get $l11)))
          (block $B43
            (block $B44
              (br_if $B44
                (i32.eqz
                  (f64.lt
                    (f64.abs
                      (local.tee $l13
                        (f64.add
                          (local.get $l13)
                          (f64.mul
                            (f64.convert_i32_s
                              (local.get $l7))
                            (f64.const -0x1p+24 (;=-1.67772e+07;))))))
                    (f64.const 0x1p+31 (;=2.14748e+09;)))))
              (local.set $l6
                (i32.trunc_f64_s
                  (local.get $l13)))
              (br $B43))
            (local.set $l6
              (i32.const -2147483648)))
          (i32.store
            (local.get $l11)
            (local.get $l6))
          (local.set $p2
            (i32.add
              (local.get $p2)
              (i32.const 1)))
          (br $B39))
        (block $B45
          (block $B46
            (br_if $B46
              (i32.eqz
                (f64.lt
                  (f64.abs
                    (local.get $l13))
                  (f64.const 0x1p+31 (;=2.14748e+09;)))))
            (local.set $l7
              (i32.trunc_f64_s
                (local.get $l13)))
            (br $B45))
          (local.set $l7
            (i32.const -2147483648)))
        (local.set $l9
          (local.get $l14)))
      (i32.store
        (i32.add
          (i32.add
            (local.get $l5)
            (i32.const 480))
          (i32.shl
            (local.get $p2)
            (i32.const 2)))
        (local.get $l7)))
    (local.set $l13
      (call $scalbn
        (f64.const 0x1p+0 (;=1;))
        (local.get $l9)))
    (block $B47
      (br_if $B47
        (i32.lt_s
          (local.get $p2)
          (i32.const 0)))
      (local.set $l6
        (i32.add
          (local.get $p2)
          (i32.const 1)))
      (local.set $l7
        (i32.add
          (i32.add
            (local.get $l5)
            (i32.const 480))
          (i32.shl
            (local.get $p2)
            (i32.const 2))))
      (local.set $l11
        (i32.add
          (local.get $l5)
          (i32.shl
            (local.get $p2)
            (i32.const 3))))
      (loop $L48
        (f64.store
          (local.get $l11)
          (f64.mul
            (local.get $l13)
            (f64.convert_i32_s
              (i32.load
                (local.get $l7)))))
        (local.set $l7
          (i32.add
            (local.get $l7)
            (i32.const -4)))
        (local.set $l11
          (i32.add
            (local.get $l11)
            (i32.const -8)))
        (local.set $l13
          (f64.mul
            (local.get $l13)
            (f64.const 0x1p-24 (;=5.96046e-08;))))
        (br_if $L48
          (i32.gt_s
            (local.tee $l6
              (i32.add
                (local.get $l6)
                (i32.const -1)))
            (i32.const 0))))
      (br_if $B47
        (i32.lt_s
          (local.get $p2)
          (i32.const 0)))
      (local.set $l12
        (i32.add
          (local.get $l5)
          (i32.shl
            (local.get $p2)
            (i32.const 3))))
      (local.set $l7
        (local.get $p2))
      (loop $L49
        (local.set $p3
          (i32.sub
            (local.get $p2)
            (local.tee $l15
              (local.get $l7))))
        (local.set $l13
          (f64.const 0x0p+0 (;=0;)))
        (local.set $l7
          (i32.const 0))
        (local.set $l11
          (i32.const 0))
        (block $B50
          (loop $L51
            (local.set $l13
              (f64.add
                (local.get $l13)
                (f64.mul
                  (f64.load
                    (i32.add
                      (local.get $l12)
                      (local.get $l7)))
                  (f64.load
                    (i32.add
                      (i32.add
                        (i32.const 66384)
                        (i32.const 16256))
                      (local.get $l7))))))
            (br_if $B50
              (i32.ge_s
                (local.get $l11)
                (local.get $l10)))
            (local.set $l7
              (i32.add
                (local.get $l7)
                (i32.const 8)))
            (local.set $l6
              (i32.lt_u
                (local.get $l11)
                (local.get $p3)))
            (local.set $l11
              (i32.add
                (local.get $l11)
                (i32.const 1)))
            (br_if $L51
              (local.get $l6))))
        (f64.store
          (i32.add
            (i32.add
              (local.get $l5)
              (i32.const 160))
            (i32.shl
              (local.get $p3)
              (i32.const 3)))
          (local.get $l13))
        (local.set $l12
          (i32.add
            (local.get $l12)
            (i32.const -8)))
        (local.set $l7
          (i32.add
            (local.get $l15)
            (i32.const -1)))
        (br_if $L49
          (i32.gt_s
            (local.get $l15)
            (i32.const 0)))))
    (block $B52
      (br_if $B52
        (i32.gt_u
          (local.get $p4)
          (i32.const 3)))
      (block $B53
        (block $B54
          (block $B55
            (block $B56
              (br_table $B55 $B54 $B54 $B56 $B55
                (local.get $p4)))
            (local.set $l25
              (f64.const 0x0p+0 (;=0;)))
            (block $B57
              (br_if $B57
                (i32.lt_s
                  (local.get $p2)
                  (i32.const 1)))
              (local.set $l11
                (i32.add
                  (local.get $p2)
                  (i32.const 1)))
              (local.set $l7
                (i32.add
                  (local.tee $l6
                    (i32.add
                      (i32.add
                        (local.get $l5)
                        (i32.const 160))
                      (i32.shl
                        (local.get $p2)
                        (i32.const 3))))
                  (i32.const -8)))
              (local.set $l13
                (f64.load
                  (local.get $l6)))
              (loop $L58
                (f64.store
                  (local.get $l7)
                  (local.tee $l21
                    (f64.add
                      (local.tee $l26
                        (f64.load
                          (local.get $l7)))
                      (local.get $l13))))
                (f64.store
                  (i32.add
                    (local.get $l7)
                    (i32.const 8))
                  (f64.add
                    (local.get $l13)
                    (f64.sub
                      (local.get $l26)
                      (local.get $l21))))
                (local.set $l7
                  (i32.add
                    (local.get $l7)
                    (i32.const -8)))
                (local.set $l13
                  (local.get $l21))
                (br_if $L58
                  (i32.gt_s
                    (local.tee $l11
                      (i32.add
                        (local.get $l11)
                        (i32.const -1)))
                    (i32.const 1))))
              (br_if $B57
                (i32.lt_s
                  (local.get $p2)
                  (i32.const 2)))
              (local.set $l11
                (i32.add
                  (local.get $p2)
                  (i32.const 1)))
              (local.set $l7
                (i32.add
                  (local.tee $l6
                    (i32.add
                      (i32.add
                        (local.get $l5)
                        (i32.const 160))
                      (i32.shl
                        (local.get $p2)
                        (i32.const 3))))
                  (i32.const -8)))
              (local.set $l13
                (f64.load
                  (local.get $l6)))
              (loop $L59
                (f64.store
                  (local.get $l7)
                  (local.tee $l21
                    (f64.add
                      (local.tee $l26
                        (f64.load
                          (local.get $l7)))
                      (local.get $l13))))
                (f64.store
                  (i32.add
                    (local.get $l7)
                    (i32.const 8))
                  (f64.add
                    (local.get $l13)
                    (f64.sub
                      (local.get $l26)
                      (local.get $l21))))
                (local.set $l7
                  (i32.add
                    (local.get $l7)
                    (i32.const -8)))
                (local.set $l13
                  (local.get $l21))
                (br_if $L59
                  (i32.gt_s
                    (local.tee $l11
                      (i32.add
                        (local.get $l11)
                        (i32.const -1)))
                    (i32.const 2))))
              (br_if $B57
                (i32.lt_s
                  (local.get $p2)
                  (i32.const 2)))
              (local.set $l7
                (i32.add
                  (local.get $p2)
                  (i32.const 1)))
              (local.set $p2
                (i32.add
                  (i32.add
                    (local.get $l5)
                    (i32.const 160))
                  (i32.shl
                    (local.get $p2)
                    (i32.const 3))))
              (local.set $l25
                (f64.const 0x0p+0 (;=0;)))
              (loop $L60
                (local.set $l25
                  (f64.add
                    (local.get $l25)
                    (f64.load
                      (local.get $p2))))
                (local.set $p2
                  (i32.add
                    (local.get $p2)
                    (i32.const -8)))
                (br_if $L60
                  (i32.gt_s
                    (local.tee $l7
                      (i32.add
                        (local.get $l7)
                        (i32.const -1)))
                    (i32.const 2)))))
            (local.set $l13
              (f64.load offset=160
                (local.get $l5)))
            (br_if $B53
              (local.get $l24))
            (f64.store
              (local.get $p1)
              (local.get $l13))
            (f64.store offset=16
              (local.get $p1)
              (local.get $l25))
            (i64.store offset=8
              (local.get $p1)
              (i64.load offset=168
                (local.get $l5)))
            (br $B52))
          (block $B61
            (block $B62
              (br_if $B62
                (i32.ge_s
                  (local.get $p2)
                  (i32.const 0)))
              (local.set $l13
                (f64.const 0x0p+0 (;=0;)))
              (br $B61))
            (local.set $l7
              (i32.add
                (local.get $p2)
                (i32.const 1)))
            (local.set $p2
              (i32.add
                (i32.add
                  (local.get $l5)
                  (i32.const 160))
                (i32.shl
                  (local.get $p2)
                  (i32.const 3))))
            (local.set $l13
              (f64.const 0x0p+0 (;=0;)))
            (loop $L63
              (local.set $l13
                (f64.add
                  (local.get $l13)
                  (f64.load
                    (local.get $p2))))
              (local.set $p2
                (i32.add
                  (local.get $p2)
                  (i32.const -8)))
              (br_if $L63
                (i32.gt_s
                  (local.tee $l7
                    (i32.add
                      (local.get $l7)
                      (i32.const -1)))
                  (i32.const 0)))))
          (f64.store
            (local.get $p1)
            (select
              (f64.neg
                (local.get $l13))
              (local.get $l13)
              (local.get $l24)))
          (br $B52))
        (block $B64
          (block $B65
            (br_if $B65
              (i32.ge_s
                (local.get $p2)
                (i32.const 0)))
            (local.set $l13
              (f64.const 0x0p+0 (;=0;)))
            (br $B64))
          (local.set $l11
            (i32.add
              (local.get $p2)
              (i32.const 1)))
          (local.set $l7
            (i32.add
              (i32.add
                (local.get $l5)
                (i32.const 160))
              (i32.shl
                (local.get $p2)
                (i32.const 3))))
          (local.set $l13
            (f64.const 0x0p+0 (;=0;)))
          (loop $L66
            (local.set $l13
              (f64.add
                (local.get $l13)
                (f64.load
                  (local.get $l7))))
            (local.set $l7
              (i32.add
                (local.get $l7)
                (i32.const -8)))
            (br_if $L66
              (i32.gt_s
                (local.tee $l11
                  (i32.add
                    (local.get $l11)
                    (i32.const -1)))
                (i32.const 0)))))
        (f64.store
          (local.get $p1)
          (select
            (f64.neg
              (local.get $l13))
            (local.get $l13)
            (local.get $l24)))
        (local.set $l13
          (f64.sub
            (f64.load offset=160
              (local.get $l5))
            (local.get $l13)))
        (block $B67
          (br_if $B67
            (i32.lt_s
              (local.get $p2)
              (i32.const 1)))
          (local.set $l7
            (i32.or
              (i32.add
                (local.get $l5)
                (i32.const 160))
              (i32.const 8)))
          (loop $L68
            (local.set $l13
              (f64.add
                (local.get $l13)
                (f64.load
                  (local.get $l7))))
            (local.set $l7
              (i32.add
                (local.get $l7)
                (i32.const 8)))
            (br_if $L68
              (local.tee $p2
                (i32.add
                  (local.get $p2)
                  (i32.const -1))))))
        (f64.store offset=8
          (local.get $p1)
          (select
            (f64.neg
              (local.get $l13))
            (local.get $l13)
            (local.get $l24)))
        (br $B52))
      (f64.store
        (local.get $p1)
        (f64.neg
          (local.get $l13)))
      (f64.store offset=16
        (local.get $p1)
        (f64.neg
          (local.get $l25)))
      (f64.store offset=8
        (local.get $p1)
        (f64.neg
          (f64.load offset=168
            (local.get $l5)))))
    (global.set $g4
      (i32.add
        (local.get $l5)
        (i32.const 560)))
    (i32.and
      (local.get $l22)
      (i32.const 7)))
  (func $__sin (type $t40) (param $p0 f64) (param $p1 f64) (param $p2 i32) (result f64)
    (local $l3 f64) (local $l4 f64) (local $l5 f64)
    (local.set $l4
      (f64.add
        (f64.mul
          (f64.mul
            (local.tee $l3
              (f64.mul
                (local.get $p0)
                (local.get $p0)))
            (f64.mul
              (local.get $l3)
              (local.get $l3)))
          (f64.add
            (f64.mul
              (local.get $l3)
              (f64.const 0x1.5d93a5acfd57cp-33 (;=1.58969e-10;)))
            (f64.const -0x1.ae5e68a2b9cebp-26 (;=-2.50508e-08;))))
        (f64.add
          (f64.mul
            (local.get $l3)
            (f64.add
              (f64.mul
                (local.get $l3)
                (f64.const 0x1.71de357b1fe7dp-19 (;=2.75573e-06;)))
              (f64.const -0x1.a01a019c161d5p-13 (;=-0.000198413;))))
          (f64.const 0x1.111111110f8a6p-7 (;=0.00833333;)))))
    (local.set $l5
      (f64.mul
        (local.get $l3)
        (local.get $p0)))
    (block $B0
      (br_if $B0
        (local.get $p2))
      (return
        (f64.add
          (f64.mul
            (local.get $l5)
            (f64.add
              (f64.mul
                (local.get $l3)
                (local.get $l4))
              (f64.const -0x1.5555555555549p-3 (;=-0.166667;))))
          (local.get $p0))))
    (f64.sub
      (local.get $p0)
      (f64.add
        (f64.sub
          (f64.mul
            (local.get $l3)
            (f64.sub
              (f64.mul
                (local.get $p1)
                (f64.const 0x1p-1 (;=0.5;)))
              (f64.mul
                (local.get $l5)
                (local.get $l4))))
          (local.get $p1))
        (f64.mul
          (local.get $l5)
          (f64.const 0x1.5555555555549p-3 (;=0.166667;))))))
  (func $__cos (type $t30) (param $p0 f64) (param $p1 f64) (result f64)
    (local $l2 f64) (local $l3 f64) (local $l4 f64)
    (f64.add
      (local.tee $l4
        (f64.sub
          (f64.const 0x1p+0 (;=1;))
          (local.tee $l3
            (f64.mul
              (local.tee $l2
                (f64.mul
                  (local.get $p0)
                  (local.get $p0)))
              (f64.const 0x1p-1 (;=0.5;))))))
      (f64.add
        (f64.sub
          (f64.sub
            (f64.const 0x1p+0 (;=1;))
            (local.get $l4))
          (local.get $l3))
        (f64.sub
          (f64.mul
            (local.get $l2)
            (f64.add
              (f64.mul
                (local.get $l2)
                (f64.add
                  (f64.mul
                    (local.get $l2)
                    (f64.add
                      (f64.mul
                        (local.get $l2)
                        (f64.const 0x1.a01a019cb159p-16 (;=2.48016e-05;)))
                      (f64.const -0x1.6c16c16c15177p-10 (;=-0.00138889;))))
                  (f64.const 0x1.555555555554cp-5 (;=0.0416667;))))
              (f64.mul
                (f64.mul
                  (local.tee $l3
                    (f64.mul
                      (local.get $l2)
                      (local.get $l2)))
                  (local.get $l3))
                (f64.add
                  (f64.mul
                    (local.get $l2)
                    (f64.add
                      (f64.mul
                        (local.get $l2)
                        (f64.const -0x1.8fae9be8838d4p-37 (;=-1.13596e-11;)))
                      (f64.const 0x1.1ee9ebdb4b1c4p-29 (;=2.08757e-09;))))
                  (f64.const -0x1.27e4f809c52adp-22 (;=-2.75573e-07;))))))
          (f64.mul
            (local.get $p0)
            (local.get $p1))))))
  (func $__tan (type $t40) (param $p0 f64) (param $p1 f64) (param $p2 i32) (result f64)
    (local $l3 i64) (local $l4 i32) (local $l5 i32) (local $l6 f64) (local $l7 f64) (local $l8 f64)
    (block $B0
      (block $B1
        (br_if $B1
          (i32.eqz
            (local.tee $l4
              (i64.lt_u
                (i64.and
                  (local.tee $l3
                    (i64.reinterpret_f64
                      (local.get $p0)))
                  (i64.const 9223372002495037440))
                (i64.const 4604249089280835585)))))
        (br $B0))
      (local.set $p0
        (f64.add
          (f64.sub
            (f64.const 0x1.921fb54442d18p-1 (;=0.785398;))
            (select
              (f64.neg
                (local.get $p0))
              (local.get $p0)
              (local.tee $l5
                (i64.lt_s
                  (local.get $l3)
                  (i64.const 0)))))
          (f64.sub
            (f64.const 0x1.1a62633145c07p-55 (;=3.06162e-17;))
            (select
              (f64.neg
                (local.get $p1))
              (local.get $p1)
              (local.get $l5)))))
      (local.set $l5
        (i32.wrap_i64
          (i64.shr_u
            (local.get $l3)
            (i64.const 63))))
      (local.set $p1
        (f64.const 0x0p+0 (;=0;))))
    (local.set $l8
      (f64.add
        (local.get $p0)
        (local.tee $l6
          (f64.add
            (f64.mul
              (local.tee $l7
                (f64.mul
                  (local.get $p0)
                  (local.tee $l6
                    (f64.mul
                      (local.get $p0)
                      (local.get $p0)))))
              (f64.const 0x1.5555555555563p-2 (;=0.333333;)))
            (f64.add
              (local.get $p1)
              (f64.mul
                (local.get $l6)
                (f64.add
                  (local.get $p1)
                  (f64.mul
                    (local.get $l7)
                    (f64.add
                      (f64.add
                        (f64.mul
                          (local.tee $l8
                            (f64.mul
                              (local.get $l6)
                              (local.get $l6)))
                          (f64.add
                            (f64.mul
                              (local.get $l8)
                              (f64.add
                                (f64.mul
                                  (local.get $l8)
                                  (f64.add
                                    (f64.mul
                                      (local.get $l8)
                                      (f64.add
                                        (f64.mul
                                          (local.get $l8)
                                          (f64.const -0x1.375cbdb605373p-16 (;=-1.85586e-05;)))
                                        (f64.const 0x1.47e88a03792a6p-14 (;=7.81794e-05;))))
                                    (f64.const 0x1.344d8f2f26501p-11 (;=0.000588041;))))
                                (f64.const 0x1.d6d22c9560328p-9 (;=0.00359208;))))
                            (f64.const 0x1.664f48406d637p-6 (;=0.0218695;))))
                        (f64.const 0x1.111111110fe7ap-3 (;=0.133333;)))
                      (f64.mul
                        (local.get $l6)
                        (f64.add
                          (f64.mul
                            (local.get $l8)
                            (f64.add
                              (f64.mul
                                (local.get $l8)
                                (f64.add
                                  (f64.mul
                                    (local.get $l8)
                                    (f64.add
                                      (f64.mul
                                        (local.get $l8)
                                        (f64.add
                                          (f64.mul
                                            (local.get $l8)
                                            (f64.const 0x1.b2a7074bf7ad4p-16 (;=2.59073e-05;)))
                                          (f64.const 0x1.2b80f32f0a7e9p-14 (;=7.14072e-05;))))
                                      (f64.const 0x1.026f71a8d1068p-12 (;=0.000246463;))))
                                  (f64.const 0x1.7dbc8fee08315p-10 (;=0.00145621;))))
                              (f64.const 0x1.226e3e96e8493p-7 (;=0.00886324;))))
                          (f64.const 0x1.ba1ba1bb341fep-5 (;=0.0539683;)))))))))))))
    (block $B2
      (br_if $B2
        (local.get $l4))
      (return
        (select
          (f64.neg
            (local.tee $l8
              (f64.sub
                (local.tee $p1
                  (f64.convert_i32_s
                    (i32.sub
                      (i32.const 1)
                      (i32.shl
                        (local.get $p2)
                        (i32.const 1)))))
                (f64.add
                  (local.tee $l8
                    (f64.add
                      (local.get $p0)
                      (f64.sub
                        (local.get $l6)
                        (f64.div
                          (f64.mul
                            (local.get $l8)
                            (local.get $l8))
                          (f64.add
                            (local.get $l8)
                            (local.get $p1))))))
                  (local.get $l8)))))
          (local.get $l8)
          (local.get $l5))))
    (block $B3
      (br_if $B3
        (i32.eqz
          (local.get $p2)))
      (local.set $l8
        (f64.add
          (f64.mul
            (local.tee $p1
              (f64.div
                (f64.const -0x1p+0 (;=-1;))
                (local.get $l8)))
            (f64.add
              (f64.add
                (f64.mul
                  (local.tee $l7
                    (f64.reinterpret_i64
                      (i64.and
                        (i64.reinterpret_f64
                          (local.get $l8))
                        (i64.const -4294967296))))
                  (local.tee $l8
                    (f64.reinterpret_i64
                      (i64.and
                        (i64.reinterpret_f64
                          (local.get $p1))
                        (i64.const -4294967296)))))
                (f64.const 0x1p+0 (;=1;)))
              (f64.mul
                (f64.sub
                  (local.get $l6)
                  (f64.sub
                    (local.get $l7)
                    (local.get $p0)))
                (local.get $l8))))
          (local.get $l8))))
    (local.get $l8))
  (func $wctomb (type $t26) (param $p0 i32) (param $p1 i32) (result i32)
    (i32.store8
      (local.get $p0)
      (i32.const 0))
    (local.get $p0))
  (func $fputs (type $t26) (param $p0 i32) (param $p1 i32) (result i32)
    (i32.const 0))
  (func $abort (type $t21)
    (call $rts_trap
      (i32.add
        (i32.const 66384)
        (i32.const 16320))
      (i32.const 5))
    (unreachable))
  (func $strerror (type $t19) (param $p0 i32) (result i32)
    (i32.add
      (i32.const 66384)
      (i32.const 16326)))
  (func $link_start (type $t41)
    (call $__wasm_call_ctors)
    (call $rts_start))
  (table $table (export "table") 30 30 funcref)
  (memory $memory (export "memory") 2)
  (global $g0 (mut i32) (i32.const -559038737))
  (global $g1 (mut i64) (i64.const 0))
  (global $g2 (mut i64) (i64.const 0))
  (global $g3 (mut i64) (i64.const 0))
  (global $g4 (mut i32) (i32.const 65536))
  (global $g5 (mut i32) (i32.const 0))
  (global $g6 (mut i32) (i32.const 0))
  (global $g7 (mut i32) (i32.const 0))
  (global $g8 i32 (i32.const 82720))
  (start $link_start)
  (elem $e0 (i32.const 8) func $@digits_dec)
  (elem $e1 (i32.const 7) func $@digits_hex)
  (elem $e2 (i32.const 4) func $anon-func-294.16)
  (elem $e3 (i32.const 3) func $anon-func-295.16)
  (elem $e4 (i32.const 0) func $anon-func-332.15)
  (elem $e5 (i32.const 1) func $anon-func-330.15)
  (elem $e6 (i32.const 2) func $enqueue)
  (elem $e7 (i32.const 5) func $fail)
  (elem $e8 (i32.const 6) func $fulfill)
  (elem $e9 (i32.const 9) func $next)
  (elem $e10 (i32.const 10) func $anon-func-93.3)
  (elem $e11 (i32.const 11) func $anon-func-91.3)
  (elem $e12 (i32.const 12) func $next.1)
  (elem $e13 (i32.const 13) func $anon-func-80.3)
  (elem $e14 (i32.const 14) func $anon-func-78.3)
  (elem $e15 (i32.const 15) func $next.2)
  (elem $e16 (i32.const 16) func $anon-func-72.3)
  (elem $e17 (i32.const 17) func $next.3)
  (elem $e18 (i32.const 18) func $anon-func-66.3)
  (elem $e19 (i32.const 19) func $next.4)
  (elem $e20 (i32.const 20) func $anon-func-60.3)
  (elem $e21 (i32.const 21) func $next.5)
  (elem $e22 (i32.const 22) func $anon-func-54.3)
  (elem $e23 (i32.const 23) func $anon-func-52.3)
  (elem $e24 (i32.const 24) func $anon-func-50.3)
  (elem $e25 (i32.const 25) func $anon-func-48.3)
  (elem $e26 (i32.const 26) func $anon-func-46.3)
  (elem $e27 (i32.const 27) func $anon-func-44.3)
  (elem $e28 (i32.const 28) func $get_version $sn_write)
  (data $d0 (i32.const 65540) "Cannot grow memory.")
  (data $d1 (i32.const 65560) "bigint function error")
  (data $d2 (i32.const 65584) "assertion failed at wasmtime/tests/debug/testsuite/fib-wasm.mo:11.1-11.33")
  (data $d3 (i32.const 65660) "arithmetic overflow")
  (data $d4 (i32.const 65680) "pattern failed")
  (data $d5 (i32.const 65696) "assertion failed at prelude:322.18-322.34")
  (data $d6 (i32.const 65740) "\07\00\00\00\03\00\00\00\00\00\00\00")
  (data $d7 (i32.const 65752) "\07\00\00\00\04\00\00\00\00\00\00\00")
  (data $d8 (i32.const 65764) "assertion failed at prelude:309.18-309.34")
  (data $d9 (i32.const 65808) "\0a\00\00\00\01\00\00\00]")
  (data $d10 (i32.const 65820) "\0a\00\00\00\01\00\00\00 ")
  (data $d11 (i32.const 65832) "\0a\00\00\00\02\00\00\00, ")
  (data $d12 (i32.const 65844) "internal error: object field not found")
  (data $d13 (i32.const 65884) "\0a\00\00\00\04\00\00\00[var")
  (data $d14 (i32.const 65896) "\0a\00\00\00\01\00\00\00[")
  (data $d15 (i32.const 65908) "\0a\00\00\00\02\00\00\00()")
  (data $d16 (i32.const 65920) "\0a\00\00\00\01\00\00\00#")
  (data $d17 (i32.const 65932) "\0a\00\00\00\01\00\00\00)")
  (data $d18 (i32.const 65944) "\0a\00\00\00\01\00\00\00(")
  (data $d19 (i32.const 65956) "\0a\00\00\00\04\00\00\00null")
  (data $d20 (i32.const 65968) "\0a\00\00\00\02\00\00\00?(")
  (data $d21 (i32.const 65980) "\0a\00\00\00\01\00\00\00?")
  (data $d22 (i32.const 65992) "\0a\00\00\00\01\00\00\00\22")
  (data $d23 (i32.const 66004) "\0a\00\00\00\01\00\00\000")
  (data $d24 (i32.const 66016) "\07\00\00\00\07\00\00\00\00\00\00\00")
  (data $d25 (i32.const 66028) "\0a\00\00\00\01\00\00\00\5c")
  (data $d26 (i32.const 66040) "\0a\00\00\00\01\00\00\00'")
  (data $d27 (i32.const 66052) "\0a\00\00\00\05\00\00\00false")
  (data $d28 (i32.const 66068) "\0a\00\00\00\04\00\00\00true")
  (data $d29 (i32.const 66080) "\0a\00\00\00\02\00\00\000x")
  (data $d30 (i32.const 66092) "codepoint out of range")
  (data $d31 (i32.const 66116) "\0a\00\00\00\01\00\00\00+")
  (data $d32 (i32.const 66128) "\0a\00\00\00\01\00\00\00-")
  (data $d33 (i32.const 66140) "\07\00\00\00\08\00\00\00\00\00\00\00")
  (data $d34 (i32.const 66152) "Natural subtraction underflow")
  (data $d35 (i32.const 66184) "\0a\00\00\00\01\00\00\00_")
  (data $d36 (i32.const 66196) "\0a\00\00\00\00\00\00\00")
  (data $d37 (i32.const 66204) "\f3\84\02I")
  (data $d38 (i32.const 66208) "Array index out of bounds")
  (data $d39 (i32.const 66236) "\0a\00\00\00\19\00\00\00Array index out of bounds")
  (data $d40 (i32.const 66272) "internal error: unexpected state entering Idle")
  (data $d41 (i32.const 66320) "internal error: unexpected state entering InInit")
  (data $d42 (i32.const 66368) "\03\00\00\00\00\00\00\00")
  (data $d43 (i32.const 66384) "IDL error: \00RTS error: \000.1\00\18\00\00\00\00\00\00\00not shortest encoding\00int overflow\00empty input\00missing magic bytes\00overflow in number of types\00too many types\00illegal type table\00primitive type in type table\00skip_any: too deeply nested record\00skip_any: encountered empty\00skip_any: unknown prim\00skip_any: recursive record\00skip_any: variant tag too large\00skip_any: func\00skip_any: service\00skip_any: skipping references\00invalid type argument\00not shortest encoding\00absurdly large number\00%f\00byte read out of buffer\00word read out of buffer\00advance out of buffer\00UTF-8 validation failure\00\00\00\00\00\00\00\fc\ff\ff\ffremember_closure: Storing unboxed literals not supports\00\00\00\00\00recall_closure: No closure table allocated\00recall_closure: Closure index out of range\00recall_closure: Closure index not in table\00text_concat: Text too large\00text_iter_next: Iter already done\00alloc_blob: Text too large\00compute_crc32: Blob expected\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\960\07w,a\0e\ee\baQ\09\99\19\c4m\07\8f\f4jp5\a5c\e9\a3\95d\9e2\88\db\0e\a4\b8\dcy\1e\e9\d5\e0\88\d9\d2\97+L\b6\09\bd|\b1~\07-\b8\e7\91\1d\bf\90d\10\b7\1d\f2 \b0jHq\b9\f3\deA\be\84}\d4\da\1a\eb\e4\ddmQ\b5\d4\f4\c7\85\d3\83V\98l\13\c0\a8kdz\f9b\fd\ec\c9e\8aO\5c\01\14\d9l\06cc=\0f\fa\f5\0d\08\8d\c8 n;^\10iL\e4A`\d5rqg\a2\d1\e4\03<G\d4\04K\fd\85\0d\d2k\b5\0a\a5\fa\a8\b55l\98\b2B\d6\c9\bb\db@\f9\bc\ac\e3l\d82u\5c\dfE\cf\0d\d6\dcY=\d1\ab\ac0\d9&:\00\deQ\80Q\d7\c8\16a\d0\bf\b5\f4\b4!#\c4\b3V\99\95\ba\cf\0f\a5\bd\b8\9e\b8\02(\08\88\05_\b2\d9\0c\c6$\e9\0b\b1\87|o/\11LhX\ab\1da\c1=-f\b6\90A\dcv\06q\db\01\bc \d2\98*\10\d5\ef\89\85\b1q\1f\b5\b6\06\a5\e4\bf\9f3\d4\b8\e8\a2\c9\07x4\f9\00\0f\8e\a8\09\96\18\98\0e\e1\bb\0dj\7f-=m\08\97ld\91\01\5cc\e6\f4Qkkbal\1c\d80e\85N\00b\f2\ed\95\06l{\a5\01\1b\c1\f4\08\82W\c4\0f\f5\c6\d9\b0eP\e9\b7\12\ea\b8\be\8b|\88\b9\fc\df\1d\ddbI-\da\15\f3|\d3\8ceL\d4\fbXa\b2M\ceQ\b5:t\00\bc\a3\e20\bb\d4A\a5\dfJ\d7\95\d8=m\c4\d1\a4\fb\f4\d6\d3j\e9iC\fc\d9n4F\88g\ad\d0\b8`\das-\04D\e5\1d\033_L\0a\aa\c9|\0d\dd<q\05P\aaA\02'\10\10\0b\be\86 \0c\c9%\b5hW\b3\85o \09\d4f\b9\9f\e4a\ce\0e\f9\de^\98\c9\d9)\22\98\d0\b0\b4\a8\d7\c7\17=\b3Y\81\0d\b4.;\5c\bd\b7\adl\ba\c0 \83\b8\ed\b6\b3\bf\9a\0c\e2\b6\03\9a\d2\b1t9G\d5\ea\afw\d2\9d\15&\db\04\83\16\dcs\12\0bc\e3\84;d\94>jm\0d\a8Zjz\0b\cf\0e\e4\9d\ff\09\93'\ae\00\0a\b1\9e\07}D\93\0f\f0\d2\a3\08\87h\f2\01\1e\fe\c2\06i]Wb\f7\cbge\80q6l\19\e7\06knv\1b\d4\fe\e0+\d3\89Zz\da\10\ccJ\ddgo\df\b9\f9\f9\ef\be\8eC\be\b7\17\d5\8e\b0`\e8\a3\d6\d6~\93\d1\a1\c4\c2\d88R\f2\dfO\f1g\bb\d1gW\bc\a6\dd\06\b5?K6\b2H\da+\0d\d8L\1b\0a\af\f6J\036`z\04A\c3\ef`\dfU\dfg\a8\ef\8en1y\beiF\8c\b3a\cb\1a\83f\bc\a0\d2o%6\e2hR\95w\0c\cc\03G\0b\bb\b9\16\02\22/&\05U\be;\ba\c5(\0b\bd\b2\92Z\b4+\04j\b3\5c\a7\ff\d7\c21\cf\d0\b5\8b\9e\d9,\1d\ae\de[\b0\c2d\9b&\f2c\ec\9c\a3ju\0a\93m\02\a9\06\09\9c?6\0e\eb\85g\07r\13W\00\05\82J\bf\95\14z\b8\e2\ae+\b1{8\1b\b6\0c\9b\8e\d2\92\0d\be\d5\e5\b7\ef\dc|!\df\db\0b\d4\d2\d3\86B\e2\d4\f1\f8\b3\ddhn\83\da\1f\cd\16\be\81[&\b9\f6\e1w\b0owG\b7\18\e6Z\08\88pj\0f\ff\ca;\06f\5c\0b\01\11\ff\9ee\8fi\aeb\f8\d3\ffkaE\cfl\16x\e2\0a\a0\ee\d2\0d\d7T\83\04N\c2\b3\039a&g\a7\f7\16`\d0MGiI\dbwn>Jj\d1\ae\dcZ\d6\d9f\0b\df@\f0;\d87S\ae\bc\a9\c5\9e\bb\de\7f\cf\b2G\e9\ff\b50\1c\f2\bd\bd\8a\c2\ba\ca0\93\b3S\a6\a3\b4$\056\d0\ba\93\06\d7\cd)W\deT\bfg\d9#.zf\b3\b8Ja\c4\02\1bh]\94+o*7\be\0b\b4\a1\8e\0c\c3\1b\df\05Z\8d\ef\02-ic_url_decode: Not an URL\00ic_url_decode: Not an even number of hex digits\00ic_url_decode: CRC-8 mismatch\00ic:\00ic_url_decode: Wrong URL scheme (not 'ic:')\00ic_url_decode: Not all uppercase hex digit\00\00\00\00\00\00\008\fa\feB.\e6?0g\c7\93W\f3.=\00\00\00\00\00\00\e0\bf`UUUUU\e5\bf\06\00\00\00\00\00\e0?NUY\99\99\99\e9?z\a4)UUU\e5\bf\e9EH\9b[I\f2\bf\c3?&\8b+\00\f0?\00\00\00\00\00\a0\f6?\00\00\00\00\00\00\00\00\00\c8\b9\f2\82,\d6\bf\80V7($\b4\fa<\00\00\00\00\00\80\f6?\00\00\00\00\00\00\00\00\00\08X\bf\bd\d1\d5\bf \f7\e0\d8\08\a5\1c\bd\00\00\00\00\00`\f6?\00\00\00\00\00\00\00\00\00XE\17wv\d5\bfmP\b6\d5\a4b#\bd\00\00\00\00\00@\f6?\00\00\00\00\00\00\00\00\00\f8-\87\ad\1a\d5\bf\d5g\b0\9e\e4\84\e6\bc\00\00\00\00\00 \f6?\00\00\00\00\00\00\00\00\00xw\95_\be\d4\bf\e0>)\93i\1b\04\bd\00\00\00\00\00\00\f6?\00\00\00\00\00\00\00\00\00`\1c\c2\8ba\d4\bf\cc\84LH/\d8\13=\00\00\00\00\00\e0\f5?\00\00\00\00\00\00\00\00\00\a8\86\860\04\d4\bf:\0b\82\ed\f3B\dc<\00\00\00\00\00\c0\f5?\00\00\00\00\00\00\00\00\00HiUL\a6\d3\bf`\94Q\86\c6\b1 =\00\00\00\00\00\a0\f5?\00\00\00\00\00\00\00\00\00\80\98\9a\ddG\d3\bf\92\80\c5\d4MY%=\00\00\00\00\00\80\f5?\00\00\00\00\00\00\00\00\00 \e1\ba\e2\e8\d2\bf\d8+\b7\99\1e{&=\00\00\00\00\00`\f5?\00\00\00\00\00\00\00\00\00\88\de\13Z\89\d2\bf?\b0\cf\b6\14\ca\15=\00\00\00\00\00`\f5?\00\00\00\00\00\00\00\00\00\88\de\13Z\89\d2\bf?\b0\cf\b6\14\ca\15=\00\00\00\00\00@\f5?\00\00\00\00\00\00\00\00\00x\cf\fbA)\d2\bfv\daS($Z\16\bd\00\00\00\00\00 \f5?\00\00\00\00\00\00\00\00\00\98i\c1\98\c8\d1\bf\04T\e7h\bc\af\1f\bd\00\00\00\00\00\00\f5?\00\00\00\00\00\00\00\00\00\a8\ab\ab\5cg\d1\bf\f0\a8\823\c6\1f\1f=\00\00\00\00\00\e0\f4?\00\00\00\00\00\00\00\00\00H\ae\f9\8b\05\d1\bffZ\05\fd\c4\a8&\bd\00\00\00\00\00\c0\f4?\00\00\00\00\00\00\00\00\00\90s\e2$\a3\d0\bf\0e\03\f4~\eek\0c\bd\00\00\00\00\00\a0\f4?\00\00\00\00\00\00\00\00\00\d0\b4\94%@\d0\bf\7f-\f4\9e\b86\f0\bc\00\00\00\00\00\a0\f4?\00\00\00\00\00\00\00\00\00\d0\b4\94%@\d0\bf\7f-\f4\9e\b86\f0\bc\00\00\00\00\00\80\f4?\00\00\00\00\00\00\00\00\00@^m\18\b9\cf\bf\87<\99\ab*W\0d=\00\00\00\00\00`\f4?\00\00\00\00\00\00\00\00\00`\dc\cb\ad\f0\ce\bf$\af\86\9c\b7&+=\00\00\00\00\00@\f4?\00\00\00\00\00\00\00\00\00\f0*n\07'\ce\bf\10\ff?TO/\17\bd\00\00\00\00\00 \f4?\00\00\00\00\00\00\00\00\00\c0Ok!\5c\cd\bf\1bh\ca\bb\91\ba!=\00\00\00\00\00\00\f4?\00\00\00\00\00\00\00\00\00\a0\9a\c7\f7\8f\cc\bf4\84\9fhOy'=\00\00\00\00\00\00\f4?\00\00\00\00\00\00\00\00\00\a0\9a\c7\f7\8f\cc\bf4\84\9fhOy'=\00\00\00\00\00\e0\f3?\00\00\00\00\00\00\00\00\00\90-t\86\c2\cb\bf\8f\b7\8b1\b0N\19=\00\00\00\00\00\c0\f3?\00\00\00\00\00\00\00\00\00\c0\80N\c9\f3\ca\bff\90\cd?cN\ba<\00\00\00\00\00\a0\f3?\00\00\00\00\00\00\00\00\00\b0\e2\1f\bc#\ca\bf\ea\c1F\dcd\8c%\bd\00\00\00\00\00\a0\f3?\00\00\00\00\00\00\00\00\00\b0\e2\1f\bc#\ca\bf\ea\c1F\dcd\8c%\bd\00\00\00\00\00\80\f3?\00\00\00\00\00\00\00\00\00P\f4\9cZR\c9\bf\e3\d4\c1\04\d9\d1*\bd\00\00\00\00\00`\f3?\00\00\00\00\00\00\00\00\00\d0 e\a0\7f\c8\bf\09\fa\db\7f\bf\bd+=\00\00\00\00\00@\f3?\00\00\00\00\00\00\00\00\00\e0\10\02\89\ab\c7\bfXJSr\90\db+=\00\00\00\00\00@\f3?\00\00\00\00\00\00\00\00\00\e0\10\02\89\ab\c7\bfXJSr\90\db+=\00\00\00\00\00 \f3?\00\00\00\00\00\00\00\00\00\d0\19\e7\0f\d6\c6\bff\e2\b2\a3j\e4\10\bd\00\00\00\00\00\00\f3?\00\00\00\00\00\00\00\00\00\90\a7p0\ff\c5\bf9P\10\9fC\9e\1e\bd\00\00\00\00\00\00\f3?\00\00\00\00\00\00\00\00\00\90\a7p0\ff\c5\bf9P\10\9fC\9e\1e\bd\00\00\00\00\00\e0\f2?\00\00\00\00\00\00\00\00\00\b0\a1\e3\e5&\c5\bf\8f[\07\90\8b\de \bd\00\00\00\00\00\c0\f2?\00\00\00\00\00\00\00\00\00\80\cbl+M\c4\bf<x5a\c1\0c\17=\00\00\00\00\00\c0\f2?\00\00\00\00\00\00\00\00\00\80\cbl+M\c4\bf<x5a\c1\0c\17=\00\00\00\00\00\a0\f2?\00\00\00\00\00\00\00\00\00\90\1e \fcq\c3\bf:T'M\86x\f1<\00\00\00\00\00\80\f2?\00\00\00\00\00\00\00\00\00\f0\1f\f8R\95\c2\bf\08\c4q\170\8d$\bd\00\00\00\00\00`\f2?\00\00\00\00\00\00\00\00\00`/\d5*\b7\c1\bf\96\a3\11\18\a4\80.\bd\00\00\00\00\00`\f2?\00\00\00\00\00\00\00\00\00`/\d5*\b7\c1\bf\96\a3\11\18\a4\80.\bd\00\00\00\00\00@\f2?\00\00\00\00\00\00\00\00\00\90\d0|~\d7\c0\bf\f4[\e8\88\96i\0a=\00\00\00\00\00@\f2?\00\00\00\00\00\00\00\00\00\90\d0|~\d7\c0\bf\f4[\e8\88\96i\0a=\00\00\00\00\00 \f2?\00\00\00\00\00\00\00\00\00\e0\db1\91\ec\bf\bf\f23\a3\5cTu%\bd\00\00\00\00\00\00\f2?\00\00\00\00\00\00\00\00\00\00+n\07'\be\bf<\00\f0*,4*=\00\00\00\00\00\00\f2?\00\00\00\00\00\00\00\00\00\00+n\07'\be\bf<\00\f0*,4*=\00\00\00\00\00\e0\f1?\00\00\00\00\00\00\00\00\00\c0[\8fT^\bc\bf\06\be_XW\0c\1d\bd\00\00\00\00\00\c0\f1?\00\00\00\00\00\00\00\00\00\e0J:m\92\ba\bf\c8\aa[\e859%=\00\00\00\00\00\c0\f1?\00\00\00\00\00\00\00\00\00\e0J:m\92\ba\bf\c8\aa[\e859%=\00\00\00\00\00\a0\f1?\00\00\00\00\00\00\00\00\00\a01\d6E\c3\b8\bfhV/M)|\13=\00\00\00\00\00\a0\f1?\00\00\00\00\00\00\00\00\00\a01\d6E\c3\b8\bfhV/M)|\13=\00\00\00\00\00\80\f1?\00\00\00\00\00\00\00\00\00`\e5\8a\d2\f0\b6\bf\das3\c97\97&\bd\00\00\00\00\00`\f1?\00\00\00\00\00\00\00\00\00 \06?\07\1b\b5\bfW^\c6a[\02\1f=\00\00\00\00\00`\f1?\00\00\00\00\00\00\00\00\00 \06?\07\1b\b5\bfW^\c6a[\02\1f=\00\00\00\00\00@\f1?\00\00\00\00\00\00\00\00\00\e0\1b\96\d7A\b3\bf\df\13\f9\cc\da^,=\00\00\00\00\00@\f1?\00\00\00\00\00\00\00\00\00\e0\1b\96\d7A\b3\bf\df\13\f9\cc\da^,=\00\00\00\00\00 \f1?\00\00\00\00\00\00\00\00\00\80\a3\ee6e\b1\bf\09\a3\8fv^|\14=\00\00\00\00\00\00\f1?\00\00\00\00\00\00\00\00\00\80\11\c00\0a\af\bf\91\8e6\83\9eY-=\00\00\00\00\00\00\f1?\00\00\00\00\00\00\00\00\00\80\11\c00\0a\af\bf\91\8e6\83\9eY-=\00\00\00\00\00\e0\f0?\00\00\00\00\00\00\00\00\00\80\19q\ddB\ab\bfLp\d6\e5z\82\1c=\00\00\00\00\00\e0\f0?\00\00\00\00\00\00\00\00\00\80\19q\ddB\ab\bfLp\d6\e5z\82\1c=\00\00\00\00\00\c0\f0?\00\00\00\00\00\00\00\00\00\c02\f6Xt\a7\bf\ee\a1\f24F\fc,\bd\00\00\00\00\00\c0\f0?\00\00\00\00\00\00\00\00\00\c02\f6Xt\a7\bf\ee\a1\f24F\fc,\bd\00\00\00\00\00\a0\f0?\00\00\00\00\00\00\00\00\00\c0\fe\b9\87\9e\a3\bf\aa\fe&\f5\b7\02\f5<\00\00\00\00\00\a0\f0?\00\00\00\00\00\00\00\00\00\c0\fe\b9\87\9e\a3\bf\aa\fe&\f5\b7\02\f5<\00\00\00\00\00\80\f0?\00\00\00\00\00\00\00\00\00\00x\0e\9b\82\9f\bf\e4\09~|&\80)\bd\00\00\00\00\00\80\f0?\00\00\00\00\00\00\00\00\00\00x\0e\9b\82\9f\bf\e4\09~|&\80)\bd\00\00\00\00\00`\f0?\00\00\00\00\00\00\00\00\00\80\d5\07\1b\b9\97\bf9\a6\fa\93T\8d(\bd\00\00\00\00\00@\f0?\00\00\00\00\00\00\00\00\00\00\fc\b0\a8\c0\8f\bf\9c\a6\d3\f6|\1e\df\bc\00\00\00\00\00@\f0?\00\00\00\00\00\00\00\00\00\00\fc\b0\a8\c0\8f\bf\9c\a6\d3\f6|\1e\df\bc\00\00\00\00\00 \f0?\00\00\00\00\00\00\00\00\00\00\10k*\e0\7f\bf\e4@\da\0d?\e2\19\bd\00\00\00\00\00 \f0?\00\00\00\00\00\00\00\00\00\00\10k*\e0\7f\bf\e4@\da\0d?\e2\19\bd\00\00\00\00\00\00\f0?\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\f0?\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\c0\ef?\00\00\00\00\00\00\00\00\00\00\89u\15\10\80?\e8+\9d\99k\c7\10\bd\00\00\00\00\00\80\ef?\00\00\00\00\00\00\00\00\00\80\93XV \90?\d2\f7\e2\06[\dc#\bd\00\00\00\00\00@\ef?\00\00\00\00\00\00\00\00\00\00\c9(%I\98?4\0cZ2\ba\a0*\bd\00\00\00\00\00\00\ef?\00\00\00\00\00\00\00\00\00@\e7\89]A\a0?S\d7\f1\5c\c0\11\01=\00\00\00\00\00\c0\ee?\00\00\00\00\00\00\00\00\00\00.\d4\aef\a4?(\fd\bdus\16,\bd\00\00\00\00\00\80\ee?\00\00\00\00\00\00\00\00\00\c0\9f\14\aa\94\a8?}&Z\d0\95y\19\bd\00\00\00\00\00@\ee?\00\00\00\00\00\00\00\00\00\c0\dd\cds\cb\ac?\07(\d8G\f2h\1a\bd\00\00\00\00\00 \ee?\00\00\00\00\00\00\00\00\00\c0\06\c01\ea\ae?{;\c9O>\11\0e\bd\00\00\00\00\00\e0\ed?\00\00\00\00\00\00\00\00\00`F\d1;\97\b1?\9b\9e\0dV]2%\bd\00\00\00\00\00\a0\ed?\00\00\00\00\00\00\00\00\00\e0\d1\a7\f5\bd\b3?\d7N\db\a5^\c8,=\00\00\00\00\00`\ed?\00\00\00\00\00\00\00\00\00\a0\97MZ\e9\b5?\1e\1d]<\06i,\bd\00\00\00\00\00@\ed?\00\00\00\00\00\00\00\00\00\c0\ea\0a\d3\00\b7?2\ed\9d\a9\8d\1e\ec<\00\00\00\00\00\00\ed?\00\00\00\00\00\00\00\00\00@Y]^3\b9?\daG\bd:\5c\11#=\00\00\00\00\00\c0\ec?\00\00\00\00\00\00\00\00\00`\ad\8d\c8j\bb?\e5h\f7+\80\90\13\bd\00\00\00\00\00\a0\ec?\00\00\00\00\00\00\00\00\00@\bc\01X\88\bc?\d3\acZ\c6\d1F&=\00\00\00\00\00`\ec?\00\00\00\00\00\00\00\00\00 \0a\839\c7\be?\e0E\e6\afh\c0-\bd\00\00\00\00\00@\ec?\00\00\00\00\00\00\00\00\00\e0\db9\91\e8\bf?\fd\0a\a1O\d64%\bd\00\00\00\00\00\00\ec?\00\00\00\00\00\00\00\00\00\e0'\82\8e\17\c1?\f2\07-\cex\ef!=\00\00\00\00\00\e0\eb?\00\00\00\00\00\00\00\00\00\f0#~+\aa\c1?4\998D\8e\a7,=\00\00\00\00\00\a0\eb?\00\00\00\00\00\00\00\00\00\80\86\0ca\d1\c2?\a1\b4\81\cbl\9d\03=\00\00\00\00\00\80\eb?\00\00\00\00\00\00\00\00\00\90\15\b0\fce\c3?\89rK#\a8/\c6<\00\00\00\00\00@\eb?\00\00\00\00\00\00\00\00\00\b03\83=\91\c4?x\b6\fdTy\83%=\00\00\00\00\00 \eb?\00\00\00\00\00\00\00\00\00\b0\a1\e4\e5'\c5?\c7}i\e5\e83&=\00\00\00\00\00\e0\ea?\00\00\00\00\00\00\00\00\00\10\8c\beNW\c6?x.<,\8b\cf\19=\00\00\00\00\00\c0\ea?\00\00\00\00\00\00\00\00\00pu\8b\12\f0\c6?\e1!\9c\e5\8d\11%\bd\00\00\00\00\00\a0\ea?\00\00\00\00\00\00\00\00\00PD\85\8d\89\c7?\05C\91p\10f\1c\bd\00\00\00\00\00`\ea?\00\00\00\00\00\00\00\00\00\009\eb\af\be\c8?\d1,\e9\aaT=\07\bd\00\00\00\00\00@\ea?\00\00\00\00\00\00\00\00\00\00\f7\dcZZ\c9?o\ff\a0X(\f2\07=\00\00\00\00\00\00\ea?\00\00\00\00\00\00\00\00\00\e0\8a<\ed\93\ca?i!VPCr(\bd\00\00\00\00\00\e0\e9?\00\00\00\00\00\00\00\00\00\d0[W\d81\cb?\aa\e1\acN\8d5\0c\bd\00\00\00\00\00\c0\e9?\00\00\00\00\00\00\00\00\00\e0;8\87\d0\cb?\b6\12TY\c4K-\bd\00\00\00\00\00\a0\e9?\00\00\00\00\00\00\00\00\00\10\f0\c6\fbo\cc?\d2+\96\c5r\ec\f1\bc\00\00\00\00\00`\e9?\00\00\00\00\00\00\00\00\00\90\d4\b0=\b1\cd?5\b0\15\f7*\ff*\bd\00\00\00\00\00@\e9?\00\00\00\00\00\00\00\00\00\10\e7\ff\0eS\ce?0\f4A`'\12\c2<\00\00\00\00\00 \e9?\00\00\00\00\00\00\00\00\00\00\dd\e4\ad\f5\ce?\11\8e\bbe\15!\ca\bc\00\00\00\00\00\00\e9?\00\00\00\00\00\00\00\00\00\b0\b3l\1c\99\cf?0\df\0c\ca\ec\cb\1b=\00\00\00\00\00\c0\e8?\00\00\00\00\00\00\00\00\00XM`8q\d0?\91N\ed\16\db\9c\f8<\00\00\00\00\00\a0\e8?\00\00\00\00\00\00\00\00\00`ag-\c4\d0?\e9\ea<\16\8b\18'=\00\00\00\00\00\80\e8?\00\00\00\00\00\00\00\00\00\e8'\82\8e\17\d1?\1c\f0\a5c\0e!,\bd\00\00\00\00\00`\e8?\00\00\00\00\00\00\00\00\00\f8\ac\cb\5ck\d1?\81\16\a5\f7\cd\9a+=\00\00\00\00\00@\e8?\00\00\00\00\00\00\00\00\00hZc\99\bf\d1?\b7\bdGQ\ed\a6,=\00\00\00\00\00 \e8?\00\00\00\00\00\00\00\00\00\b8\0emE\14\d2?\ea\baF\ba\de\87\0a=\00\00\00\00\00\e0\e7?\00\00\00\00\00\00\00\00\00\90\dc|\f0\be\d2?\f4\04PJ\fa\9c*=\00\00\00\00\00\c0\e7?\00\00\00\00\00\00\00\00\00`\d3\e1\f1\14\d3?\b8<!\d3z\e2(\bd\00\00\00\00\00\a0\e7?\00\00\00\00\00\00\00\00\00\10\bevgk\d3?\c8w\f1\b0\cdn\11=\00\00\00\00\00\80\e7?\00\00\00\00\00\00\00\00\0003wR\c2\d3?\5c\bd\06\b6T;\18=\00\00\00\00\00`\e7?\00\00\00\00\00\00\00\00\00\e8\d5#\b4\19\d4?\9d\e0\90\ec6\e4\08=\00\00\00\00\00@\e7?\00\00\00\00\00\00\00\00\00\c8q\c2\8dq\d4?u\d6g\09\ce'/\bd\00\00\00\00\00 \e7?\00\00\00\00\00\00\00\00\000\17\9e\e0\c9\d4?\a4\d8\0a\1b\89 .\bd\00\00\00\00\00\00\e7?\00\00\00\00\00\00\00\00\00\a08\07\ae\22\d5?Y\c7d\81p\be.=\00\00\00\00\00\e0\e6?\00\00\00\00\00\00\00\00\00\d0\c8S\f7{\d5?\ef@]\ee\ed\ad\1f=\00\00\00\00\00\c0\e6?\00\00\00\00\00\00\00\00\00`Y\df\bd\d5\d5?\dce\a4\08*\0b\0a\bdO\bba\05g\ac\dd?\18-DT\fb!\e9?\9b\f6\81\d2\0bs\ef?\18-DT\fb!\f9?\e2e/\22\7f+z<\07\5c\143&\a6\81<\bd\cb\f0z\88\07p<\07\5c\143&\a6\91<\18-DT\fb!\e9?\18-DT\fb!\e9\bf\d2!3\7f|\d9\02@\d2!3\7f|\d9\02\c0\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\80\18-DT\fb!\09@\18-DT\fb!\09\c0\fe\82+eG\15g@\00\00\00\00\00\008C\00\00\fa\feB.v\bf:;\9e\bc\9a\f7\0c\bd\bd\fd\ff\ff\ff\ff\df?<TUUUU\c5?\91+\17\cfUU\a5?\17\d0\a4g\11\11\81?\00\00\00\00\00\00\c8B\ef9\fa\feB.\e6?$\c4\82\ff\bd\bf\ce?\b5\f4\0c\d7\08k\ac?\ccPF\d2\ab\b2\83?\84:N\9b\e0\d7U?\00\00\00\00\00\00\00\00\00\00\00\00\00\00\f0?n\bf\88\1aO;\9b<53\fb\a9=\f6\ef?]\dc\d8\9c\13`q\bca\80w>\9a\ec\ef?\d1f\87\10z^\90\bc\85\7fn\e8\15\e3\ef?\13\f6g5R\d2\8c<t\85\15\d3\b0\d9\ef?\fa\8e\f9#\80\ce\8b\bc\de\f6\dd)k\d0\ef?a\c8\e6aN\f7`<\c8\9bu\18E\c7\ef?\99\d33[\e4\a3\90<\83\f3\c6\ca>\be\ef?m{\83]\a6\9a\97<\0f\89\f9lX\b5\ef?\fc\ef\fd\92\1a\b5\8e<\f7Gr+\92\ac\ef?\d1\9c/p=\be><\a2\d1\d32\ec\a3\ef?\0bn\90\894\03j\bc\1b\d3\fe\aff\9b\ef?\0e\bd/*RV\95\bcQ[\12\d0\01\93\ef?U\eaN\8c\ef\80P\bc\cc1l\c0\bd\8a\ef?\16\f4\d5\b9#\c9\91\bc\e0-\a9\ae\9a\82\ef?\afU\5c\e9\e3\d3\80<Q\8e\a5\c8\98z\ef?H\93\a5\ea\15\1b\80\bc{Q}<\b8r\ef?=2\deU\f0\1f\8f\bc\ea\8d\8c8\f9j\ef?\bfS\13?\8c\89\8b<u\cbo\eb[c\ef?&\eb\11v\9c\d9\96\bc\d4\5c\04\84\e0[\ef?`/:>\f7\ec\9a<\aa\b9h1\87T\ef?\9d8\86\cb\82\e7\8f\bc\1d\d9\fc\22PM\ef?\8d\c3\a6DAo\8a<\d6\8cb\88;F\ef?}\04\e4\b0\05z\80<\96\dc}\91I?\ef?\94\a8\a8\e3\fd\8e\96<8bunz8\ef?}Ht\f2\18^\87<?\a6\b2O\ce1\ef?\f2\e7\1f\98+G\80<\dd|\e2eE+\ef?^\08q?{\b8\96\bc\81c\f5\e1\df$\ef?1\ab\09m\e1\f7\82<\e1\de\1f\f5\9d\1e\ef?\fa\bfo\1a\9b!=\bc\90\d9\da\d0\7f\18\ef?\b4\0a\0cr\827\8b<\0b\03\e4\a6\85\12\ef?\8f\cb\ce\89\92\14n<V/>\a9\af\0c\ef?\b6\ab\b0MuM\83<\15\b71\0a\fe\06\ef?Lt\ac\e2\01B\86<1\d8L\fcp\01\ef?J\f8\d3]9\dd\8f<\ff\16d\b2\08\fc\ee?\04[\8e;\80\a3\86\bc\f1\9f\92_\c5\f6\ee?hPK\cc\edJ\92\bc\cb\a9:7\a7\f1\ee?\8e-Q\1b\f8\07\99\bcf\d8\05m\ae\ec\ee?\d26\94>\e8\d1q\bc\f7\9f\e54\db\e7\ee?\15\1b\ce\b3\19\19\99\bc\e5\a8\13\c3-\e3\ee?mL*\a7H\9f\85<\224\12L\a6\de\ee?\8ai(z`\12\93\bc\1c\80\ac\04E\da\ee?[\89\17H\8f\a7X\bc*.\f7!\0a\d6\ee?\1b\9aIg\9b,|\bc\97\a8P\d9\f5\d1\ee?\11\ac\c2`\edcC<-\89a`\08\ce\ee?\efd\06;\09f\96<W\00\1d\edA\ca\ee?y\03\a1\da\e1\ccn<\d0<\c1\b5\a2\c6\ee?0\12\0f?\8e\ff\93<\de\d3\d7\f0*\c3\ee?\b0\afz\bb\ce\90v<'*6\d5\da\bf\ee?w\e0T\eb\bd\1d\93<\0d\dd\fd\99\b2\bc\ee?\8e\a3q\004\94\8f\bc\a7,\9dv\b2\b9\ee?I\a3\93\dc\cc\de\87\bcBf\cf\a2\da\b6\ee?_8\0f\bd\c6\dex\bc\82O\9dV+\b4\ee?\f6\5c{\ecF\12\86\bc\0f\92]\ca\a4\b1\ee?\8e\d7\fd\18\055\93<\da'\b56G\af\ee?\05\9b\8a/\b7\98{<\fd\c7\97\d4\12\ad\ee?\09T\1c\e2\e1c\90<)TH\dd\07\ab\ee?\ea\c6\19P\85\c74<\b7FY\8a&\a9\ee?5\c0d+\e62\94<H!\ad\15o\a7\ee?\9fv\99aJ\e4\8c\bc\09\dcv\b9\e1\a5\ee?\a8M\ef;\c53\8c\bc\85U:\b0~\a4\ee?\ae\e9+\89xS\84\bc \c3\cc4F\a3\ee?XXVx\dd\ce\93\bc%\22U\828\a2\ee?d\19~\80\aa\10W<s\a9L\d4U\a1\ee?(\22^\bf\ef\b3\93\bc\cd;\7ff\9e\a0\ee?\82\b94\87\ad\12j\bc\bf\da\0bu\12\a0\ee?\ee\a9m\b8\efgc\bc/\1ae<\b2\9f\ee?Q\88\e0T=\dc\80\bc\84\94Q\f9}\9f\ee?\cf>Z~d\1fx\bct_\ec\e8u\9f\ee?\b0}\8b\c0J\ee\86\bct\81\a5H\9a\9f\ee?\8a\e6U\1e2\19\86\bc\c9gBV\eb\9f\ee?\d3\d4\09^\cb\9c\90<?]\deOi\a0\ee?\1d\a5M\b9\dc2{\bc\87\01\ebs\14\a1\ee?k\c0gT\fd\ec\94<2\c10\01\ed\a1\ee?Ul\d6\ab\e1\ebe<bN\cf6\f3\a2\ee?B\cf\b3/\c5\a1\88\bc\12\1a>T'\a4\ee?47;\f1\b6i\93\bc\13\ceL\99\89\a5\ee?\1e\ff\19:\84^\80\bc\ad\c7#F\1a\a7\ee?nWr\d8P\d4\94\bc\ed\92D\9b\d9\a8\ee?\00\8a\0e[g\ad\90<\99f\8a\d9\c7\aa\ee?\b4\ea\f0\c1/\b7\8d<\db\a0*B\e5\ac\ee?\ff\e7\c5\9c`\b6e\bc\8cD\b5\162\af\ee?D_\f3Y\83\f6{<6w\15\99\ae\b1\ee?\83=\1e\a7\1f\09\93\bc\c6\ff\91\0b[\b4\ee?)\1el\8b\b8\a9]\bc\e5\c5\cd\b07\b7\ee?Y\b9\90|\f9#l\bc\0fR\c8\cbD\ba\ee?\aa\f9\f4\22CC\92\bcPN\de\9f\82\bd\ee?K\8ef\d7l\ca\85\bc\ba\07\cap\f1\c0\ee?'\ce\91+\fc\afq<\90\f0\a3\82\91\c4\ee?\bbs\0a\e15\d2m<##\e3\19c\c8\ee?c\22b\22\04\c5\87\bce\e5]{f\cc\ee?\d51\e2\e3\86\1c\8b<3-J\ec\9b\d0\ee?\15\bb\bc\d3\d1\bb\91\bc]%>\b2\03\d5\ee?\d21\ee\9c1\cc\90<X\b30\13\9e\d9\ee?\b3Zsn\84i\84<\bf\fdyUk\de\ee?\b4\9d\8e\97\cd\df\82\bcz\f3\d3\bfk\e3\ee?\873\cb\92w\1a\8c<\ad\d3Z\99\9f\e8\ee?\fa\d9\d1J\8f{\90\bcf\b6\8d)\07\ee\ee?\ba\ae\dcV\d9\c3U\bc\fb\15O\b8\a2\f3\ee?@\f6\a6=\0e\a4\90\bc:Y\e5\8dr\f9\ee?4\93\ad8\f4\d6h\bcG^\fb\f2v\ff\ee?5\8aXk\e2\ee\91\bcJ\06\a10\b0\05\ef?\cd\dd_\0a\d7\fft<\d2\c1K\90\1e\0c\ef?\ac\98\92\fa\fb\bd\91\bc\09\1e\d7[\c2\12\ef?\b3\0c\af0\aens<\9cR\85\dd\9b\19\ef?\94\fd\9f\5c2\e3\8e<z\d0\ff_\ab \ef?\acY\09\d1\8f\e0\84<K\d1W.\f1'\ef?g\1aN8\af\cdc<\b5\e7\06\94m/\ef?h\19\92l,kg<i\90\ef\dc 7\ef?\d2\b5\cc\83\18\8a\80\bc\fa\c3]U\0b?\ef?o\fa\ff?]\ad\8f\bc|\89\07J-G\ef?I\a9u8\ae\0d\90\bc\f2\89\0d\08\87O\ef?\a7\07=\a6\85\a3t<\87\a4\fb\dc\18X\ef?\0f\22@ \9e\91\82\bc\98\83\c9\16\e3`\ef?\ac\92\c1\d5PZ\8e<\852\db\03\e6i\ef?Kk\01\acY:\84<`\b4\01\f3!s\ef?\1f>\b4\07!\d5\82\bc_\9b{3\97|\ef?\c9\0dG;\b9*\89\bc)\a1\f5\14F\86\ef?\d3\88:`\04\b6t<\f6?\8b\e7.\90\ef?qr\9dQ\ec\c5\83<\83L\c7\fbQ\9a\ef?\f0\91\d3\8f\12\f7\8f\bc\da\90\a4\a2\af\a4\ef?}t#\e2\98\ae\8d\bc\f1g\8e-H\af\ef?\08 \aaA\bc\c3\8e<'Za\ee\1b\ba\ef?2\eb\a9\c3\94+\84<\97\bak7+\c5\ef?\ee\85\d11\a9d\8a<@En[v\d0\ef?\ed\e3;\e4\ba7\8e\bc\14\be\9c\ad\fd\db\ef?\9d\cd\91M;\89w<\d8\90\9e\81\c1\e7\ef?\89\cc`A\c1\05S<\f1q\8f+\c2\f3\ef?\008\fa\feB.\e6?0g\c7\93W\f3.=\01\00\00\00\00\00\e0\bf[0QUUU\d5?\90E\eb\ff\ff\ff\cf\bf\11\01\f1$\b3\99\c9?\9f\c8\06\e5uU\c5\bf\00\00\00\00\00\00\e0\bfwUUUUU\d5?\cb\fd\ff\ff\ff\ff\cf\bf\0c\dd\95\99\99\99\c9?\a7EgUUU\c5\bf0\deD\a3$I\c2?e=B\a4\ff\ff\bf\bf\ca\d6*(\84q\bc?\ffh\b0C\eb\99\b9\bf\85\d0\af\f7\82\81\b7?\cdE\d1u\13R\b5\bf\9f\de\e0\c3\f04\f7?\00\90\e6y\7f\cc\d7\bf\1f\e9,jx\13\f7?\00\00\0d\c2\eeo\d7\bf\a0\b5\fa\08`\f2\f6?\00\e0Q\13\e3\13\d7\bf}\8c\13\1f\a6\d1\f6?\00x(8[\b8\d6\bf\d1\b4\c5\0bI\b1\f6?\00x\80\90U]\d6\bf\ba\0c/3G\91\f6?\00\00\18v\d0\02\d6\bf#B\22\18\9fq\f6?\00\90\90\86\ca\a8\d5\bf\d9\1e\a5\99OR\f6?\00P\03VCO\d5\bf\c4$\8f\aaV3\f6?\00@k\c37\f6\d4\bf\14\dc\9dk\b3\14\f6?\00P\a8\fd\a7\9d\d4\bfL\5c\c6Rd\f6\f5?\00\a8\899\92E\d4\bfO,\91\b5g\d8\f5?\00\b8\b09\f4\ed\d3\bf\de\90[\cb\bc\ba\f5?\00p\8fD\ce\96\d3\bfx\1a\d9\f2a\9d\f5?\00\a0\bd\17\1e@\d3\bf\87VF\12V\80\f5?\00\80F\ef\e2\e9\d2\bf\d3k\e7\ce\97c\f5?\00\e008\1b\94\d2\bf\93\7f\a7\e2%G\f5?\00\88\da\8c\c5>\d2\bf\83E\06B\ff*\f5?\00\90')\e1\e9\d1\bf\df\bd\b2\db\22\0f\f5?\00\f8H+m\95\d1\bf\d7\de4G\8f\f3\f4?\00\f8\b9\9agA\d1\bf@(\de\cfC\d8\f4?\00\98\ef\94\d0\ed\d0\bf\c8\a3x\c0>\bd\f4?\00\10\db\18\a5\9a\d0\bf\8a%\e0\c3\7f\a2\f4?\00\b8cR\e6G\d0\bf4\84\d4$\05\88\f4?\00\f0\86E\22\eb\cf\bf\0b-\19\1b\cem\f4?\00\b0\17uJG\cf\bfT\189\d3\d9S\f4?\000\10=D\a4\ce\bfZ\84\b4D':\f4?\00\b0\e9D\0d\02\ce\bf\fb\f8\15A\b5 \f4?\00\f0w)\a2`\cd\bf\b1\f4>\da\82\07\f4?\00\90\95\04\01\c0\cc\bf\8f\feW]\8f\ee\f3?\00\10\89V) \cc\bf\e9L\0b\a0\d9\d5\f3?\00\10\81\8d\17\81\cb\bf+\c1\10\c0`\bd\f3?\00\d0\d3\cc\c9\e2\ca\bf\b8\dau+$\a5\f3?\00\90\12.@E\ca\bf\02\d0\9f\cd\22\8d\f3?\00\f0\1dhw\a8\c9\bf\1cz\84\c5[u\f3?\000Him\0c\c9\bf\e26\adI\ce]\f3?\00\c0E\a6 q\c8\bf@\d4M\98yF\f3?\000\14\b4\8f\d6\c7\bf$\cb\ff\ce\5c/\f3?\00pb<\b8<\c7\bfI\0d\a1uw\18\f3?\00`7\9b\9a\a3\c6\bf\909>7\c8\01\f3?\00\a0\b7T1\0b\c6\bfA\f8\95\bbN\eb\f2?\000$v}s\c5\bf\d1\a9\19\02\0a\d5\f2?\000\c2\8f{\dc\c4\bf*\fd\b7\a8\f9\be\f2?\00\00\d2Q,F\c4\bf\ab\1b\0cz\1c\a9\f2?\00\00\83\bc\8a\b0\c3\bf0\b5\14`r\93\f2?\00\00Ik\99\1b\c3\bf\f5\a1WW\fa}\f2?\00@\a4\90T\87\c2\bf\bf;\1d\9b\b3h\f2?\00\a0y\f8\b9\f3\c1\bf\bd\f5\8f\83\9dS\f2?\00\a0,%\c8`\c1\bf;\08\c9\aa\b7>\f2?\00 \f7W\7f\ce\c0\bf\b6@\a9+\01*\f2?\00\a0\feI\dc<\c0\bf2A\cc\96y\15\f2?\00\80K\bc\bdW\bf\bf\9b\fc\d2\1d \01\f2?\00@@\96\087\be\bf\0bHMI\f4\ec\f1?\00@\f9>\98\17\bd\bfie\8fR\f5\d8\f1?\00\a0\d8Ng\f9\bb\bf|~W\11#\c5\f1?\00`/ y\dc\ba\bf\e9&\cbt|\b1\f1?\00\80(\e7\c3\c0\b9\bf\b6\1a,\0c\01\9e\f1?\00\c0r\b3F\a6\b8\bf\bdp\b6{\b0\8a\f1?\00\00\ac\b3\01\8d\b7\bf\b6\bc\ef%\8aw\f1?\00\008E\f1t\b6\bf\da1L5\8dd\f1?\00\80\87m\0e^\b5\bf\dd_'\90\b9Q\f1?\00\e0\a1\de\5cH\b4\bfL\d22\a4\0e?\f1?\00\a0jM\d93\b3\bf\da\f9\10r\8b,\f1?\00`\c5\f8y \b2\bf1\b5\ec(0\1a\f1?\00 b\98F\0e\b1\bf\af4\84\da\fb\07\f1?\00\00\d2jl\fa\af\bf\b3kN\0f\ee\f5\f0?\00@wJ\8d\da\ad\bf\ce\9f*]\06\e4\f0?\00\00\85\e4\ec\bc\ab\bf!\a5,cD\d2\f0?\00\c0\12@\89\a1\a9\bf\1a\98\e2|\a7\c0\f0?\00\c0\023X\88\a7\bf\d16\c6\83/\af\f0?\00\80\d6g^q\a5\bf9\13\a0\98\db\9d\f0?\00\80eI\8a\5c\a3\bf\df\e7R\af\ab\8c\f0?\00@\15d\e3I\a1\bf\fb(N/\9f{\f0?\00\80\eb\82\c0r\9e\bf\19\8f5\8c\b5j\f0?\00\80RR\f1U\9a\bf,\f9\ec\a5\eeY\f0?\00\80\81\cfb=\96\bf\90,\d1\cdII\f0?\00\00\aa\8c\fb(\92\bf\a9\ad\f0\c6\c68\f0?\00\00\f9 {1\8c\bf\a92y\13e(\f0?\00\00\aa]5\19\84\bfHs\ea'$\18\f0?\00\00\ec\c2\03\12x\bf\95\b1\14\06\04\08\f0?\00\00$y\09\04`\bf\1a\fa&\f7\1f\e0\ef?\00\00\90\84\f3\efo?t\eaa\c2\1c\a1\ef?\00\00=5A\dc\87?.\99\81\b0\10c\ef?\00\80\c2\c4\a3\ce\93?\cd\ad\ee<\f6%\ef?\00\00\89\14\c1\9f\9b?\e7\13\91\03\c8\e9\ee?\00\00\11\ce\d8\b0\a1?\ab\b1\cbx\80\ae\ee?\00\c0\01\d0[\8a\a5?\9b\0c\9d\a2\1at\ee?\00\80\d8@\83\5c\a9?\b5\99\0a\83\91:\ee?\00\80W\efj'\ad?V\9a`\09\e0\01\ee?\00\c0\98\e5\98u\b0?\98\bbw\e5\01\ca\ed?\00 \0d\e3\f5S\b2?\03\91|\0b\f2\92\ed?\00\008\8b\dd.\b4?\ce\5c\fbf\ac\5c\ed?\00\c0W\87Y\06\b6?\9d\de^\aa,'\ed?\00\00j5v\da\b7?\cd,k>n\f2\ec?\00`\1cNC\ab\b9?\02y\a7\a2m\be\ec?\00`\0d\bb\c7x\bb?m\087m&\8b\ec?\00 \e72\13C\bd?\04X]\bd\94X\ec?\00`\deq1\0a\bf?\8c\9f\bb3\b5&\ec?\00@\91+\15g\c0??\e7\ec\ee\83\f5\eb?\00\b0\92\82\85G\c1?\c1\96\dbu\fd\c4\eb?\000\ca\cdn&\c2?(J\86\0c\1e\95\eb?\00P\c5\a6\d7\03\c3?,>\ef\c5\e2e\eb?\00\103<\c3\df\c3?\8b\88\c9gH7\eb?\00\80zk6\ba\c4?J0\1d!K\09\eb?\00\f0\d1(9\93\c5?~\ef\f2\85\e8\db\ea?\00\f0\18$\cdj\c6?\a2=`1\1d\af\ea?\00\90f\ec\f8@\c7?\a7X\d3?\e6\82\ea?\00\f0\1a\f5\c0\15\c8?\8bs\09\ef@W\ea?\00\80\f6T)\e9\c8?'K\ab\90*,\ea?\00@\f8\026\bb\c9?\d1\f2\93\13\a0\01\ea?\00\00,\1c\ed\8b\ca?\1b<\db$\9f\d7\e9?\00\d0\01\5cQ[\cb?\90\b1\c7\05%\ae\e9?\00\c0\bc\ccg)\cc?/\ce\97\f2.\85\e9?\00`H\d55\f6\cc?uK\a4\ee\ba\5c\e9?\00\c0F4\bd\c1\cd?8H\e7\9d\c64\e9?\00\e0\cf\b8\01\8c\ce?\e6Rg/O\0d\e9?\00\90\17\c0\09U\cf?\9d\d7\ff\8eR\e6\e8?\00\b8\1f\12l\0e\d0?|\00\cc\9f\ce\bf\e8?\00\d0\93\0e\b8q\d0?\0e\c3\be\da\c0\99\e8?\00p\86\9ek\d4\d0?\fb\17#\aa't\e8?\00\d0K3\876\d1?\08\9a\b3\ac\00O\e8?\00H#g\0d\98\d1?U>e\e8I*\e8?\00\80\cc\e0\ff\f8\d1?`\02\f4\95\01\06\e8?\00hc\d7_Y\d2?)\a3\e0c%\e2\e7?\00\a8\14\090\b9\d2?\ad\b5\dcw\b3\be\e7?\00`C\10r\18\d3?\c2%\97g\aa\9b\e7?\00\18\ecm&w\d3?W\06\17\f2\07y\e7?\000\af\fbO\d5\d3?\0c\13\d6\db\caV\e7?\00\e0/\e3\ee2\d4?k\b6O\01\00\10\e6?<[B\91l\02~<\95\b4M\03\000\e6?A]\00H\ea\bf\8d<x\d4\94\0d\00P\e6?\b7\a5\d6\86\a7\7f\8e<\adoN\07\00p\e6?L%Tk\ea\fca<\ae\0f\df\fe\ff\8f\e6?\fd\0eYL'~|\bc\bc\c5c\07\00\b0\e6?\01\da\dcHh\c1\8a\bc\f6\c1\5c\1e\00\d0\e6?\11\93I\9d\1c?\83<>\f6\05\eb\ff\ef\e6?S-\e2\1a\04\80~\bc\80\97\86\0e\00\10\e7?Ry\09qf\ff{<\12\e9g\fc\ff/\e7?$\87\bd&\e2\00\8c<j\11\81\df\ffO\e7?\d2\01\f1n\91\02n\bc\90\9cg\0f\00p\e7?t\9cT\cdq\fcg\bc5\c8~\fa\ff\8f\e7?\83\04\f5\9e\c1\be\81<\e6\c2 \fe\ff\af\e7?ed\cc)\17~p\bc\00\c9?\ed\ff\cf\e7?\1c\8b{\08r\80\80\bcv\1a&\e9\ff\ef\e7?\ae\f9\9dm(\c0\8d<\e8\a3\9c\04\00\10\e8?3L\e5Q\d2\7f\89<\8f,\93\17\000\e8?\81\f30\b6\e9\fe\8a\bc\9cs3\06\00P\e8?\bc5ek\bf\bf\89<\c6\89B \00p\e8?u{\11\f3e\bf\8b\bc\04y\f5\eb\ff\8f\e8?W\cb=\a2n\00\89\bc\df\04\bc\22\00\b0\e8?\0aK\e08\df\00}\bc\8a\1b\0c\e5\ff\cf\e8?\05\9f\ffFq\00\88\bcC\8e\91\fc\ff\ef\e8?8pz\d0{\81\83<\c7_\fa\1e\00\10\e9?\03\b4\dfv\91>\89<\b9{F\13\000\e9?v\02\98KN\80\7f<o\07\ee\e6\ffO\e9?.b\ff\d9\f0~\8f\bc\d1\12<\de\ffo\e9?\ba8&\96\aa\82p\bc\0d\8aE\f4\ff\8f\e9?\ef\a8d\91\1b\80\87\bc>.\98\dd\ff\af\e9?7\93Z\8a\e0@\87\bcf\fbI\ed\ff\cf\e9?\00\e0\9b\c1\08\ce?<Q\9c\f1 \00\f0\e9?\0a[\88'\aa?\8a\bc\06\b0E\11\00\10\ea?V\daX\99H\fft<\fa\f6\bb\07\000\ea?\18m+\8a\ab\be\8c<y\1d\97\10\00P\ea?0yx\dd\ca\fe\88<H.\f5\1d\00p\ea?\db\ab\d8=vA\8f\bcR3Y\1c\00\90\ea?\12v\c2\84\02\bf\8e\bcK>O*\00\b0\ea?_?\ff<\04\fdi\bc\d1\1e\ae\d7\ff\cf\ea?\b4p\90\12\e7>\82\bcx\04Q\ee\ff\ef\ea?\a3\de\0e\e0>\06j<[\0de\db\ff\0f\eb?\b9\0a\1f8\c8\06Z<W\ca\aa\fe\ff/\eb?\1d<#t\1e\01y\bc\dc\ba\95\d9\ffO\eb?\9f*\86h\10\ffy\bc\9ce\9e$\00p\eb?>O\86\d0E\ff\8a<@\16\87\f9\ff\8f\eb?\f9\c3\c2\96w\fe|<O\cb\04\d2\ff\af\eb?\c4+\f2\ee'\ffc\bcE\5cA\d2\ff\cf\eb?!\ea;\ee\b7\ffl\bc\df\09c\f8\ff\ef\eb?\5c\0b.\97\03A\81\bcSv\b5\e1\ff\0f\ec?\19j\b7\94d\c1\8b<\e3W\fa\f1\ff/\ec?\ed\c60\8d\ef\fed\bc$\e4\bf\dc\ffO\ec?uG\ec\bch?\84\bc\f7\b9T\ed\ffo\ec?\ec\e0S\f0\a3~\84<\d5\8f\99\eb\ff\8f\ec?\f1\92\f9\8d\06\83s<\9a!%!\00\b0\ec?\04\0e\18d\8e\fdh\bc\9cF\94\dd\ff\cf\ec?r\ea\c7\1c\be~\8e<v\c4\fd\ea\ff\ef\ec?\fe\88\9f\ad9\be\8e<+\f8\9a\16\00\10\ed?qZ\b9\a8\91}u<\1d\f7\0f\0d\000\ed?\da\c7pi\90\c1\89<\c4\0fy\ea\ffO\ed?\0c\feX\c57\0eX\bc\e5\87\dc.\00p\ed?D\0f\c1M\d6\80\7f\bc\aa\82\dc!\00\90\ed?\5c\5c\fd\94\8f|t\bc\83\02k\d8\ff\af\ed?~a!\c5\1d\7f\8c<9Gl)\00\d0\ed?S\b1\ff\b2\9e\01\88<\f5\90D\e5\ff\ef\ed?\89\ccR\c6\d2\00n<\94\f6\ab\cd\ff\0f\ee?\d2i- @\83\7f\bc\dd\c8R\db\ff/\ee?d\08\1b\ca\c1\00{<\ef\16B\f2\ffO\ee?Q\ab\94\b0\a8\ffr<\11^\8a\e8\ffo\ee?Y\be\ef\b1s\f6W\bc\0d\ff\9e\11\00\90\ee?\01\c8\0b^\8d\80\84\bcD\17\a5\df\ff\af\ee?\b5 C\d5\06\00x<\a1\7f\12\1a\00\d0\ee?\92\5cV`\f8\02P\bc\c4\bc\ba\07\00\f0\ee?\11\e65]D@\85\bc\02\8dz\f5\ff\0f\ef?\05\91\ef91\fbO\bc\c7\8a\e5\1e\000\ef?U\11s\f2\ac\81\8a<\944\82\f5\ffO\ef?C\c7\d7\d4A?\8a<kL\a9\fc\ffo\ef?ux\98\1c\f4\02b\bcA\c4\f9\e1\ff\8f\ef?K\e7w\f4\d1}w<~\e3\e0\d2\ff\af\ef?1\a3|\9a\19\01o\bc\9e\e4w\1c\00\d0\ef?\b1\ac\ceK\ee\81q<1\c3\e0\f7\ff\ef\ef?Z\87p\017\05n\bcn`e\f4\ff\0f\f0?\da\0a\1cI\ad~\8a\bcXz\86\f3\ff/\f0?\e0\b2\fc\c3i\7f\97\bc\17\0d\fc\fd\ffO\f0?[\94\cb4\fe\bf\97<\82M\cd\03\00p\f0?\cbV\e4\c0\83\00\82<\e8\cb\f2\f9\ff\8f\f0?\1au7\be\df\ffm\bce\da\0c\01\00\b0\f0?\eb&\e6\ae\7f?\91\bc8\d3\a4\01\00\d0\f0?\f7\9fHy\fa}\80<\fd\fd\da\fa\ff\ef\f0?\c0k\d6p\05\04w\bc\96\fd\ba\0b\00\10\f1?b\0bm\84\d4\80\8e<]\f4\e5\fa\ff/\f1?\ef6\fdd\fa\bf\9d<\d9\9a\d5\0d\00P\f1?\aeP\12pw\00\9a<\9aU!\0f\00p\f1?\ee\de\e3\e2\f9\fd\8d<&T'\fc\ff\8f\f1?sr;\dc0\00\91<Y<=\12\00\b0\f1?\88\01\03\80y\7f\99<\b7\9e)\f8\ff\cf\f1?g\8c\9f\ab2\f9e\bc\00\d4\8a\f4\ff\ef\f1?\eb[\a7\9d\bf\7f\93<\a4\86\8b\0c\00\10\f2?\22[\fd\91k\80\9f<\03C\85\03\000\f2?3\bf\9f\eb\c2\ff\93<\84\f6\bc\ff\ffO\f2?r..~\e7\01v<\d9!)\f5\ffo\f2?a\0c\7fv\bb\fc\7f<<:\93\14\00\90\f2?+A\02<\ca\02r\bc\13cU\14\00\b0\f2?\02\1f\f23\82\80\92\bc;R\fe\eb\ff\cf\f2?\f2\dcO8~\ff\88\bc\96\ad\b8\0b\00\f0\f2?\c5A0PQ\ff\85\bc\af\e2z\fb\ff\0f\f3?\9d(^\88q\00\81\bc\7f_\ac\fe\ff/\f3?\15\b7\b7?]\ff\91\bcVg\a6\0c\00P\f3?\bd\82\8b\22\82\7f\95<!\f7\fb\11\00p\f3?\cc\d5\0d\c4\ba\00\80<\b9/Y\f9\ff\8f\f3?Q\a7\b2-\9d?\94\bcB\d2\dd\04\00\b0\f3?\e18vpk\7f\85<W\c9\b2\f5\ff\cf\f3?1\12\bf\10:\02z<\18\b4\b0\ea\ff\ef\f3?\b0R\b1fm\7f\98<\f4\af2\15\00\10\f4?$\85\19_7\f8g<)\8bG\17\000\f4?CQ\dcr\e6\01\83<c\b4\95\e7\ffO\f4?Z\89\b2\b8i\ff\89<\e0u\04\e8\ffo\f4?T\f2\c2\9b\b1\c0\95\bc\e7\c1o\ef\ff\8f\f4?r*:\f2\09@\9b<\04\a7\be\e5\ff\af\f4?E}\0d\bf\b7\ff\94\bc\de'\10\17\00\d0\f4?=j\dcqd\c0\99\bc\e2>\f0\0f\00\f0\f4?\1cS\85\0b\89\7f\97<\d1K\dc\12\00\10\f5?6\a4fqe\04`<z'\05\16\000\f5?\092#\ce\ce\bf\96\bcLp\db\ec\ffO\f5?\d7\a1\05\05r\02\89\bc\a9T_\ef\ffo\f5?\12d\c9\0e\e6\bf\9b<\12\10\e6\17\00\90\f5?\90\ef\af\81\c5~\88<\92>\c9\03\00\b0\f5?\c0\0c\bf\0a\08A\9f\bc\bc\19I\1d\00\d0\f5?)G%\fb*\81\98\bc\89z\b8\e7\ff\ef\f5?\04i\ed\80\b7~\94\bc-+   0X0x\00(null)\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\19\00\0a\00\19\19\19\00\00\00\00\05\00\00\00\00\00\00\09\00\00\00\00\0b\00\00\00\00\00\00\00\00\19\00\11\0a\19\19\19\03\0a\07\00\01\1b\09\0b\18\00\00\09\06\0b\00\00\0b\00\06\19\00\00\00\19\19\19\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\0e\00\00\00\00\00\00\00\00\19\00\0a\0d\19\19\19\00\0d\00\00\02\00\09\0e\00\00\00\09\00\0e\00\00\0e\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\0c\00\00\00\00\00\00\00\00\00\00\00\13\00\00\00\00\13\00\00\00\00\09\0c\00\00\00\00\00\0c\00\00\0c\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\10\00\00\00\00\00\00\00\00\00\00\00\0f\00\00\00\04\0f\00\00\00\00\09\10\00\00\00\00\00\10\00\00\10\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\12\00\00\00\00\00\00\00\00\00\00\00\11\00\00\00\00\11\00\00\00\00\09\12\00\00\00\00\00\12\00\00\12\00\00\1a\00\00\00\1a\1a\1a\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\1a\00\00\00\1a\1a\1a\00\00\00\00\00\00\09\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\14\00\00\00\00\00\00\00\00\00\00\00\17\00\00\00\00\17\00\00\00\00\09\14\00\00\00\00\00\14\00\00\14\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\16\00\00\00\00\00\00\00\00\00\00\00\15\00\00\00\00\15\00\00\00\00\09\16\00\00\00\00\00\16\00\00\16\00\00Support for formatting long double values is currently disabled.\0aTo enable it, .\0a\00\00\00\00\00\00\00\00\00\00\00\00\00\00\000123456789ABCDEF-0X+0X 0X-0x+0x 0x\00inf\00INF\00nan\00NAN\00.\00\00\00\00\00\00\00\00\00\00\00\00\03\00\00\00\04\00\00\00\04\00\00\00\06\00\00\00\83\f9\a2\00DNn\00\fc)\15\00\d1W'\00\dd4\f5\00b\db\c0\00<\99\95\00A\90C\00cQ\fe\00\bb\de\ab\00\b7a\c5\00:n$\00\d2MB\00I\06\e0\00\09\ea.\00\1c\92\d1\00\eb\1d\fe\00)\b1\1c\00\e8>\a7\00\f55\82\00D\bb.\00\9c\e9\84\00\b4&p\00A~_\00\d6\919\00S\839\00\9c\f49\00\8b_\84\00(\f9\bd\00\f8\1f;\00\de\ff\97\00\0f\98\05\00\11/\ef\00\0aZ\8b\00m\1fm\00\cf~6\00\09\cb'\00FO\b7\00\9ef?\00-\ea_\00\ba'u\00\e5\eb\c7\00={\f1\00\f79\07\00\92R\8a\00\fbk\ea\00\1f\b1_\00\08]\8d\000\03V\00{\fcF\00\f0\abk\00 \bc\cf\006\f4\9a\00\e3\a9\1d\00^a\91\00\08\1b\e6\00\85\99e\00\a0\14_\00\8d@h\00\80\d8\ff\00'sM\00\06\061\00\caV\15\00\c9\a8s\00{\e2`\00k\8c\c0\00\19\c4G\00\cdg\c3\00\09\e8\dc\00Y\83*\00\8bv\c4\00\a6\1c\96\00D\af\dd\00\19W\d1\00\a5>\05\00\05\07\ff\003~?\00\c22\e8\00\98O\de\00\bb}2\00&=\c3\00\1ek\ef\00\9f\f8^\005\1f:\00\7f\f2\ca\00\f1\87\1d\00|\90!\00j$|\00\d5n\fa\000-w\00\15;C\00\b5\14\c6\00\c3\19\9d\00\ad\c4\c2\00,MA\00\0c\00]\00\86}F\00\e3q-\00\9b\c6\9a\003b\00\00\b4\d2|\00\b4\a7\97\007U\d5\00\d7>\f6\00\a3\10\18\00Mv\fc\00d\9d*\00p\d7\ab\00c|\f8\00z\b0W\00\17\15\e7\00\c0IV\00;\d6\d9\00\a7\848\00$#\cb\00\d6\8aw\00ZT#\00\00\1f\b9\00\f1\0a\1b\00\19\ce\df\00\9f1\ff\00f\1ej\00\99Wa\00\ac\fbG\00~\7f\d8\00\22e\b7\002\e8\89\00\e6\bf`\00\ef\c4\cd\00l6\09\00]?\d4\00\16\de\d7\00X;\de\00\de\9b\92\00\d2\22(\00(\86\e8\00\e2XM\00\c6\ca2\00\08\e3\16\00\e0}\cb\00\17\c0P\00\f3\1d\a7\00\18\e0[\00.\134\00\83\12b\00\83H\01\00\f5\8e[\00\ad\b0\7f\00\1e\e9\f2\00HJC\00\10g\d3\00\aa\dd\d8\00\ae_B\00ja\ce\00\0a(\a4\00\d3\99\b4\00\06\a6\f2\00\5cw\7f\00\a3\c2\83\00a<\88\00\8asx\00\af\8cZ\00o\d7\bd\00-\a6c\00\f4\bf\cb\00\8d\81\ef\00&\c1g\00U\caE\00\ca\d96\00(\a8\d2\00\c2a\8d\00\12\c9w\00\04&\14\00\12F\9b\00\c4Y\c4\00\c8\c5D\00M\b2\91\00\00\17\f3\00\d4C\ad\00)I\e5\00\fd\d5\10\00\00\be\fc\00\1e\94\cc\00p\ce\ee\00\13>\f5\00\ec\f1\80\00\b3\e7\c3\00\c7\f8(\00\93\05\94\00\c1q>\00.\09\b3\00\0bE\f3\00\88\12\9c\00\ab {\00.\b5\9f\00G\92\c2\00{2/\00\0cUm\00r\a7\90\00k\e7\1f\001\cb\96\00y\16J\00Ay\e2\00\f4\df\89\00\e8\94\97\00\e2\e6\84\00\991\97\00\88\edk\00__6\00\bb\fd\0e\00H\9a\b4\00g\a4l\00qrB\00\8d]2\00\9f\15\b8\00\bc\e5\09\00\8d1%\00\f7t9\000\05\1c\00\0d\0c\01\00K\08h\00,\eeX\00G\aa\90\00t\e7\02\00\bd\d6$\00\f7}\a6\00nHr\00\9f\16\ef\00\8e\94\a6\00\b4\91\f6\00\d1SQ\00\cf\0a\f2\00 \983\00\f5K~\00\b2ch\00\dd>_\00@]\03\00\85\89\7f\00UR)\007d\c0\00m\d8\10\002H2\00[Lu\00Nq\d4\00ETn\00\0b\09\c1\00*\f5i\00\14f\d5\00'\07\9d\00]\04P\00\b4;\db\00\eav\c5\00\87\f9\17\00Ik}\00\1d'\ba\00\96i)\00\c6\cc\ac\00\ad\14T\00\90\e2j\00\88\d9\89\00,rP\00\04\a4\be\00w\07\94\00\f30p\00\00\fc'\00\eaq\a8\00f\c2I\00d\e0=\00\97\dd\83\00\a3?\97\00C\94\fd\00\0d\86\8c\001A\de\00\929\9d\00\ddp\8c\00\17\b7\e7\00\08\df;\00\157+\00\5c\80\a0\00Z\80\93\00\10\11\92\00\0f\e8\d8\00l\80\af\00\db\ffK\008\90\0f\00Y\18v\00b\a5\15\00a\cb\bb\00\c7\89\b9\00\10@\bd\00\d2\f2\04\00Iu'\00\eb\b6\f6\00\db\22\bb\00\0a\14\aa\00\89&/\00d\83v\00\09;3\00\0e\94\1a\00Q:\aa\00\1d\a3\c2\00\af\ed\ae\00\5c&\12\00m\c2M\00-z\9c\00\c0V\97\00\03?\83\00\09\f0\f6\00+@\8c\00m1\99\009\b4\07\00\0c \15\00\d8\c3[\00\f5\92\c4\00\c6\adK\00N\ca\a5\00\a77\cd\00\e6\a96\00\ab\92\94\00\ddBh\00\19c\de\00v\8c\ef\00h\8bR\00\fc\db7\00\ae\a1\ab\00\df\151\00\00\ae\a1\00\0c\fb\da\00dMf\00\ed\05\b7\00)e0\00WV\bf\00G\ff:\00j\f9\b9\00u\be\f3\00(\93\df\00\ab\800\00f\8c\f6\00\04\cb\15\00\fa\22\06\00\d9\e4\1d\00=\b3\a4\00W\1b\8f\006\cd\09\00NB\e9\00\13\be\a4\003#\b5\00\f0\aa\1a\00Oe\a8\00\d2\c1\a5\00\0b?\0f\00[x\cd\00#\f9v\00{\8b\04\00\89\17r\00\c6\a6S\00on\e2\00\ef\eb\00\00\9bJX\00\c4\da\b7\00\aaf\ba\00v\cf\cf\00\d1\02\1d\00\b1\f1-\00\8c\99\c1\00\c3\adw\00\86H\da\00\f7]\a0\00\c6\80\f4\00\ac\f0/\00\dd\ec\9a\00?\5c\bc\00\d0\dem\00\90\c7\1f\00*\db\b6\00\a3%:\00\00\af\9a\00\adS\93\00\b6W\04\00)-\b4\00K\80~\00\da\07\a7\00v\aa\0e\00{Y\a1\00\16\12*\00\dc\b7-\00\fa\e5\fd\00\89\db\fe\00\89\be\fd\00\e4vl\00\06\a9\fc\00>\80p\00\85n\15\00\fd\87\ff\00(>\07\00ag3\00*\18\86\00M\bd\ea\00\b3\e7\af\00\8fmn\00\95g9\001\bf[\00\84\d7H\000\df\16\00\c7-C\00%a5\00\c9p\ce\000\cb\b8\00\bfl\fd\00\a4\00\a2\00\05l\e4\00Z\dd\a0\00!oG\00b\12\d2\00\b9\5c\84\00paI\00kV\e0\00\99R\01\00PU7\00\1e\d5\b7\003\f1\c4\00\13n_\00]0\e4\00\85.\a9\00\1d\b2\c3\00\a126\00\08\b7\a4\00\ea\b1\d4\00\16\f7!\00\8fi\e4\00'\ffw\00\0c\03\80\00\8d@-\00O\cd\a0\00 \a5\99\00\b3\a2\d3\00/]\0a\00\b4\f9B\00\11\da\cb\00}\be\d0\00\9b\db\c1\00\ab\17\bd\00\ca\a2\81\00\08j\5c\00.U\17\00'\00U\00\7f\14\f0\00\e1\07\86\00\14\0bd\00\96A\8d\00\87\be\de\00\da\fd*\00k%\b6\00{\894\00\05\f3\fe\00\b9\bf\9e\00hjO\00J*\a8\00O\c4Z\00-\f8\bc\00\d7Z\98\00\f4\c7\95\00\0dM\8d\00 :\a6\00\a4W_\00\14?\b1\00\808\95\00\cc \01\00q\dd\86\00\c9\de\b6\00\bf`\f5\00Me\11\00\01\07k\00\8c\b0\ac\00\b2\c0\d0\00QUH\00\1e\fb\0e\00\95r\c3\00\a3\06;\00\c0@5\00\06\dc{\00\e0E\cc\00N)\fa\00\d6\ca\c8\00\e8\f3A\00|d\de\00\9bd\d8\00\d9\be1\00\a4\97\c3\00wX\d4\00i\e3\c5\00\f0\da\13\00\ba:<\00F\18F\00Uu_\00\d2\bd\f5\00n\92\c6\00\ac.]\00\0eD\ed\00\1c>B\00a\c4\87\00)\fd\e9\00\e7\d6\f3\00\22|\ca\00o\915\00\08\e0\c5\00\ff\d7\8d\00nj\e2\00\b0\fd\c6\00\93\08\c1\00|]t\00k\ad\b2\00\cdn\9d\00>r{\00\c6\11j\00\f7\cf\a9\00)s\df\00\b5\c9\ba\00\b7\00Q\00\e2\b2\0d\00t\ba$\00\e5}`\00t\d8\8a\00\0d\15,\00\81\18\0c\00~f\94\00\01)\16\00\9fzv\00\fd\fd\be\00VE\ef\00\d9~6\00\ec\d9\13\00\8b\ba\b9\00\c4\97\fc\001\a8'\00\f1n\c3\00\94\c56\00\d8\a8V\00\b4\a8\b5\00\cf\cc\0e\00\12\89-\00oW4\00,V\89\00\99\ce\e3\00\d6 \b9\00k^\aa\00>*\9c\00\11_\cc\00\fd\0bJ\00\e1\f4\fb\00\8e;m\00\e2\86,\00\e9\d4\84\00\fc\b4\a9\00\ef\ee\d1\00.5\c9\00/9a\008!D\00\1b\d9\c8\00\81\fc\0a\00\fbJj\00/\1c\d8\00S\b4\84\00N\99\8c\00T\22\cc\00*U\dc\00\c0\c6\d6\00\0b\19\96\00\1ap\b8\00i\95d\00&Z`\00?R\ee\00\7f\11\0f\00\f4\b5\11\00\fc\cb\f5\004\bc-\004\bc\ee\00\e8]\cc\00\dd^`\00g\8e\9b\00\923\ef\00\c9\17\b8\00aX\9b\00\e1W\bc\00Q\83\c6\00\d8>\10\00\ddqH\00-\1c\dd\00\af\18\a1\00!,F\00Y\f3\d7\00\d9z\98\00\9eT\c0\00O\86\fa\00V\06\fc\00\e5y\ae\00\89\226\008\ad\22\00g\93\dc\00U\e8\aa\00\82&8\00\ca\e7\9b\00Q\0d\a4\00\993\b1\00\a9\d7\0e\00i\05H\00e\b2\f0\00\7f\88\a7\00\88L\97\00\f9\d16\00!\92\b3\00{\82J\00\98\cf!\00@\9f\dc\00\dcGU\00\e1t:\00g\ebB\00\fe\9d\df\00^\d4_\00{g\a4\00\ba\acz\00U\f6\a2\00+\88#\00A\baU\00Yn\08\00!*\86\009G\83\00\89\e3\e6\00\e5\9e\d4\00I\fb@\00\ffV\e9\00\1c\0f\ca\00\c5Y\8a\00\94\fa+\00\d3\c1\c5\00\0f\c5\cf\00\dbZ\ae\00G\c5\86\00\85Cb\00!\86;\00,y\94\00\10a\87\00*L{\00\80,\1a\00C\bf\12\00\88&\90\00x<\89\00\a8\c4\e4\00\e5\db{\00\c4:\c2\00&\f4\ea\00\f7g\8a\00\0d\92\bf\00e\a3+\00=\93\b1\00\bd|\0b\00\a4Q\dc\00'\ddc\00i\e1\dd\00\9a\94\19\00\a8)\95\00h\ce(\00\09\ed\b4\00D\9f \00N\98\ca\00p\82c\00~|#\00\0f\b92\00\a7\f5\8e\00\14V\e7\00!\f1\08\00\b5\9d*\00o~M\00\a5\19Q\00\b5\f9\ab\00\82\df\d6\00\96\dda\00\166\02\00\c4:\9f\00\83\a2\a1\00r\edm\009\8dz\00\82\b8\a9\00k2\5c\00F'[\00\004\ed\00\d2\00w\00\fc\f4U\00\01YM\00\e0q\80\00\00\00\00\00\00\00\00\00\00\00\00@\fb!\f9?\00\00\00\00-Dt>\00\00\00\80\98F\f8<\00\00\00`Q\ccx;\00\00\00\80\83\1b\f09\00\00\00@ %z8\00\00\00\80\22\82\e36\00\00\00\00\1d\f3i5abort\00\00"))

fib-wasm.mo.wasm:	file format wasm 0x1

Section Details:

Type[42]:
 - type[0] (i32, i32, i32, i32) -> i32
 - type[1] (i32, i32, i32) -> nil
 - type[2] (i32, i32, i32) -> i32
 - type[3] () -> i32
 - type[4] (i32, i32, i32, i32) -> nil
 - type[5] (i32) -> i32
 - type[6] (i32, i32) -> i32
 - type[7] (i64) -> i32
 - type[8] (i32) -> i64
 - type[9] (i32, i32) -> nil
 - type[10] (i32) -> nil
 - type[11] (i32, i32, i32, i32, i32) -> i32
 - type[12] (f64, f64) -> f64
 - type[13] (f64) -> f64
 - type[14] (f64) -> i32
 - type[15] () -> nil
 - type[16] (i64, i64) -> i64
 - type[17] () -> i32
 - type[18] (i32, i32, i32) -> i32
 - type[19] (i32) -> i32
 - type[20] (i32, i32) -> nil
 - type[21] () -> nil
 - type[22] (i32, i32, i32) -> nil
 - type[23] (i32) -> nil
 - type[24] (i32, i32, i32, i32) -> nil
 - type[25] (i32, i32, i32, i32, i32) -> i32
 - type[26] (i32, i32) -> i32
 - type[27] (i32) -> i64
 - type[28] (i64) -> i32
 - type[29] (f64) -> i32
 - type[30] (f64, f64) -> f64
 - type[31] (f64) -> f64
 - type[32] (i32, i64) -> nil
 - type[33] (i32, i32, i32, i32) -> i32
 - type[34] (f64, i32) -> f64
 - type[35] (i32, i32, i32, i32, i32) -> nil
 - type[36] (i64, i32) -> i32
 - type[37] (i32) -> f64
 - type[38] (i32, f64) -> f64
 - type[39] (f64, i32) -> i32
 - type[40] (f64, f64, i32) -> f64
 - type[41] () -> nil
Import[1]:
 - func[0] sig=0 <wasi_unstable.fd_write> <- wasi_unstable.fd_write
Function[315]:
 - func[1] sig=5 <alloc_bytes>
 - func[2] sig=5 <alloc_words>
 - func[3] sig=10 <grow_memory>
 - func[4] sig=9 <print_ptr>
 - func[5] sig=15 <bigint_trap>
 - func[6] sig=9 <rts_trap>
 - func[7] sig=6 <@immut_array_get>
 - func[8] sig=6 <@mut_array_get>
 - func[9] sig=6 <@immut_array_size>
 - func[10] sig=6 <@mut_array_size>
 - func[11] sig=6 <@mut_array_put>
 - func[12] sig=6 <@immut_array_keys>
 - func[13] sig=6 <@mut_array_keys>
 - func[14] sig=6 <@immut_array_vals>
 - func[15] sig=6 <@mut_array_vals>
 - func[16] sig=6 <@blob_size>
 - func[17] sig=6 <@blob_bytes>
 - func[18] sig=6 <@text_size>
 - func[19] sig=6 <@text_chars>
 - func[20] sig=11 <@text_of_num>
 - func[21] sig=0 <@left_pad>
 - func[22] sig=6 <@digits_dec>
 - func[23] sig=6 <@text_of_Nat>
 - func[24] sig=6 <@text_of_Int>
 - func[25] sig=6 <@digits_hex>
 - func[26] sig=6 <@text_of_Word>
 - func[27] sig=6 <@int64ToInt>
 - func[28] sig=6 <@int32ToInt>
 - func[29] sig=6 <@int16ToInt>
 - func[30] sig=6 <@int8ToInt>
 - func[31] sig=6 <@nat64ToNat>
 - func[32] sig=6 <@nat32ToNat>
 - func[33] sig=6 <@nat16ToNat>
 - func[34] sig=6 <@nat8ToNat>
 - func[35] sig=6 <@word64ToNat>
 - func[36] sig=6 <@word32ToNat>
 - func[37] sig=6 <@word16ToNat>
 - func[38] sig=6 <@word8ToNat>
 - func[39] sig=6 <@text_of_Nat8>
 - func[40] sig=6 <@text_of_Nat16>
 - func[41] sig=6 <@text_of_Nat32>
 - func[42] sig=6 <@text_of_Nat64>
 - func[43] sig=6 <@text_of_Int8>
 - func[44] sig=6 <@text_of_Int16>
 - func[45] sig=6 <@text_of_Int32>
 - func[46] sig=6 <@text_of_Int64>
 - func[47] sig=6 <@text_of_Word8>
 - func[48] sig=6 <@text_of_Word16>
 - func[49] sig=6 <@text_of_Word32>
 - func[50] sig=6 <@text_of_Word64>
 - func[51] sig=6 <@text_of_Float>
 - func[52] sig=6 <@text_of_Bool>
 - func[53] sig=6 <@text_of_Text>
 - func[54] sig=6 <@text_of_Char>
 - func[55] sig=6 <@text_of_Blob>
 - func[56] sig=6 <@text_has_parens>
 - func[57] sig=6 <@text_needs_parens>
 - func[58] sig=2 <@text_of_option>
 - func[59] sig=0 <@text_of_variant>
 - func[60] sig=2 <@text_of_array>
 - func[61] sig=2 <@text_of_array_mut>
 - func[62] sig=10 <@new_async>
 - func[63] sig=6 <fib>
 - func[64] sig=6 <add<Nat16>>
 - func[65] sig=6 <sub<Nat16>>
 - func[66] sig=9 <anon-func-294.16>
 - func[67] sig=9 <anon-func-295.16>
 - func[68] sig=9 <anon-func-332.15>
 - func[69] sig=9 <anon-func-330.15>
 - func[70] sig=1 <enqueue>
 - func[71] sig=9 <fail>
 - func[72] sig=9 <fulfill>
 - func[73] sig=6 <obj_idx>
 - func[74] sig=6 <Text.compare_eq>
 - func[75] sig=5 <unbox_i32>
 - func[76] sig=5 <is_unboxed>
 - func[77] sig=8 <unbox_i64>
 - func[78] sig=5 <Word32->Char>
 - func[79] sig=6 <B_add>
 - func[80] sig=6 <B_lt>
 - func[81] sig=6 <B_eq>
 - func[82] sig=6 <B_gt>
 - func[83] sig=6 <B_sub>
 - func[84] sig=5 <assert_nonneg>
 - func[85] sig=16 <nat_sub>
 - func[86] sig=6 <B_div>
 - func[87] sig=6 <B_rem>
 - func[88] sig=5 <next>
 - func[89] sig=5 <anon-func-93.3>
 - func[90] sig=5 <anon-func-91.3>
 - func[91] sig=5 <next>
 - func[92] sig=5 <anon-func-80.3>
 - func[93] sig=5 <anon-func-78.3>
 - func[94] sig=6 <B_ge>
 - func[95] sig=6 <Array.idx_bigint>
 - func[96] sig=6 <Array.idx>
 - func[97] sig=5 <next>
 - func[98] sig=5 <anon-func-72.3>
 - func[99] sig=5 <next>
 - func[100] sig=5 <anon-func-66.3>
 - func[101] sig=5 <next>
 - func[102] sig=5 <anon-func-60.3>
 - func[103] sig=5 <next>
 - func[104] sig=5 <anon-func-54.3>
 - func[105] sig=1 <anon-func-52.3>
 - func[106] sig=5 <anon-func-50.3>
 - func[107] sig=5 <anon-func-48.3>
 - func[108] sig=6 <anon-func-46.3>
 - func[109] sig=6 <anon-func-44.3>
 - func[110] sig=15 <start>
 - func[111] sig=15 <trans_state4>
 - func[112] sig=15 <trans_state3>
 - func[113] sig=15 <_start>
 - func[114] sig=15 <rts_start>
 - func[115] sig=21 <__wasm_call_ctors>
 - func[116] sig=21 <__wasm_apply_relocs>
 - func[117] sig=19 <alloc_blob>
 - func[118] sig=19 <alloc>
 - func[119] sig=22 <as_memcpy>
 - func[120] sig=18 <as_memcmp>
 - func[121] sig=19 <as_strlen>
 - func[122] sig=20 <trap_with_prefix>
 - func[123] sig=23 <idl_trap_with>
 - func[124] sig=23 <rts_trap_with>
 - func[125] sig=17 <get_version>
 - func[126] sig=17 <version>
 - func[127] sig=20 <leb128_encode>
 - func[128] sig=20 <sleb128_encode>
 - func[129] sig=19 <read_u32_of_leb128>
 - func[130] sig=19 <read_i32_of_sleb128>
 - func[131] sig=24 <parse_idl_header>
 - func[132] sig=23 <skip_leb128>
 - func[133] sig=24 <skip_any>
 - func[134] sig=25 <find_field>
 - func[135] sig=24 <skip_fields>
 - func[136] sig=26 <mp_calloc>
 - func[137] sig=18 <mp_realloc>
 - func[138] sig=20 <mp_free>
 - func[139] sig=17 <bigint_alloc>
 - func[140] sig=19 <bigint_of_word32>
 - func[141] sig=19 <bigint_of_word32_signed>
 - func[142] sig=19 <bigint_to_word32_wrap>
 - func[143] sig=19 <bigint_to_word32_trap>
 - func[144] sig=26 <bigint_to_word32_trap_with>
 - func[145] sig=19 <bigint_to_word32_signed_trap>
 - func[146] sig=27 <bigint_to_word64_wrap>
 - func[147] sig=27 <bigint_to_word64_trap>
 - func[148] sig=27 <bigint_to_word64_signed_trap>
 - func[149] sig=28 <bigint_of_word64>
 - func[150] sig=28 <bigint_of_word64_signed>
 - func[151] sig=26 <bigint_eq>
 - func[152] sig=26 <bigint_ne>
 - func[153] sig=26 <bigint_lt>
 - func[154] sig=26 <bigint_gt>
 - func[155] sig=26 <bigint_le>
 - func[156] sig=26 <bigint_ge>
 - func[157] sig=26 <bigint_add>
 - func[158] sig=26 <bigint_sub>
 - func[159] sig=26 <bigint_mul>
 - func[160] sig=26 <bigint_pow>
 - func[161] sig=26 <bigint_div>
 - func[162] sig=26 <bigint_rem>
 - func[163] sig=19 <bigint_neg>
 - func[164] sig=19 <bigint_abs>
 - func[165] sig=19 <bigint_isneg>
 - func[166] sig=26 <bigint_lsh>
 - func[167] sig=19 <bigint_count_bits>
 - func[168] sig=19 <bigint_leb128_size>
 - func[169] sig=22 <bigint_leb128_encode_go>
 - func[170] sig=20 <bigint_leb128_encode>
 - func[171] sig=19 <bigint_2complement_bits>
 - func[172] sig=19 <bigint_sleb128_size>
 - func[173] sig=20 <bigint_sleb128_encode>
 - func[174] sig=19 <bigint_leb128_decode>
 - func[175] sig=19 <bigint_sleb128_decode>
 - func[176] sig=29 <float_fmt>
 - func[177] sig=30 <float_pow>
 - func[178] sig=31 <float_sin>
 - func[179] sig=31 <float_cos>
 - func[180] sig=31 <float_tan>
 - func[181] sig=31 <float_arcsin>
 - func[182] sig=31 <float_arccos>
 - func[183] sig=31 <float_arctan>
 - func[184] sig=30 <float_arctan2>
 - func[185] sig=31 <float_exp>
 - func[186] sig=31 <float_log>
 - func[187] sig=19 <read_byte>
 - func[188] sig=19 <read_word>
 - func[189] sig=20 <advance>
 - func[190] sig=18 <utf8_check>
 - func[191] sig=20 <utf8_validate>
 - func[192] sig=19 <remember_closure>
 - func[193] sig=19 <recall_closure>
 - func[194] sig=17 <closure_count>
 - func[195] sig=17 <closure_table_loc>
 - func[196] sig=17 <closure_table_size>
 - func[197] sig=26 <text_of_ptr_size>
 - func[198] sig=19 <text_of_cstr>
 - func[199] sig=26 <text_concat>
 - func[200] sig=20 <text_to_buf>
 - func[201] sig=19 <blob_of_text>
 - func[202] sig=19 <text_size>
 - func[203] sig=26 <blob_compare>
 - func[204] sig=26 <text_compare>
 - func[205] sig=25 <text_compare_range>
 - func[206] sig=19 <text_len>
 - func[207] sig=19 <text_singleton>
 - func[208] sig=19 <text_iter>
 - func[209] sig=26 <find_leaf>
 - func[210] sig=19 <text_iter_done>
 - func[211] sig=19 <text_iter_next>
 - func[212] sig=19 <compute_crc32>
 - func[213] sig=19 <blob_iter>
 - func[214] sig=19 <blob_iter_done>
 - func[215] sig=19 <blob_iter_next>
 - func[216] sig=19 <blob_of_ic_url>
 - func[217] sig=26 <compute_crc8>
 - func[218] sig=19 <ic_url_of_blob>
 - func[219] sig=19 <mp_init>
 - func[220] sig=18 <mp_add>
 - func[221] sig=18 <mp_sub>
 - func[222] sig=18 <mp_mul>
 - func[223] sig=23 <mp_zero>
 - func[224] sig=26 <mp_cmp>
 - func[225] sig=20 <mp_set_u32>
 - func[226] sig=20 <mp_set_i32>
 - func[227] sig=19 <mp_get_i32>
 - func[228] sig=19 <mp_get_mag_u32>
 - func[229] sig=32 <mp_set_u64>
 - func[230] sig=32 <mp_set_i64>
 - func[231] sig=27 <mp_get_i64>
 - func[232] sig=27 <mp_get_mag_u64>
 - func[233] sig=33 <mp_div>
 - func[234] sig=26 <mp_init_copy>
 - func[235] sig=26 <mp_neg>
 - func[236] sig=26 <mp_abs>
 - func[237] sig=26 <mp_2expt>
 - func[238] sig=18 <mp_expt_u32>
 - func[239] sig=20 <mp_set>
 - func[240] sig=26 <mp_sqr>
 - func[241] sig=18 <s_mp_add>
 - func[242] sig=26 <mp_cmp_mag>
 - func[243] sig=18 <s_mp_sub>
 - func[244] sig=26 <mp_grow>
 - func[245] sig=23 <mp_clamp>
 - func[246] sig=26 <mp_init_size>
 - func[247] sig=20 <mp_exch>
 - func[248] sig=23 <mp_clear>
 - func[249] sig=26 <mp_copy>
 - func[250] sig=19 <mp_count_bits>
 - func[251] sig=18 <mp_mul_2d>
 - func[252] sig=20 <mp_rshd>
 - func[253] sig=18 <mp_mul_d>
 - func[254] sig=33 <mp_div_2d>
 - func[255] sig=18 <mp_mod_2d>
 - func[256] sig=18 <s_mp_balance_mul>
 - func[257] sig=18 <s_mp_toom_mul>
 - func[258] sig=26 <s_mp_toom_sqr>
 - func[259] sig=26 <s_mp_karatsuba_sqr>
 - func[260] sig=26 <s_mp_sqr_fast>
 - func[261] sig=26 <s_mp_sqr>
 - func[262] sig=18 <s_mp_karatsuba_mul>
 - func[263] sig=33 <s_mp_mul_digs_fast>
 - func[264] sig=33 <s_mp_mul_digs>
 - func[265] sig=26 <mp_init_multi>
 - func[266] sig=20 <mp_clear_multi>
 - func[267] sig=26 <mp_mul_2>
 - func[268] sig=26 <mp_div_2>
 - func[269] sig=18 <mp_div_3>
 - func[270] sig=26 <mp_lshd>
 - func[271] sig=19 <mp_incr>
 - func[272] sig=19 <mp_decr>
 - func[273] sig=18 <mp_add_d>
 - func[274] sig=18 <mp_sub_d>
 - func[275] sig=30 <pow>
 - func[276] sig=31 <sin>
 - func[277] sig=31 <cos>
 - func[278] sig=31 <tan>
 - func[279] sig=31 <asin>
 - func[280] sig=31 <acos>
 - func[281] sig=31 <atan>
 - func[282] sig=30 <atan2>
 - func[283] sig=31 <exp>
 - func[284] sig=31 <log>
 - func[285] sig=31 <floor>
 - func[286] sig=34 <scalbn>
 - func[287] sig=34 <frexp>
 - func[288] sig=26 <strnlen>
 - func[289] sig=18 <memchr>
 - func[290] sig=18 <memset>
 - func[291] sig=18 <memcpy>
 - func[292] sig=33 <snprintf>
 - func[293] sig=33 <vsnprintf>
 - func[294] sig=18 <sn_write>
 - func[295] sig=18 <vfprintf>
 - func[296] sig=25 <printf_core>
 - func[297] sig=22 <pop_arg>
 - func[298] sig=35 <pad>
 - func[299] sig=36 <fmt_u>
 - func[300] sig=21 <long_double_not_supported>
 - func[301] sig=37 <__math_oflow>
 - func[302] sig=37 <__math_uflow>
 - func[303] sig=38 <__math_xflow>
 - func[304] sig=37 <__math_divzero>
 - func[305] sig=31 <__math_invalid>
 - func[306] sig=39 <__rem_pio2>
 - func[307] sig=25 <__rem_pio2_large>
 - func[308] sig=40 <__sin>
 - func[309] sig=30 <__cos>
 - func[310] sig=40 <__tan>
 - func[311] sig=26 <wctomb>
 - func[312] sig=26 <fputs>
 - func[313] sig=21 <abort>
 - func[314] sig=19 <strerror>
 - func[315] sig=41 <link_start>
Table[1]:
 - table[0] type=funcref initial=30 max=30
Memory[1]:
 - memory[0] pages: initial=2
Global[9]:
 - global[0] i32 mutable=1 - init i32=-559038737
 - global[1] i64 mutable=1 - init i64=0
 - global[2] i64 mutable=1 - init i64=0
 - global[3] i64 mutable=1 - init i64=0
 - global[4] i32 mutable=1 - init i32=65536
 - global[5] i32 mutable=1 - init i32=0
 - global[6] i32 mutable=1 - init i32=0
 - global[7] i32 mutable=1 - init i32=0
 - global[8] i32 mutable=0 - init i32=82720
Export[3]:
 - func[113] <_start> -> "_start"
 - memory[0] -> "memory"
 - table[0] -> "table"
Start:
 - start function: 315 <link_start>
Elem[29]:
 - segment[0] flags=0 table=0 count=1 - init i32=8
  - elem[8] = func[22] <@digits_dec>
 - segment[1] flags=0 table=0 count=1 - init i32=7
  - elem[7] = func[25] <@digits_hex>
 - segment[2] flags=0 table=0 count=1 - init i32=4
  - elem[4] = func[66] <anon-func-294.16>
 - segment[3] flags=0 table=0 count=1 - init i32=3
  - elem[3] = func[67] <anon-func-295.16>
 - segment[4] flags=0 table=0 count=1 - init i32=0
  - elem[0] = func[68] <anon-func-332.15>
 - segment[5] flags=0 table=0 count=1 - init i32=1
  - elem[1] = func[69] <anon-func-330.15>
 - segment[6] flags=0 table=0 count=1 - init i32=2
  - elem[2] = func[70] <enqueue>
 - segment[7] flags=0 table=0 count=1 - init i32=5
  - elem[5] = func[71] <fail>
 - segment[8] flags=0 table=0 count=1 - init i32=6
  - elem[6] = func[72] <fulfill>
 - segment[9] flags=0 table=0 count=1 - init i32=9
  - elem[9] = func[88] <next>
 - segment[10] flags=0 table=0 count=1 - init i32=10
  - elem[10] = func[89] <anon-func-93.3>
 - segment[11] flags=0 table=0 count=1 - init i32=11
  - elem[11] = func[90] <anon-func-91.3>
 - segment[12] flags=0 table=0 count=1 - init i32=12
  - elem[12] = func[91] <next>
 - segment[13] flags=0 table=0 count=1 - init i32=13
  - elem[13] = func[92] <anon-func-80.3>
 - segment[14] flags=0 table=0 count=1 - init i32=14
  - elem[14] = func[93] <anon-func-78.3>
 - segment[15] flags=0 table=0 count=1 - init i32=15
  - elem[15] = func[97] <next>
 - segment[16] flags=0 table=0 count=1 - init i32=16
  - elem[16] = func[98] <anon-func-72.3>
 - segment[17] flags=0 table=0 count=1 - init i32=17
  - elem[17] = func[99] <next>
 - segment[18] flags=0 table=0 count=1 - init i32=18
  - elem[18] = func[100] <anon-func-66.3>
 - segment[19] flags=0 table=0 count=1 - init i32=19
  - elem[19] = func[101] <next>
 - segment[20] flags=0 table=0 count=1 - init i32=20
  - elem[20] = func[102] <anon-func-60.3>
 - segment[21] flags=0 table=0 count=1 - init i32=21
  - elem[21] = func[103] <next>
 - segment[22] flags=0 table=0 count=1 - init i32=22
  - elem[22] = func[104] <anon-func-54.3>
 - segment[23] flags=0 table=0 count=1 - init i32=23
  - elem[23] = func[105] <anon-func-52.3>
 - segment[24] flags=0 table=0 count=1 - init i32=24
  - elem[24] = func[106] <anon-func-50.3>
 - segment[25] flags=0 table=0 count=1 - init i32=25
  - elem[25] = func[107] <anon-func-48.3>
 - segment[26] flags=0 table=0 count=1 - init i32=26
  - elem[26] = func[108] <anon-func-46.3>
 - segment[27] flags=0 table=0 count=1 - init i32=27
  - elem[27] = func[109] <anon-func-44.3>
 - segment[28] flags=0 table=0 count=2 - init i32=28
  - elem[28] = func[125] <get_version>
  - elem[29] = func[294] <sn_write>
Code[315]:
 - func[1] size=12 <alloc_bytes>
 - func[2] size=32 <alloc_words>
 - func[3] size=44 <grow_memory>
 - func[4] size=89 <print_ptr>
 - func[5] size=11 <bigint_trap>
 - func[6] size=9 <rts_trap>
 - func[7] size=38 <@immut_array_get>
 - func[8] size=38 <@mut_array_get>
 - func[9] size=38 <@immut_array_size>
 - func[10] size=38 <@mut_array_size>
 - func[11] size=38 <@mut_array_put>
 - func[12] size=38 <@immut_array_keys>
 - func[13] size=38 <@mut_array_keys>
 - func[14] size=38 <@immut_array_vals>
 - func[15] size=38 <@mut_array_vals>
 - func[16] size=38 <@blob_size>
 - func[17] size=38 <@blob_bytes>
 - func[18] size=38 <@text_size>
 - func[19] size=38 <@text_chars>
 - func[20] size=139 <@text_of_num>
 - func[21] size=99 <@left_pad>
 - func[22] size=40 <@digits_dec>
 - func[23] size=16 <@text_of_Nat>
 - func[24] size=97 <@text_of_Int>
 - func[25] size=53 <@digits_hex>
 - func[26] size=24 <@text_of_Word>
 - func[27] size=42 <@int64ToInt>
 - func[28] size=40 <@int32ToInt>
 - func[29] size=41 <@int16ToInt>
 - func[30] size=41 <@int8ToInt>
 - func[31] size=33 <@nat64ToNat>
 - func[32] size=32 <@nat32ToNat>
 - func[33] size=33 <@nat16ToNat>
 - func[34] size=33 <@nat8ToNat>
 - func[35] size=33 <@word64ToNat>
 - func[36] size=32 <@word32ToNat>
 - func[37] size=33 <@word16ToNat>
 - func[38] size=33 <@word8ToNat>
 - func[39] size=12 <@text_of_Nat8>
 - func[40] size=12 <@text_of_Nat16>
 - func[41] size=12 <@text_of_Nat32>
 - func[42] size=12 <@text_of_Nat64>
 - func[43] size=12 <@text_of_Int8>
 - func[44] size=12 <@text_of_Int16>
 - func[45] size=12 <@text_of_Int32>
 - func[46] size=12 <@text_of_Int64>
 - func[47] size=12 <@text_of_Word8>
 - func[48] size=12 <@text_of_Word16>
 - func[49] size=12 <@text_of_Word32>
 - func[50] size=12 <@text_of_Word64>
 - func[51] size=10 <@text_of_Float>
 - func[52] size=16 <@text_of_Bool>
 - func[53] size=18 <@text_of_Text>
 - func[54] size=24 <@text_of_Char>
 - func[55] size=186 <@text_of_Blob>
 - func[56] size=95 <@text_has_parens>
 - func[57] size=179 <@text_needs_parens>
 - func[58] size=131 <@text_of_option>
 - func[59] size=91 <@text_of_variant>
 - func[60] size=186 <@text_of_array>
 - func[61] size=197 <@text_of_array_mut>
 - func[62] size=267 <@new_async>
 - func[63] size=94 <fib>
 - func[64] size=39 <add<Nat16>>
 - func[65] size=39 <sub<Nat16>>
 - func[66] size=2 <anon-func-294.16>
 - func[67] size=2 <anon-func-295.16>
 - func[68] size=44 <anon-func-332.15>
 - func[69] size=44 <anon-func-330.15>
 - func[70] size=327 <enqueue>
 - func[71] size=212 <fail>
 - func[72] size=210 <fulfill>
 - func[73] size=80 <obj_idx>
 - func[74] size=12 <Text.compare_eq>
 - func[75] size=20 <unbox_i32>
 - func[76] size=8 <is_unboxed>
 - func[77] size=21 <unbox_i64>
 - func[78] size=43 <Word32->Char>
 - func[79] size=136 <B_add>
 - func[80] size=73 <B_lt>
 - func[81] size=73 <B_eq>
 - func[82] size=73 <B_gt>
 - func[83] size=139 <B_sub>
 - func[84] size=21 <assert_nonneg>
 - func[85] size=24 <nat_sub>
 - func[86] size=139 <B_div>
 - func[87] size=136 <B_rem>
 - func[88] size=46 <next>
 - func[89] size=88 <anon-func-93.3>
 - func[90] size=38 <anon-func-91.3>
 - func[91] size=46 <next>
 - func[92] size=88 <anon-func-80.3>
 - func[93] size=38 <anon-func-78.3>
 - func[94] size=73 <B_ge>
 - func[95] size=39 <Array.idx_bigint>
 - func[96] size=34 <Array.idx>
 - func[97] size=92 <next>
 - func[98] size=148 <anon-func-72.3>
 - func[99] size=92 <next>
 - func[100] size=148 <anon-func-66.3>
 - func[101] size=78 <next>
 - func[102] size=141 <anon-func-60.3>
 - func[103] size=78 <next>
 - func[104] size=141 <anon-func-54.3>
 - func[105] size=20 <anon-func-52.3>
 - func[106] size=38 <anon-func-50.3>
 - func[107] size=38 <anon-func-48.3>
 - func[108] size=18 <anon-func-46.3>
 - func[109] size=18 <anon-func-44.3>
 - func[110] size=30 <start>
 - func[111] size=68 <trans_state4>
 - func[112] size=38 <trans_state3>
 - func[113] size=8 <_start>
 - func[114] size=15 <rts_start>
 - func[115] size=4 <__wasm_call_ctors>
 - func[116] size=34 <__wasm_apply_relocs>
 - func[117] size=33 <alloc_blob>
 - func[118] size=36 <alloc>
 - func[119] size=46 <as_memcpy>
 - func[120] size=74 <as_memcmp>
 - func[121] size=39 <as_strlen>
 - func[122] size=124 <trap_with_prefix>
 - func[123] size=14 <idl_trap_with>
 - func[124] size=14 <rts_trap_with>
 - func[125] size=15 <get_version>
 - func[126] size=15 <version>
 - func[127] size=69 <leb128_encode>
 - func[128] size=77 <sleb128_encode>
 - func[129] size=110 <read_u32_of_leb128>
 - func[130] size=175 <read_i32_of_sleb128>
 - func[131] size=1015 <parse_idl_header>
 - func[132] size=21 <skip_leb128>
 - func[133] size=723 <skip_any>
 - func[134] size=119 <find_field>
 - func[135] size=71 <skip_fields>
 - func[136] size=55 <mp_calloc>
 - func[137] size=83 <mp_realloc>
 - func[138] size=2 <mp_free>
 - func[139] size=37 <bigint_alloc>
 - func[140] size=19 <bigint_of_word32>
 - func[141] size=19 <bigint_of_word32_signed>
 - func[142] size=10 <bigint_to_word32_wrap>
 - func[143] size=39 <bigint_to_word32_trap>
 - func[144] size=54 <bigint_to_word32_trap_with>
 - func[145] size=73 <bigint_to_word32_signed_trap>
 - func[146] size=10 <bigint_to_word64_wrap>
 - func[147] size=40 <bigint_to_word64_trap>
 - func[148] size=76 <bigint_to_word64_signed_trap>
 - func[149] size=19 <bigint_of_word64>
 - func[150] size=19 <bigint_of_word64_signed>
 - func[151] size=16 <bigint_eq>
 - func[152] size=18 <bigint_ne>
 - func[153] size=18 <bigint_lt>
 - func[154] size=18 <bigint_gt>
 - func[155] size=18 <bigint_le>
 - func[156] size=21 <bigint_ge>
 - func[157] size=34 <bigint_add>
 - func[158] size=34 <bigint_sub>
 - func[159] size=34 <bigint_mul>
 - func[160] size=34 <bigint_pow>
 - func[161] size=63 <bigint_div>
 - func[162] size=63 <bigint_rem>
 - func[163] size=29 <bigint_neg>
 - func[164] size=29 <bigint_abs>
 - func[165] size=13 <bigint_isneg>
 - func[166] size=31 <bigint_lsh>
 - func[167] size=10 <bigint_count_bits>
 - func[168] size=31 <bigint_leb128_size>
 - func[169] size=130 <bigint_leb128_encode_go>
 - func[170] size=48 <bigint_leb128_encode>
 - func[171] size=88 <bigint_2complement_bits>
 - func[172] size=13 <bigint_sleb128_size>
 - func[173] size=133 <bigint_sleb128_encode>
 - func[174] size=159 <bigint_leb128_decode>
 - func[175] size=249 <bigint_sleb128_decode>
 - func[176] size=61 <float_fmt>
 - func[177] size=9 <float_pow>
 - func[178] size=7 <float_sin>
 - func[179] size=7 <float_cos>
 - func[180] size=7 <float_tan>
 - func[181] size=7 <float_arcsin>
 - func[182] size=7 <float_arccos>
 - func[183] size=7 <float_arctan>
 - func[184] size=9 <float_arctan2>
 - func[185] size=7 <float_exp>
 - func[186] size=7 <float_log>
 - func[187] size=48 <read_byte>
 - func[188] size=50 <read_word>
 - func[189] size=46 <advance>
 - func[190] size=305 <utf8_check>
 - func[191] size=29 <utf8_validate>
 - func[192] size=468 <remember_closure>
 - func[193] size=159 <recall_closure>
 - func[194] size=13 <closure_count>
 - func[195] size=13 <closure_table_loc>
 - func[196] size=33 <closure_table_size>
 - func[197] size=46 <text_of_ptr_size>
 - func[198] size=11 <text_of_cstr>
 - func[199] size=170 <text_concat>
 - func[200] size=139 <text_to_buf>
 - func[201] size=73 <blob_of_text>
 - func[202] size=10 <text_size>
 - func[203] size=66 <blob_compare>
 - func[204] size=68 <text_compare>
 - func[205] size=396 <text_compare_range>
 - func[206] size=121 <text_len>
 - func[207] size=243 <text_singleton>
 - func[208] size=48 <text_iter>
 - func[209] size=94 <find_leaf>
 - func[210] size=52 <text_iter_done>
 - func[211] size=358 <text_iter_next>
 - func[212] size=128 <compute_crc32>
 - func[213] size=40 <blob_iter>
 - func[214] size=28 <blob_iter_done>
 - func[215] size=47 <blob_iter_next>
 - func[216] size=442 <blob_of_ic_url>
 - func[217] size=103 <compute_crc8>
 - func[218] size=231 <ic_url_of_blob>
 - func[219] size=49 <mp_init>
 - func[220] size=89 <mp_add>
 - func[221] size=88 <mp_sub>
 - func[222] size=213 <mp_mul>
 - func[223] size=76 <mp_zero>
 - func[224] size=58 <mp_cmp>
 - func[225] size=149 <mp_set_u32>
 - func[226] size=39 <mp_set_i32>
 - func[227] size=25 <mp_get_i32>
 - func[228] size=80 <mp_get_mag_u32>
 - func[229] size=153 <mp_set_u64>
 - func[230] size=39 <mp_set_i64>
 - func[231] size=25 <mp_get_i64>
 - func[232] size=82 <mp_get_mag_u64>
 - func[233] size=1218 <mp_div>
 - func[234] size=45 <mp_init_copy>
 - func[235] size=64 <mp_neg>
 - func[236] size=39 <mp_abs>
 - func[237] size=67 <mp_2expt>
 - func[238] size=120 <mp_expt_u32>
 - func[239] size=109 <mp_set>
 - func[240] size=102 <mp_sqr>
 - func[241] size=380 <s_mp_add>
 - func[242] size=142 <mp_cmp_mag>
 - func[243] size=314 <s_mp_sub>
 - func[244] size=136 <mp_grow>
 - func[245] size=88 <mp_clamp>
 - func[246] size=61 <mp_init_size>
 - func[247] size=70 <mp_exch>
 - func[248] size=102 <mp_clear>
 - func[249] size=218 <mp_copy>
 - func[250] size=66 <mp_count_bits>
 - func[251] size=250 <mp_mul_2d>
 - func[252] size=162 <mp_rshd>
 - func[253] size=288 <mp_mul_d>
 - func[254] size=207 <mp_div_2d>
 - func[255] size=185 <mp_mod_2d>
 - func[256] size=672 <s_mp_balance_mul>
 - func[257] size=1804 <s_mp_toom_mul>
 - func[258] size=764 <s_mp_toom_sqr>
 - func[259] size=559 <s_mp_karatsuba_sqr>
 - func[260] size=511 <s_mp_sqr_fast>
 - func[261] size=374 <s_mp_sqr>
 - func[262] size=767 <s_mp_karatsuba_mul>
 - func[263] size=430 <s_mp_mul_digs_fast>
 - func[264] size=373 <s_mp_mul_digs>
 - func[265] size=168 <mp_init_multi>
 - func[266] size=67 <mp_clear_multi>
 - func[267] size=281 <mp_mul_2>
 - func[268] size=256 <mp_div_2>
 - func[269] size=296 <mp_div_3>
 - func[270] size=203 <mp_lshd>
 - func[271] size=127 <mp_incr>
 - func[272] size=130 <mp_decr>
 - func[273] size=449 <mp_add_d>
 - func[274] size=388 <mp_sub_d>
 - func[275] size=1399 <pow>
 - func[276] size=216 <sin>
 - func[277] size=227 <cos>
 - func[278] size=136 <tan>
 - func[279] size=594 <asin>
 - func[280] size=718 <acos>
 - func[281] size=522 <atan>
 - func[282] size=440 <atan2>
 - func[283] size=485 <exp>
 - func[284] size=603 <log>
 - func[285] size=158 <floor>
 - func[286] size=174 <scalbn>
 - func[287] size=143 <frexp>
 - func[288] size=23 <strnlen>
 - func[289] size=290 <memchr>
 - func[290] size=380 <memset>
 - func[291] size=1448 <memcpy>
 - func[292] size=42 <snprintf>
 - func[293] size=145 <vsnprintf>
 - func[294] size=177 <sn_write>
 - func[295] size=341 <vfprintf>
 - func[296] size=6488 <printf_core>
 - func[297] size=569 <pop_arg>
 - func[298] size=196 <pad>
 - func[299] size=136 <fmt_u>
 - func[300] size=28 <long_double_not_supported>
 - func[301] size=16 <__math_oflow>
 - func[302] size=16 <__math_uflow>
 - func[303] size=13 <__math_xflow>
 - func[304] size=23 <__math_divzero>
 - func[305] size=12 <__math_invalid>
 - func[306] size=1278 <__rem_pio2>
 - func[307] size=2631 <__rem_pio2_large>
 - func[308] size=154 <__sin>
 - func[309] size=146 <__cos>
 - func[310] size=440 <__tan>
 - func[311] size=11 <wctomb>
 - func[312] size=4 <fputs>
 - func[313] size=16 <abort>
 - func[314] size=11 <strerror>
 - func[315] size=6 <link_start>
Data[44]:
 - segment[0] memory=0 size=19 - init i32=65540
  - 0010004: 4361 6e6e 6f74 2067 726f 7720 6d65 6d6f  Cannot grow memo
  - 0010014: 7279 2e                                  ry.
 - segment[1] memory=0 size=21 - init i32=65560
  - 0010018: 6269 6769 6e74 2066 756e 6374 696f 6e20  bigint function 
  - 0010028: 6572 726f 72                             error
 - segment[2] memory=0 size=73 - init i32=65584
  - 0010030: 6173 7365 7274 696f 6e20 6661 696c 6564  assertion failed
  - 0010040: 2061 7420 7761 736d 7469 6d65 2f74 6573   at wasmtime/tes
  - 0010050: 7473 2f64 6562 7567 2f74 6573 7473 7569  ts/debug/testsui
  - 0010060: 7465 2f66 6962 2d77 6173 6d2e 6d6f 3a31  te/fib-wasm.mo:1
  - 0010070: 312e 312d 3131 2e33 33                   1.1-11.33
 - segment[3] memory=0 size=19 - init i32=65660
  - 001007c: 6172 6974 686d 6574 6963 206f 7665 7266  arithmetic overf
  - 001008c: 6c6f 77                                  low
 - segment[4] memory=0 size=14 - init i32=65680
  - 0010090: 7061 7474 6572 6e20 6661 696c 6564       pattern failed
 - segment[5] memory=0 size=41 - init i32=65696
  - 00100a0: 6173 7365 7274 696f 6e20 6661 696c 6564  assertion failed
  - 00100b0: 2061 7420 7072 656c 7564 653a 3332 322e   at prelude:322.
  - 00100c0: 3138 2d33 3232 2e33 34                   18-322.34
 - segment[6] memory=0 size=12 - init i32=65740
  - 00100cc: 0700 0000 0300 0000 0000 0000            ............
 - segment[7] memory=0 size=12 - init i32=65752
  - 00100d8: 0700 0000 0400 0000 0000 0000            ............
 - segment[8] memory=0 size=41 - init i32=65764
  - 00100e4: 6173 7365 7274 696f 6e20 6661 696c 6564  assertion failed
  - 00100f4: 2061 7420 7072 656c 7564 653a 3330 392e   at prelude:309.
  - 0010104: 3138 2d33 3039 2e33 34                   18-309.34
 - segment[9] memory=0 size=9 - init i32=65808
  - 0010110: 0a00 0000 0100 0000 5d                   ........]
 - segment[10] memory=0 size=9 - init i32=65820
  - 001011c: 0a00 0000 0100 0000 20                   ........ 
 - segment[11] memory=0 size=10 - init i32=65832
  - 0010128: 0a00 0000 0200 0000 2c20                 ........, 
 - segment[12] memory=0 size=38 - init i32=65844
  - 0010134: 696e 7465 726e 616c 2065 7272 6f72 3a20  internal error: 
  - 0010144: 6f62 6a65 6374 2066 6965 6c64 206e 6f74  object field not
  - 0010154: 2066 6f75 6e64                            found
 - segment[13] memory=0 size=12 - init i32=65884
  - 001015c: 0a00 0000 0400 0000 5b76 6172            ........[var
 - segment[14] memory=0 size=9 - init i32=65896
  - 0010168: 0a00 0000 0100 0000 5b                   ........[
 - segment[15] memory=0 size=10 - init i32=65908
  - 0010174: 0a00 0000 0200 0000 2829                 ........()
 - segment[16] memory=0 size=9 - init i32=65920
  - 0010180: 0a00 0000 0100 0000 23                   ........#
 - segment[17] memory=0 size=9 - init i32=65932
  - 001018c: 0a00 0000 0100 0000 29                   ........)
 - segment[18] memory=0 size=9 - init i32=65944
  - 0010198: 0a00 0000 0100 0000 28                   ........(
 - segment[19] memory=0 size=12 - init i32=65956
  - 00101a4: 0a00 0000 0400 0000 6e75 6c6c            ........null
 - segment[20] memory=0 size=10 - init i32=65968
  - 00101b0: 0a00 0000 0200 0000 3f28                 ........?(
 - segment[21] memory=0 size=9 - init i32=65980
  - 00101bc: 0a00 0000 0100 0000 3f                   ........?
 - segment[22] memory=0 size=9 - init i32=65992
  - 00101c8: 0a00 0000 0100 0000 22                   ........"
 - segment[23] memory=0 size=9 - init i32=66004
  - 00101d4: 0a00 0000 0100 0000 30                   ........0
 - segment[24] memory=0 size=12 - init i32=66016
  - 00101e0: 0700 0000 0700 0000 0000 0000            ............
 - segment[25] memory=0 size=9 - init i32=66028
  - 00101ec: 0a00 0000 0100 0000 5c                   ........\
 - segment[26] memory=0 size=9 - init i32=66040
  - 00101f8: 0a00 0000 0100 0000 27                   ........'
 - segment[27] memory=0 size=13 - init i32=66052
  - 0010204: 0a00 0000 0500 0000 6661 6c73 65         ........false
 - segment[28] memory=0 size=12 - init i32=66068
  - 0010214: 0a00 0000 0400 0000 7472 7565            ........true
 - segment[29] memory=0 size=10 - init i32=66080
  - 0010220: 0a00 0000 0200 0000 3078                 ........0x
 - segment[30] memory=0 size=22 - init i32=66092
  - 001022c: 636f 6465 706f 696e 7420 6f75 7420 6f66  codepoint out of
  - 001023c: 2072 616e 6765                            range
 - segment[31] memory=0 size=9 - init i32=66116
  - 0010244: 0a00 0000 0100 0000 2b                   ........+
 - segment[32] memory=0 size=9 - init i32=66128
  - 0010250: 0a00 0000 0100 0000 2d                   ........-
 - segment[33] memory=0 size=12 - init i32=66140
  - 001025c: 0700 0000 0800 0000 0000 0000            ............
 - segment[34] memory=0 size=29 - init i32=66152
  - 0010268: 4e61 7475 7261 6c20 7375 6274 7261 6374  Natural subtract
  - 0010278: 696f 6e20 756e 6465 7266 6c6f 77         ion underflow
 - segment[35] memory=0 size=9 - init i32=66184
  - 0010288: 0a00 0000 0100 0000 5f                   ........_
 - segment[36] memory=0 size=8 - init i32=66196
  - 0010294: 0a00 0000 0000 0000                      ........
 - segment[37] memory=0 size=4 - init i32=66204
  - 001029c: f384 0249                                ...I
 - segment[38] memory=0 size=25 - init i32=66208
  - 00102a0: 4172 7261 7920 696e 6465 7820 6f75 7420  Array index out 
  - 00102b0: 6f66 2062 6f75 6e64 73                   of bounds
 - segment[39] memory=0 size=33 - init i32=66236
  - 00102bc: 0a00 0000 1900 0000 4172 7261 7920 696e  ........Array in
  - 00102cc: 6465 7820 6f75 7420 6f66 2062 6f75 6e64  dex out of bound
  - 00102dc: 73                                       s
 - segment[40] memory=0 size=46 - init i32=66272
  - 00102e0: 696e 7465 726e 616c 2065 7272 6f72 3a20  internal error: 
  - 00102f0: 756e 6578 7065 6374 6564 2073 7461 7465  unexpected state
  - 0010300: 2065 6e74 6572 696e 6720 4964 6c65        entering Idle
 - segment[41] memory=0 size=48 - init i32=66320
  - 0010310: 696e 7465 726e 616c 2065 7272 6f72 3a20  internal error: 
  - 0010320: 756e 6578 7065 6374 6564 2073 7461 7465  unexpected state
  - 0010330: 2065 6e74 6572 696e 6720 496e 496e 6974   entering InInit
 - segment[42] memory=0 size=8 - init i32=66368
  - 0010340: 0300 0000 0000 0000                      ........
 - segment[43] memory=0 size=16327 - init i32=66384
  - 0010350: 4944 4c20 6572 726f 723a 2000 5254 5320  IDL error: .RTS 
  - 0010360: 6572 726f 723a 2000 302e 3100 1800 0000  error: .0.1.....
  - 0010370: 0000 0000 6e6f 7420 7368 6f72 7465 7374  ....not shortest
  - 0010380: 2065 6e63 6f64 696e 6700 696e 7420 6f76   encoding.int ov
  - 0010390: 6572 666c 6f77 0065 6d70 7479 2069 6e70  erflow.empty inp
  - 00103a0: 7574 006d 6973 7369 6e67 206d 6167 6963  ut.missing magic
  - 00103b0: 2062 7974 6573 006f 7665 7266 6c6f 7720   bytes.overflow 
  - 00103c0: 696e 206e 756d 6265 7220 6f66 2074 7970  in number of typ
  - 00103d0: 6573 0074 6f6f 206d 616e 7920 7479 7065  es.too many type
  - 00103e0: 7300 696c 6c65 6761 6c20 7479 7065 2074  s.illegal type t
  - 00103f0: 6162 6c65 0070 7269 6d69 7469 7665 2074  able.primitive t
  - 0010400: 7970 6520 696e 2074 7970 6520 7461 626c  ype in type tabl
  - 0010410: 6500 736b 6970 5f61 6e79 3a20 746f 6f20  e.skip_any: too 
  - 0010420: 6465 6570 6c79 206e 6573 7465 6420 7265  deeply nested re
  - 0010430: 636f 7264 0073 6b69 705f 616e 793a 2065  cord.skip_any: e
  - 0010440: 6e63 6f75 6e74 6572 6564 2065 6d70 7479  ncountered empty
  - 0010450: 0073 6b69 705f 616e 793a 2075 6e6b 6e6f  .skip_any: unkno
  - 0010460: 776e 2070 7269 6d00 736b 6970 5f61 6e79  wn prim.skip_any
  - 0010470: 3a20 7265 6375 7273 6976 6520 7265 636f  : recursive reco
  - 0010480: 7264 0073 6b69 705f 616e 793a 2076 6172  rd.skip_any: var
  - 0010490: 6961 6e74 2074 6167 2074 6f6f 206c 6172  iant tag too lar
  - 00104a0: 6765 0073 6b69 705f 616e 793a 2066 756e  ge.skip_any: fun
  - 00104b0: 6300 736b 6970 5f61 6e79 3a20 7365 7276  c.skip_any: serv
  - 00104c0: 6963 6500 736b 6970 5f61 6e79 3a20 736b  ice.skip_any: sk
  - 00104d0: 6970 7069 6e67 2072 6566 6572 656e 6365  ipping reference
  - 00104e0: 7300 696e 7661 6c69 6420 7479 7065 2061  s.invalid type a
  - 00104f0: 7267 756d 656e 7400 6e6f 7420 7368 6f72  rgument.not shor
  - 0010500: 7465 7374 2065 6e63 6f64 696e 6700 6162  test encoding.ab
  - 0010510: 7375 7264 6c79 206c 6172 6765 206e 756d  surdly large num
  - 0010520: 6265 7200 2566 0062 7974 6520 7265 6164  ber.%f.byte read
  - 0010530: 206f 7574 206f 6620 6275 6666 6572 0077   out of buffer.w
  - 0010540: 6f72 6420 7265 6164 206f 7574 206f 6620  ord read out of 
  - 0010550: 6275 6666 6572 0061 6476 616e 6365 206f  buffer.advance o
  - 0010560: 7574 206f 6620 6275 6666 6572 0055 5446  ut of buffer.UTF
  - 0010570: 2d38 2076 616c 6964 6174 696f 6e20 6661  -8 validation fa
  - 0010580: 696c 7572 6500 0000 0000 0000 fcff ffff  ilure...........
  - 0010590: 7265 6d65 6d62 6572 5f63 6c6f 7375 7265  remember_closure
  - 00105a0: 3a20 5374 6f72 696e 6720 756e 626f 7865  : Storing unboxe
  - 00105b0: 6420 6c69 7465 7261 6c73 206e 6f74 2073  d literals not s
  - 00105c0: 7570 706f 7274 7300 0000 0000 7265 6361  upports.....reca
  - 00105d0: 6c6c 5f63 6c6f 7375 7265 3a20 4e6f 2063  ll_closure: No c
  - 00105e0: 6c6f 7375 7265 2074 6162 6c65 2061 6c6c  losure table all
  - 00105f0: 6f63 6174 6564 0072 6563 616c 6c5f 636c  ocated.recall_cl
  - 0010600: 6f73 7572 653a 2043 6c6f 7375 7265 2069  osure: Closure i
  - 0010610: 6e64 6578 206f 7574 206f 6620 7261 6e67  ndex out of rang
  - 0010620: 6500 7265 6361 6c6c 5f63 6c6f 7375 7265  e.recall_closure
  - 0010630: 3a20 436c 6f73 7572 6520 696e 6465 7820  : Closure index 
  - 0010640: 6e6f 7420 696e 2074 6162 6c65 0074 6578  not in table.tex
  - 0010650: 745f 636f 6e63 6174 3a20 5465 7874 2074  t_concat: Text t
  - 0010660: 6f6f 206c 6172 6765 0074 6578 745f 6974  oo large.text_it
  - 0010670: 6572 5f6e 6578 743a 2049 7465 7220 616c  er_next: Iter al
  - 0010680: 7265 6164 7920 646f 6e65 0061 6c6c 6f63  ready done.alloc
  - 0010690: 5f62 6c6f 623a 2054 6578 7420 746f 6f20  _blob: Text too 
  - 00106a0: 6c61 7267 6500 636f 6d70 7574 655f 6372  large.compute_cr
  - 00106b0: 6333 323a 2042 6c6f 6220 6578 7065 6374  c32: Blob expect
  - 00106c0: 6564 0000 0000 0000 0000 0000 0000 0000  ed..............
  - 00106d0: 0000 0000 9630 0777 2c61 0eee ba51 0999  .....0.w,a...Q..
  - 00106e0: 19c4 6d07 8ff4 6a70 35a5 63e9 a395 649e  ..m...jp5.c...d.
  - 00106f0: 3288 db0e a4b8 dc79 1ee9 d5e0 88d9 d297  2......y........
  - 0010700: 2b4c b609 bd7c b17e 072d b8e7 911d bf90  +L...|.~.-......
  - 0010710: 6410 b71d f220 b06a 4871 b9f3 de41 be84  d.... .jHq...A..
  - 0010720: 7dd4 da1a ebe4 dd6d 51b5 d4f4 c785 d383  }......mQ.......
  - 0010730: 5698 6c13 c0a8 6b64 7af9 62fd ecc9 658a  V.l...kdz.b...e.
  - 0010740: 4f5c 0114 d96c 0663 633d 0ffa f50d 088d  O\...l.cc=......
  - 0010750: c820 6e3b 5e10 694c e441 60d5 7271 67a2  . n;^.iL.A`.rqg.
  - 0010760: d1e4 033c 47d4 044b fd85 0dd2 6bb5 0aa5  ...<G..K....k...
  - 0010770: faa8 b535 6c98 b242 d6c9 bbdb 40f9 bcac  ...5l..B....@...
  - 0010780: e36c d832 755c df45 cf0d d6dc 593d d1ab  .l.2u\.E....Y=..
  - 0010790: ac30 d926 3a00 de51 8051 d7c8 1661 d0bf  .0.&:..Q.Q...a..
  - 00107a0: b5f4 b421 23c4 b356 9995 bacf 0fa5 bdb8  ...!#..V........
  - 00107b0: 9eb8 0228 0888 055f b2d9 0cc6 24e9 0bb1  ...(..._....$...
  - 00107c0: 877c 6f2f 114c 6858 ab1d 61c1 3d2d 66b6  .|o/.LhX..a.=-f.
  - 00107d0: 9041 dc76 0671 db01 bc20 d298 2a10 d5ef  .A.v.q... ..*...
  - 00107e0: 8985 b171 1fb5 b606 a5e4 bf9f 33d4 b8e8  ...q........3...
  - 00107f0: a2c9 0778 34f9 000f 8ea8 0996 1898 0ee1  ...x4...........
  - 0010800: bb0d 6a7f 2d3d 6d08 976c 6491 015c 63e6  ..j.-=m..ld..\c.
  - 0010810: f451 6b6b 6261 6c1c d830 6585 4e00 62f2  .Qkkbal..0e.N.b.
  - 0010820: ed95 066c 7ba5 011b c1f4 0882 57c4 0ff5  ...l{.......W...
  - 0010830: c6d9 b065 50e9 b712 eab8 be8b 7c88 b9fc  ...eP.......|...
  - 0010840: df1d dd62 492d da15 f37c d38c 654c d4fb  ...bI-...|..eL..
  - 0010850: 5861 b24d ce51 b53a 7400 bca3 e230 bbd4  Xa.M.Q.:t....0..
  - 0010860: 41a5 df4a d795 d83d 6dc4 d1a4 fbf4 d6d3  A..J...=m.......
  - 0010870: 6ae9 6943 fcd9 6e34 4688 67ad d0b8 60da  j.iC..n4F.g...`.
  - 0010880: 732d 0444 e51d 0333 5f4c 0aaa c97c 0ddd  s-.D...3_L...|..
  - 0010890: 3c71 0550 aa41 0227 1010 0bbe 8620 0cc9  <q.P.A.'..... ..
  - 00108a0: 25b5 6857 b385 6f20 09d4 66b9 9fe4 61ce  %.hW..o ..f...a.
  - 00108b0: 0ef9 de5e 98c9 d929 2298 d0b0 b4a8 d7c7  ...^...)".......
  - 00108c0: 173d b359 810d b42e 3b5c bdb7 ad6c bac0  .=.Y....;\...l..
  - 00108d0: 2083 b8ed b6b3 bf9a 0ce2 b603 9ad2 b174   ..............t
  - 00108e0: 3947 d5ea af77 d29d 1526 db04 8316 dc73  9G...w...&.....s
  - 00108f0: 120b 63e3 843b 6494 3e6a 6d0d a85a 6a7a  ..c..;d.>jm..Zjz
  - 0010900: 0bcf 0ee4 9dff 0993 27ae 000a b19e 077d  ........'......}
  - 0010910: 4493 0ff0 d2a3 0887 68f2 011e fec2 0669  D.......h......i
  - 0010920: 5d57 62f7 cb67 6580 7136 6c19 e706 6b6e  ]Wb..ge.q6l...kn
  - 0010930: 761b d4fe e02b d389 5a7a da10 cc4a dd67  v....+..Zz...J.g
  - 0010940: 6fdf b9f9 f9ef be8e 43be b717 d58e b060  o.......C......`
  - 0010950: e8a3 d6d6 7e93 d1a1 c4c2 d838 52f2 df4f  ....~......8R..O
  - 0010960: f167 bbd1 6757 bca6 dd06 b53f 4b36 b248  .g..gW.....?K6.H
  - 0010970: da2b 0dd8 4c1b 0aaf f64a 0336 607a 0441  .+..L....J.6`z.A
  - 0010980: c3ef 60df 55df 67a8 ef8e 6e31 79be 6946  ..`.U.g...n1y.iF
  - 0010990: 8cb3 61cb 1a83 66bc a0d2 6f25 36e2 6852  ..a...f...o%6.hR
  - 00109a0: 9577 0ccc 0347 0bbb b916 0222 2f26 0555  .w...G....."/&.U
  - 00109b0: be3b bac5 280b bdb2 925a b42b 046a b35c  .;..(....Z.+.j.\
  - 00109c0: a7ff d7c2 31cf d0b5 8b9e d92c 1dae de5b  ....1......,...[
  - 00109d0: b0c2 649b 26f2 63ec 9ca3 6a75 0a93 6d02  ..d.&.c...ju..m.
  - 00109e0: a906 099c 3f36 0eeb 8567 0772 1357 0005  ....?6...g.r.W..
  - 00109f0: 824a bf95 147a b8e2 ae2b b17b 381b b60c  .J...z...+.{8...
  - 0010a00: 9b8e d292 0dbe d5e5 b7ef dc7c 21df db0b  ...........|!...
  - 0010a10: d4d2 d386 42e2 d4f1 f8b3 dd68 6e83 da1f  ....B......hn...
  - 0010a20: cd16 be81 5b26 b9f6 e177 b06f 7747 b718  ....[&...w.owG..
  - 0010a30: e65a 0888 706a 0fff ca3b 0666 5c0b 0111  .Z..pj...;.f\...
  - 0010a40: ff9e 658f 69ae 62f8 d3ff 6b61 45cf 6c16  ..e.i.b...kaE.l.
  - 0010a50: 78e2 0aa0 eed2 0dd7 5483 044e c2b3 0339  x.......T..N...9
  - 0010a60: 6126 67a7 f716 60d0 4d47 6949 db77 6e3e  a&g...`.MGiI.wn>
  - 0010a70: 4a6a d1ae dc5a d6d9 660b df40 f03b d837  Jj...Z..f..@.;.7
  - 0010a80: 53ae bca9 c59e bbde 7fcf b247 e9ff b530  S..........G...0
  - 0010a90: 1cf2 bdbd 8ac2 baca 3093 b353 a6a3 b424  ........0..S...$
  - 0010aa0: 0536 d0ba 9306 d7cd 2957 de54 bf67 d923  .6......)W.T.g.#
  - 0010ab0: 2e7a 66b3 b84a 61c4 021b 685d 942b 6f2a  .zf..Ja...h].+o*
  - 0010ac0: 37be 0bb4 a18e 0cc3 1bdf 055a 8def 022d  7..........Z...-
  - 0010ad0: 6963 5f75 726c 5f64 6563 6f64 653a 204e  ic_url_decode: N
  - 0010ae0: 6f74 2061 6e20 5552 4c00 6963 5f75 726c  ot an URL.ic_url
  - 0010af0: 5f64 6563 6f64 653a 204e 6f74 2061 6e20  _decode: Not an 
  - 0010b00: 6576 656e 206e 756d 6265 7220 6f66 2068  even number of h
  - 0010b10: 6578 2064 6967 6974 7300 6963 5f75 726c  ex digits.ic_url
  - 0010b20: 5f64 6563 6f64 653a 2043 5243 2d38 206d  _decode: CRC-8 m
  - 0010b30: 6973 6d61 7463 6800 6963 3a00 6963 5f75  ismatch.ic:.ic_u
  - 0010b40: 726c 5f64 6563 6f64 653a 2057 726f 6e67  rl_decode: Wrong
  - 0010b50: 2055 524c 2073 6368 656d 6520 286e 6f74   URL scheme (not
  - 0010b60: 2027 6963 3a27 2900 6963 5f75 726c 5f64   'ic:').ic_url_d
  - 0010b70: 6563 6f64 653a 204e 6f74 2061 6c6c 2075  ecode: Not all u
  - 0010b80: 7070 6572 6361 7365 2068 6578 2064 6967  ppercase hex dig
  - 0010b90: 6974 0000 0000 0000 0038 fafe 422e e63f  it.......8..B..?
  - 0010ba0: 3067 c793 57f3 2e3d 0000 0000 0000 e0bf  0g..W..=........
  - 0010bb0: 6055 5555 5555 e5bf 0600 0000 0000 e03f  `UUUUU.........?
  - 0010bc0: 4e55 5999 9999 e93f 7aa4 2955 5555 e5bf  NUY....?z.)UUU..
  - 0010bd0: e945 489b 5b49 f2bf c33f 268b 2b00 f03f  .EH.[I...?&.+..?
  - 0010be0: 0000 0000 00a0 f63f 0000 0000 0000 0000  .......?........
  - 0010bf0: 00c8 b9f2 822c d6bf 8056 3728 24b4 fa3c  .....,...V7($..<
  - 0010c00: 0000 0000 0080 f63f 0000 0000 0000 0000  .......?........
  - 0010c10: 0008 58bf bdd1 d5bf 20f7 e0d8 08a5 1cbd  ..X..... .......
  - 0010c20: 0000 0000 0060 f63f 0000 0000 0000 0000  .....`.?........
  - 0010c30: 0058 4517 7776 d5bf 6d50 b6d5 a462 23bd  .XE.wv..mP...b#.
  - 0010c40: 0000 0000 0040 f63f 0000 0000 0000 0000  .....@.?........
  - 0010c50: 00f8 2d87 ad1a d5bf d567 b09e e484 e6bc  ..-......g......
  - 0010c60: 0000 0000 0020 f63f 0000 0000 0000 0000  ..... .?........
  - 0010c70: 0078 7795 5fbe d4bf e03e 2993 691b 04bd  .xw._....>).i...
  - 0010c80: 0000 0000 0000 f63f 0000 0000 0000 0000  .......?........
  - 0010c90: 0060 1cc2 8b61 d4bf cc84 4c48 2fd8 133d  .`...a....LH/..=
  - 0010ca0: 0000 0000 00e0 f53f 0000 0000 0000 0000  .......?........
  - 0010cb0: 00a8 8686 3004 d4bf 3a0b 82ed f342 dc3c  ....0...:....B.<
  - 0010cc0: 0000 0000 00c0 f53f 0000 0000 0000 0000  .......?........
  - 0010cd0: 0048 6955 4ca6 d3bf 6094 5186 c6b1 203d  .HiUL...`.Q... =
  - 0010ce0: 0000 0000 00a0 f53f 0000 0000 0000 0000  .......?........
  - 0010cf0: 0080 989a dd47 d3bf 9280 c5d4 4d59 253d  .....G......MY%=
  - 0010d00: 0000 0000 0080 f53f 0000 0000 0000 0000  .......?........
  - 0010d10: 0020 e1ba e2e8 d2bf d82b b799 1e7b 263d  . .......+...{&=
  - 0010d20: 0000 0000 0060 f53f 0000 0000 0000 0000  .....`.?........
  - 0010d30: 0088 de13 5a89 d2bf 3fb0 cfb6 14ca 153d  ....Z...?......=
  - 0010d40: 0000 0000 0060 f53f 0000 0000 0000 0000  .....`.?........
  - 0010d50: 0088 de13 5a89 d2bf 3fb0 cfb6 14ca 153d  ....Z...?......=
  - 0010d60: 0000 0000 0040 f53f 0000 0000 0000 0000  .....@.?........
  - 0010d70: 0078 cffb 4129 d2bf 76da 5328 245a 16bd  .x..A)..v.S($Z..
  - 0010d80: 0000 0000 0020 f53f 0000 0000 0000 0000  ..... .?........
  - 0010d90: 0098 69c1 98c8 d1bf 0454 e768 bcaf 1fbd  ..i......T.h....
  - 0010da0: 0000 0000 0000 f53f 0000 0000 0000 0000  .......?........
  - 0010db0: 00a8 abab 5c67 d1bf f0a8 8233 c61f 1f3d  ....\g.....3...=
  - 0010dc0: 0000 0000 00e0 f43f 0000 0000 0000 0000  .......?........
  - 0010dd0: 0048 aef9 8b05 d1bf 665a 05fd c4a8 26bd  .H......fZ....&.
  - 0010de0: 0000 0000 00c0 f43f 0000 0000 0000 0000  .......?........
  - 0010df0: 0090 73e2 24a3 d0bf 0e03 f47e ee6b 0cbd  ..s.$......~.k..
  - 0010e00: 0000 0000 00a0 f43f 0000 0000 0000 0000  .......?........
  - 0010e10: 00d0 b494 2540 d0bf 7f2d f49e b836 f0bc  ....%@...-...6..
  - 0010e20: 0000 0000 00a0 f43f 0000 0000 0000 0000  .......?........
  - 0010e30: 00d0 b494 2540 d0bf 7f2d f49e b836 f0bc  ....%@...-...6..
  - 0010e40: 0000 0000 0080 f43f 0000 0000 0000 0000  .......?........
  - 0010e50: 0040 5e6d 18b9 cfbf 873c 99ab 2a57 0d3d  .@^m.....<..*W.=
  - 0010e60: 0000 0000 0060 f43f 0000 0000 0000 0000  .....`.?........
  - 0010e70: 0060 dccb adf0 cebf 24af 869c b726 2b3d  .`......$....&+=
  - 0010e80: 0000 0000 0040 f43f 0000 0000 0000 0000  .....@.?........
  - 0010e90: 00f0 2a6e 0727 cebf 10ff 3f54 4f2f 17bd  ..*n.'....?TO/..
  - 0010ea0: 0000 0000 0020 f43f 0000 0000 0000 0000  ..... .?........
  - 0010eb0: 00c0 4f6b 215c cdbf 1b68 cabb 91ba 213d  ..Ok!\...h....!=
  - 0010ec0: 0000 0000 0000 f43f 0000 0000 0000 0000  .......?........
  - 0010ed0: 00a0 9ac7 f78f ccbf 3484 9f68 4f79 273d  ........4..hOy'=
  - 0010ee0: 0000 0000 0000 f43f 0000 0000 0000 0000  .......?........
  - 0010ef0: 00a0 9ac7 f78f ccbf 3484 9f68 4f79 273d  ........4..hOy'=
  - 0010f00: 0000 0000 00e0 f33f 0000 0000 0000 0000  .......?........
  - 0010f10: 0090 2d74 86c2 cbbf 8fb7 8b31 b04e 193d  ..-t.......1.N.=
  - 0010f20: 0000 0000 00c0 f33f 0000 0000 0000 0000  .......?........
  - 0010f30: 00c0 804e c9f3 cabf 6690 cd3f 634e ba3c  ...N....f..?cN.<
  - 0010f40: 0000 0000 00a0 f33f 0000 0000 0000 0000  .......?........
  - 0010f50: 00b0 e21f bc23 cabf eac1 46dc 648c 25bd  .....#....F.d.%.
  - 0010f60: 0000 0000 00a0 f33f 0000 0000 0000 0000  .......?........
  - 0010f70: 00b0 e21f bc23 cabf eac1 46dc 648c 25bd  .....#....F.d.%.
  - 0010f80: 0000 0000 0080 f33f 0000 0000 0000 0000  .......?........
  - 0010f90: 0050 f49c 5a52 c9bf e3d4 c104 d9d1 2abd  .P..ZR........*.
  - 0010fa0: 0000 0000 0060 f33f 0000 0000 0000 0000  .....`.?........
  - 0010fb0: 00d0 2065 a07f c8bf 09fa db7f bfbd 2b3d  .. e..........+=
  - 0010fc0: 0000 0000 0040 f33f 0000 0000 0000 0000  .....@.?........
  - 0010fd0: 00e0 1002 89ab c7bf 584a 5372 90db 2b3d  ........XJSr..+=
  - 0010fe0: 0000 0000 0040 f33f 0000 0000 0000 0000  .....@.?........
  - 0010ff0: 00e0 1002 89ab c7bf 584a 5372 90db 2b3d  ........XJSr..+=
  - 0011000: 0000 0000 0020 f33f 0000 0000 0000 0000  ..... .?........
  - 0011010: 00d0 19e7 0fd6 c6bf 66e2 b2a3 6ae4 10bd  ........f...j...
  - 0011020: 0000 0000 0000 f33f 0000 0000 0000 0000  .......?........
  - 0011030: 0090 a770 30ff c5bf 3950 109f 439e 1ebd  ...p0...9P..C...
  - 0011040: 0000 0000 0000 f33f 0000 0000 0000 0000  .......?........
  - 0011050: 0090 a770 30ff c5bf 3950 109f 439e 1ebd  ...p0...9P..C...
  - 0011060: 0000 0000 00e0 f23f 0000 0000 0000 0000  .......?........
  - 0011070: 00b0 a1e3 e526 c5bf 8f5b 0790 8bde 20bd  .....&...[.... .
  - 0011080: 0000 0000 00c0 f23f 0000 0000 0000 0000  .......?........
  - 0011090: 0080 cb6c 2b4d c4bf 3c78 3561 c10c 173d  ...l+M..<x5a...=
  - 00110a0: 0000 0000 00c0 f23f 0000 0000 0000 0000  .......?........
  - 00110b0: 0080 cb6c 2b4d c4bf 3c78 3561 c10c 173d  ...l+M..<x5a...=
  - 00110c0: 0000 0000 00a0 f23f 0000 0000 0000 0000  .......?........
  - 00110d0: 0090 1e20 fc71 c3bf 3a54 274d 8678 f13c  ... .q..:T'M.x.<
  - 00110e0: 0000 0000 0080 f23f 0000 0000 0000 0000  .......?........
  - 00110f0: 00f0 1ff8 5295 c2bf 08c4 7117 308d 24bd  ....R.....q.0.$.
  - 0011100: 0000 0000 0060 f23f 0000 0000 0000 0000  .....`.?........
  - 0011110: 0060 2fd5 2ab7 c1bf 96a3 1118 a480 2ebd  .`/.*...........
  - 0011120: 0000 0000 0060 f23f 0000 0000 0000 0000  .....`.?........
  - 0011130: 0060 2fd5 2ab7 c1bf 96a3 1118 a480 2ebd  .`/.*...........
  - 0011140: 0000 0000 0040 f23f 0000 0000 0000 0000  .....@.?........
  - 0011150: 0090 d07c 7ed7 c0bf f45b e888 9669 0a3d  ...|~....[...i.=
  - 0011160: 0000 0000 0040 f23f 0000 0000 0000 0000  .....@.?........
  - 0011170: 0090 d07c 7ed7 c0bf f45b e888 9669 0a3d  ...|~....[...i.=
  - 0011180: 0000 0000 0020 f23f 0000 0000 0000 0000  ..... .?........
  - 0011190: 00e0 db31 91ec bfbf f233 a35c 5475 25bd  ...1.....3.\Tu%.
  - 00111a0: 0000 0000 0000 f23f 0000 0000 0000 0000  .......?........
  - 00111b0: 0000 2b6e 0727 bebf 3c00 f02a 2c34 2a3d  ..+n.'..<..*,4*=
  - 00111c0: 0000 0000 0000 f23f 0000 0000 0000 0000  .......?........
  - 00111d0: 0000 2b6e 0727 bebf 3c00 f02a 2c34 2a3d  ..+n.'..<..*,4*=
  - 00111e0: 0000 0000 00e0 f13f 0000 0000 0000 0000  .......?........
  - 00111f0: 00c0 5b8f 545e bcbf 06be 5f58 570c 1dbd  ..[.T^...._XW...
  - 0011200: 0000 0000 00c0 f13f 0000 0000 0000 0000  .......?........
  - 0011210: 00e0 4a3a 6d92 babf c8aa 5be8 3539 253d  ..J:m.....[.59%=
  - 0011220: 0000 0000 00c0 f13f 0000 0000 0000 0000  .......?........
  - 0011230: 00e0 4a3a 6d92 babf c8aa 5be8 3539 253d  ..J:m.....[.59%=
  - 0011240: 0000 0000 00a0 f13f 0000 0000 0000 0000  .......?........
  - 0011250: 00a0 31d6 45c3 b8bf 6856 2f4d 297c 133d  ..1.E...hV/M)|.=
  - 0011260: 0000 0000 00a0 f13f 0000 0000 0000 0000  .......?........
  - 0011270: 00a0 31d6 45c3 b8bf 6856 2f4d 297c 133d  ..1.E...hV/M)|.=
  - 0011280: 0000 0000 0080 f13f 0000 0000 0000 0000  .......?........
  - 0011290: 0060 e58a d2f0 b6bf da73 33c9 3797 26bd  .`.......s3.7.&.
  - 00112a0: 0000 0000 0060 f13f 0000 0000 0000 0000  .....`.?........
  - 00112b0: 0020 063f 071b b5bf 575e c661 5b02 1f3d  . .?....W^.a[..=
  - 00112c0: 0000 0000 0060 f13f 0000 0000 0000 0000  .....`.?........
  - 00112d0: 0020 063f 071b b5bf 575e c661 5b02 1f3d  . .?....W^.a[..=
  - 00112e0: 0000 0000 0040 f13f 0000 0000 0000 0000  .....@.?........
  - 00112f0: 00e0 1b96 d741 b3bf df13 f9cc da5e 2c3d  .....A.......^,=
  - 0011300: 0000 0000 0040 f13f 0000 0000 0000 0000  .....@.?........
  - 0011310: 00e0 1b96 d741 b3bf df13 f9cc da5e 2c3d  .....A.......^,=
  - 0011320: 0000 0000 0020 f13f 0000 0000 0000 0000  ..... .?........
  - 0011330: 0080 a3ee 3665 b1bf 09a3 8f76 5e7c 143d  ....6e.....v^|.=
  - 0011340: 0000 0000 0000 f13f 0000 0000 0000 0000  .......?........
  - 0011350: 0080 11c0 300a afbf 918e 3683 9e59 2d3d  ....0.....6..Y-=
  - 0011360: 0000 0000 0000 f13f 0000 0000 0000 0000  .......?........
  - 0011370: 0080 11c0 300a afbf 918e 3683 9e59 2d3d  ....0.....6..Y-=
  - 0011380: 0000 0000 00e0 f03f 0000 0000 0000 0000  .......?........
  - 0011390: 0080 1971 dd42 abbf 4c70 d6e5 7a82 1c3d  ...q.B..Lp..z..=
  - 00113a0: 0000 0000 00e0 f03f 0000 0000 0000 0000  .......?........
  - 00113b0: 0080 1971 dd42 abbf 4c70 d6e5 7a82 1c3d  ...q.B..Lp..z..=
  - 00113c0: 0000 0000 00c0 f03f 0000 0000 0000 0000  .......?........
  - 00113d0: 00c0 32f6 5874 a7bf eea1 f234 46fc 2cbd  ..2.Xt.....4F.,.
  - 00113e0: 0000 0000 00c0 f03f 0000 0000 0000 0000  .......?........
  - 00113f0: 00c0 32f6 5874 a7bf eea1 f234 46fc 2cbd  ..2.Xt.....4F.,.
  - 0011400: 0000 0000 00a0 f03f 0000 0000 0000 0000  .......?........
  - 0011410: 00c0 feb9 879e a3bf aafe 26f5 b702 f53c  ..........&....<
  - 0011420: 0000 0000 00a0 f03f 0000 0000 0000 0000  .......?........
  - 0011430: 00c0 feb9 879e a3bf aafe 26f5 b702 f53c  ..........&....<
  - 0011440: 0000 0000 0080 f03f 0000 0000 0000 0000  .......?........
  - 0011450: 0000 780e 9b82 9fbf e409 7e7c 2680 29bd  ..x.......~|&.).
  - 0011460: 0000 0000 0080 f03f 0000 0000 0000 0000  .......?........
  - 0011470: 0000 780e 9b82 9fbf e409 7e7c 2680 29bd  ..x.......~|&.).
  - 0011480: 0000 0000 0060 f03f 0000 0000 0000 0000  .....`.?........
  - 0011490: 0080 d507 1bb9 97bf 39a6 fa93 548d 28bd  ........9...T.(.
  - 00114a0: 0000 0000 0040 f03f 0000 0000 0000 0000  .....@.?........
  - 00114b0: 0000 fcb0 a8c0 8fbf 9ca6 d3f6 7c1e dfbc  ............|...
  - 00114c0: 0000 0000 0040 f03f 0000 0000 0000 0000  .....@.?........
  - 00114d0: 0000 fcb0 a8c0 8fbf 9ca6 d3f6 7c1e dfbc  ............|...
  - 00114e0: 0000 0000 0020 f03f 0000 0000 0000 0000  ..... .?........
  - 00114f0: 0000 106b 2ae0 7fbf e440 da0d 3fe2 19bd  ...k*....@..?...
  - 0011500: 0000 0000 0020 f03f 0000 0000 0000 0000  ..... .?........
  - 0011510: 0000 106b 2ae0 7fbf e440 da0d 3fe2 19bd  ...k*....@..?...
  - 0011520: 0000 0000 0000 f03f 0000 0000 0000 0000  .......?........
  - 0011530: 0000 0000 0000 0000 0000 0000 0000 0000  ................
  - 0011540: 0000 0000 0000 f03f 0000 0000 0000 0000  .......?........
  - 0011550: 0000 0000 0000 0000 0000 0000 0000 0000  ................
  - 0011560: 0000 0000 00c0 ef3f 0000 0000 0000 0000  .......?........
  - 0011570: 0000 8975 1510 803f e82b 9d99 6bc7 10bd  ...u...?.+..k...
  - 0011580: 0000 0000 0080 ef3f 0000 0000 0000 0000  .......?........
  - 0011590: 0080 9358 5620 903f d2f7 e206 5bdc 23bd  ...XV .?....[.#.
  - 00115a0: 0000 0000 0040 ef3f 0000 0000 0000 0000  .....@.?........
  - 00115b0: 0000 c928 2549 983f 340c 5a32 baa0 2abd  ...(%I.?4.Z2..*.
  - 00115c0: 0000 0000 0000 ef3f 0000 0000 0000 0000  .......?........
  - 00115d0: 0040 e789 5d41 a03f 53d7 f15c c011 013d  .@..]A.?S..\...=
  - 00115e0: 0000 0000 00c0 ee3f 0000 0000 0000 0000  .......?........
  - 00115f0: 0000 2ed4 ae66 a43f 28fd bd75 7316 2cbd  .....f.?(..us.,.
  - 0011600: 0000 0000 0080 ee3f 0000 0000 0000 0000  .......?........
  - 0011610: 00c0 9f14 aa94 a83f 7d26 5ad0 9579 19bd  .......?}&Z..y..
  - 0011620: 0000 0000 0040 ee3f 0000 0000 0000 0000  .....@.?........
  - 0011630: 00c0 ddcd 73cb ac3f 0728 d847 f268 1abd  ....s..?.(.G.h..
  - 0011640: 0000 0000 0020 ee3f 0000 0000 0000 0000  ..... .?........
  - 0011650: 00c0 06c0 31ea ae3f 7b3b c94f 3e11 0ebd  ....1..?{;.O>...
  - 0011660: 0000 0000 00e0 ed3f 0000 0000 0000 0000  .......?........
  - 0011670: 0060 46d1 3b97 b13f 9b9e 0d56 5d32 25bd  .`F.;..?...V]2%.
  - 0011680: 0000 0000 00a0 ed3f 0000 0000 0000 0000  .......?........
  - 0011690: 00e0 d1a7 f5bd b33f d74e dba5 5ec8 2c3d  .......?.N..^.,=
  - 00116a0: 0000 0000 0060 ed3f 0000 0000 0000 0000  .....`.?........
  - 00116b0: 00a0 974d 5ae9 b53f 1e1d 5d3c 0669 2cbd  ...MZ..?..]<.i,.
  - 00116c0: 0000 0000 0040 ed3f 0000 0000 0000 0000  .....@.?........
  - 00116d0: 00c0 ea0a d300 b73f 32ed 9da9 8d1e ec3c  .......?2......<
  - 00116e0: 0000 0000 0000 ed3f 0000 0000 0000 0000  .......?........
  - 00116f0: 0040 595d 5e33 b93f da47 bd3a 5c11 233d  .@Y]^3.?.G.:\.#=
  - 0011700: 0000 0000 00c0 ec3f 0000 0000 0000 0000  .......?........
  - 0011710: 0060 ad8d c86a bb3f e568 f72b 8090 13bd  .`...j.?.h.+....
  - 0011720: 0000 0000 00a0 ec3f 0000 0000 0000 0000  .......?........
  - 0011730: 0040 bc01 5888 bc3f d3ac 5ac6 d146 263d  .@..X..?..Z..F&=
  - 0011740: 0000 0000 0060 ec3f 0000 0000 0000 0000  .....`.?........
  - 0011750: 0020 0a83 39c7 be3f e045 e6af 68c0 2dbd  . ..9..?.E..h.-.
  - 0011760: 0000 0000 0040 ec3f 0000 0000 0000 0000  .....@.?........
  - 0011770: 00e0 db39 91e8 bf3f fd0a a14f d634 25bd  ...9...?...O.4%.
  - 0011780: 0000 0000 0000 ec3f 0000 0000 0000 0000  .......?........
  - 0011790: 00e0 2782 8e17 c13f f207 2dce 78ef 213d  ..'....?..-.x.!=
  - 00117a0: 0000 0000 00e0 eb3f 0000 0000 0000 0000  .......?........
  - 00117b0: 00f0 237e 2baa c13f 3499 3844 8ea7 2c3d  ..#~+..?4.8D..,=
  - 00117c0: 0000 0000 00a0 eb3f 0000 0000 0000 0000  .......?........
  - 00117d0: 0080 860c 61d1 c23f a1b4 81cb 6c9d 033d  ....a..?....l..=
  - 00117e0: 0000 0000 0080 eb3f 0000 0000 0000 0000  .......?........
  - 00117f0: 0090 15b0 fc65 c33f 8972 4b23 a82f c63c  .....e.?.rK#./.<
  - 0011800: 0000 0000 0040 eb3f 0000 0000 0000 0000  .....@.?........
  - 0011810: 00b0 3383 3d91 c43f 78b6 fd54 7983 253d  ..3.=..?x..Ty.%=
  - 0011820: 0000 0000 0020 eb3f 0000 0000 0000 0000  ..... .?........
  - 0011830: 00b0 a1e4 e527 c53f c77d 69e5 e833 263d  .....'.?.}i..3&=
  - 0011840: 0000 0000 00e0 ea3f 0000 0000 0000 0000  .......?........
  - 0011850: 0010 8cbe 4e57 c63f 782e 3c2c 8bcf 193d  ....NW.?x.<,...=
  - 0011860: 0000 0000 00c0 ea3f 0000 0000 0000 0000  .......?........
  - 0011870: 0070 758b 12f0 c63f e121 9ce5 8d11 25bd  .pu....?.!....%.
  - 0011880: 0000 0000 00a0 ea3f 0000 0000 0000 0000  .......?........
  - 0011890: 0050 4485 8d89 c73f 0543 9170 1066 1cbd  .PD....?.C.p.f..
  - 00118a0: 0000 0000 0060 ea3f 0000 0000 0000 0000  .....`.?........
  - 00118b0: 0000 39eb afbe c83f d12c e9aa 543d 07bd  ..9....?.,..T=..
  - 00118c0: 0000 0000 0040 ea3f 0000 0000 0000 0000  .....@.?........
  - 00118d0: 0000 f7dc 5a5a c93f 6fff a058 28f2 073d  ....ZZ.?o..X(..=
  - 00118e0: 0000 0000 0000 ea3f 0000 0000 0000 0000  .......?........
  - 00118f0: 00e0 8a3c ed93 ca3f 6921 5650 4372 28bd  ...<...?i!VPCr(.
  - 0011900: 0000 0000 00e0 e93f 0000 0000 0000 0000  .......?........
  - 0011910: 00d0 5b57 d831 cb3f aae1 ac4e 8d35 0cbd  ..[W.1.?...N.5..
  - 0011920: 0000 0000 00c0 e93f 0000 0000 0000 0000  .......?........
  - 0011930: 00e0 3b38 87d0 cb3f b612 5459 c44b 2dbd  ..;8...?..TY.K-.
  - 0011940: 0000 0000 00a0 e93f 0000 0000 0000 0000  .......?........
  - 0011950: 0010 f0c6 fb6f cc3f d22b 96c5 72ec f1bc  .....o.?.+..r...
  - 0011960: 0000 0000 0060 e93f 0000 0000 0000 0000  .....`.?........
  - 0011970: 0090 d4b0 3db1 cd3f 35b0 15f7 2aff 2abd  ....=..?5...*.*.
  - 0011980: 0000 0000 0040 e93f 0000 0000 0000 0000  .....@.?........
  - 0011990: 0010 e7ff 0e53 ce3f 30f4 4160 2712 c23c  .....S.?0.A`'..<
  - 00119a0: 0000 0000 0020 e93f 0000 0000 0000 0000  ..... .?........
  - 00119b0: 0000 dde4 adf5 ce3f 118e bb65 1521 cabc  .......?...e.!..
  - 00119c0: 0000 0000 0000 e93f 0000 0000 0000 0000  .......?........
  - 00119d0: 00b0 b36c 1c99 cf3f 30df 0cca eccb 1b3d  ...l...?0......=
  - 00119e0: 0000 0000 00c0 e83f 0000 0000 0000 0000  .......?........
  - 00119f0: 0058 4d60 3871 d03f 914e ed16 db9c f83c  .XM`8q.?.N.....<
  - 0011a00: 0000 0000 00a0 e83f 0000 0000 0000 0000  .......?........
  - 0011a10: 0060 6167 2dc4 d03f e9ea 3c16 8b18 273d  .`ag-..?..<...'=
  - 0011a20: 0000 0000 0080 e83f 0000 0000 0000 0000  .......?........
  - 0011a30: 00e8 2782 8e17 d13f 1cf0 a563 0e21 2cbd  ..'....?...c.!,.
  - 0011a40: 0000 0000 0060 e83f 0000 0000 0000 0000  .....`.?........
  - 0011a50: 00f8 accb 5c6b d13f 8116 a5f7 cd9a 2b3d  ....\k.?......+=
  - 0011a60: 0000 0000 0040 e83f 0000 0000 0000 0000  .....@.?........
  - 0011a70: 0068 5a63 99bf d13f b7bd 4751 eda6 2c3d  .hZc...?..GQ..,=
  - 0011a80: 0000 0000 0020 e83f 0000 0000 0000 0000  ..... .?........
  - 0011a90: 00b8 0e6d 4514 d23f eaba 46ba de87 0a3d  ...mE..?..F....=
  - 0011aa0: 0000 0000 00e0 e73f 0000 0000 0000 0000  .......?........
  - 0011ab0: 0090 dc7c f0be d23f f404 504a fa9c 2a3d  ...|...?..PJ..*=
  - 0011ac0: 0000 0000 00c0 e73f 0000 0000 0000 0000  .......?........
  - 0011ad0: 0060 d3e1 f114 d33f b83c 21d3 7ae2 28bd  .`.....?.<!.z.(.
  - 0011ae0: 0000 0000 00a0 e73f 0000 0000 0000 0000  .......?........
  - 0011af0: 0010 be76 676b d33f c877 f1b0 cd6e 113d  ...vgk.?.w...n.=
  - 0011b00: 0000 0000 0080 e73f 0000 0000 0000 0000  .......?........
  - 0011b10: 0030 3377 52c2 d33f 5cbd 06b6 543b 183d  .03wR..?\...T;.=
  - 0011b20: 0000 0000 0060 e73f 0000 0000 0000 0000  .....`.?........
  - 0011b30: 00e8 d523 b419 d43f 9de0 90ec 36e4 083d  ...#...?....6..=
  - 0011b40: 0000 0000 0040 e73f 0000 0000 0000 0000  .....@.?........
  - 0011b50: 00c8 71c2 8d71 d43f 75d6 6709 ce27 2fbd  ..q..q.?u.g..'/.
  - 0011b60: 0000 0000 0020 e73f 0000 0000 0000 0000  ..... .?........
  - 0011b70: 0030 179e e0c9 d43f a4d8 0a1b 8920 2ebd  .0.....?..... ..
  - 0011b80: 0000 0000 0000 e73f 0000 0000 0000 0000  .......?........
  - 0011b90: 00a0 3807 ae22 d53f 59c7 6481 70be 2e3d  ..8..".?Y.d.p..=
  - 0011ba0: 0000 0000 00e0 e63f 0000 0000 0000 0000  .......?........
  - 0011bb0: 00d0 c853 f77b d53f ef40 5dee edad 1f3d  ...S.{.?.@]....=
  - 0011bc0: 0000 0000 00c0 e63f 0000 0000 0000 0000  .......?........
  - 0011bd0: 0060 59df bdd5 d53f dc65 a408 2a0b 0abd  .`Y....?.e..*...
  - 0011be0: 4fbb 6105 67ac dd3f 182d 4454 fb21 e93f  O.a.g..?.-DT.!.?
  - 0011bf0: 9bf6 81d2 0b73 ef3f 182d 4454 fb21 f93f  .....s.?.-DT.!.?
  - 0011c00: e265 2f22 7f2b 7a3c 075c 1433 26a6 813c  .e/".+z<.\.3&..<
  - 0011c10: bdcb f07a 8807 703c 075c 1433 26a6 913c  ...z..p<.\.3&..<
  - 0011c20: 182d 4454 fb21 e93f 182d 4454 fb21 e9bf  .-DT.!.?.-DT.!..
  - 0011c30: d221 337f 7cd9 0240 d221 337f 7cd9 02c0  .!3.|..@.!3.|...
  - 0011c40: 0000 0000 0000 0000 0000 0000 0000 0080  ................
  - 0011c50: 182d 4454 fb21 0940 182d 4454 fb21 09c0  .-DT.!.@.-DT.!..
  - 0011c60: fe82 2b65 4715 6740 0000 0000 0000 3843  ..+eG.g@......8C
  - 0011c70: 0000 fafe 422e 76bf 3a3b 9ebc 9af7 0cbd  ....B.v.:;......
  - 0011c80: bdfd ffff ffff df3f 3c54 5555 5555 c53f  .......?<TUUUU.?
  - 0011c90: 912b 17cf 5555 a53f 17d0 a467 1111 813f  .+..UU.?...g...?
  - 0011ca0: 0000 0000 0000 c842 ef39 fafe 422e e63f  .......B.9..B..?
  - 0011cb0: 24c4 82ff bdbf ce3f b5f4 0cd7 086b ac3f  $......?.....k.?
  - 0011cc0: cc50 46d2 abb2 833f 843a 4e9b e0d7 553f  .PF....?.:N...U?
  - 0011cd0: 0000 0000 0000 0000 0000 0000 0000 f03f  ...............?
  - 0011ce0: 6ebf 881a 4f3b 9b3c 3533 fba9 3df6 ef3f  n...O;.<53..=..?
  - 0011cf0: 5ddc d89c 1360 71bc 6180 773e 9aec ef3f  ]....`q.a.w>...?
  - 0011d00: d166 8710 7a5e 90bc 857f 6ee8 15e3 ef3f  .f..z^....n....?
  - 0011d10: 13f6 6735 52d2 8c3c 7485 15d3 b0d9 ef3f  ..g5R..<t......?
  - 0011d20: fa8e f923 80ce 8bbc def6 dd29 6bd0 ef3f  ...#.......)k..?
  - 0011d30: 61c8 e661 4ef7 603c c89b 7518 45c7 ef3f  a..aN.`<..u.E..?
  - 0011d40: 99d3 335b e4a3 903c 83f3 c6ca 3ebe ef3f  ..3[...<....>..?
  - 0011d50: 6d7b 835d a69a 973c 0f89 f96c 58b5 ef3f  m{.]...<...lX..?
  - 0011d60: fcef fd92 1ab5 8e3c f747 722b 92ac ef3f  .......<.Gr+...?
  - 0011d70: d19c 2f70 3dbe 3e3c a2d1 d332 eca3 ef3f  ../p=.><...2...?
  - 0011d80: 0b6e 9089 3403 6abc 1bd3 feaf 669b ef3f  .n..4.j.....f..?
  - 0011d90: 0ebd 2f2a 5256 95bc 515b 12d0 0193 ef3f  ../*RV..Q[.....?
  - 0011da0: 55ea 4e8c ef80 50bc cc31 6cc0 bd8a ef3f  U.N...P..1l....?
  - 0011db0: 16f4 d5b9 23c9 91bc e02d a9ae 9a82 ef3f  ....#....-.....?
  - 0011dc0: af55 5ce9 e3d3 803c 518e a5c8 987a ef3f  .U\....<Q....z.?
  - 0011dd0: 4893 a5ea 151b 80bc 7b51 7d3c b872 ef3f  H.......{Q}<.r.?
  - 0011de0: 3d32 de55 f01f 8fbc ea8d 8c38 f96a ef3f  =2.U.......8.j.?
  - 0011df0: bf53 133f 8c89 8b3c 75cb 6feb 5b63 ef3f  .S.?...<u.o.[c.?
  - 0011e00: 26eb 1176 9cd9 96bc d45c 0484 e05b ef3f  &..v.....\...[.?
  - 0011e10: 602f 3a3e f7ec 9a3c aab9 6831 8754 ef3f  `/:>...<..h1.T.?
  - 0011e20: 9d38 86cb 82e7 8fbc 1dd9 fc22 504d ef3f  .8........."PM.?
  - 0011e30: 8dc3 a644 416f 8a3c d68c 6288 3b46 ef3f  ...DAo.<..b.;F.?
  - 0011e40: 7d04 e4b0 057a 803c 96dc 7d91 493f ef3f  }....z.<..}.I?.?
  - 0011e50: 94a8 a8e3 fd8e 963c 3862 756e 7a38 ef3f  .......<8bunz8.?
  - 0011e60: 7d48 74f2 185e 873c 3fa6 b24f ce31 ef3f  }Ht..^.<?..O.1.?
  - 0011e70: f2e7 1f98 2b47 803c dd7c e265 452b ef3f  ....+G.<.|.eE+.?
  - 0011e80: 5e08 713f 7bb8 96bc 8163 f5e1 df24 ef3f  ^.q?{....c...$.?
  - 0011e90: 31ab 096d e1f7 823c e1de 1ff5 9d1e ef3f  1..m...<.......?
  - 0011ea0: fabf 6f1a 9b21 3dbc 90d9 dad0 7f18 ef3f  ..o..!=........?
  - 0011eb0: b40a 0c72 8237 8b3c 0b03 e4a6 8512 ef3f  ...r.7.<.......?
  - 0011ec0: 8fcb ce89 9214 6e3c 562f 3ea9 af0c ef3f  ......n<V/>....?
  - 0011ed0: b6ab b04d 754d 833c 15b7 310a fe06 ef3f  ...MuM.<..1....?
  - 0011ee0: 4c74 ace2 0142 863c 31d8 4cfc 7001 ef3f  Lt...B.<1.L.p..?
  - 0011ef0: 4af8 d35d 39dd 8f3c ff16 64b2 08fc ee3f  J..]9..<..d....?
  - 0011f00: 045b 8e3b 80a3 86bc f19f 925f c5f6 ee3f  .[.;......._...?
  - 0011f10: 6850 4bcc ed4a 92bc cba9 3a37 a7f1 ee3f  hPK..J....:7...?
  - 0011f20: 8e2d 511b f807 99bc 66d8 056d aeec ee3f  .-Q.....f..m...?
  - 0011f30: d236 943e e8d1 71bc f79f e534 dbe7 ee3f  .6.>..q....4...?
  - 0011f40: 151b ceb3 1919 99bc e5a8 13c3 2de3 ee3f  ............-..?
  - 0011f50: 6d4c 2aa7 489f 853c 2234 124c a6de ee3f  mL*.H..<"4.L...?
  - 0011f60: 8a69 287a 6012 93bc 1c80 ac04 45da ee3f  .i(z`.......E..?
  - 0011f70: 5b89 1748 8fa7 58bc 2a2e f721 0ad6 ee3f  [..H..X.*..!...?
  - 0011f80: 1b9a 4967 9b2c 7cbc 97a8 50d9 f5d1 ee3f  ..Ig.,|...P....?
  - 0011f90: 11ac c260 ed63 433c 2d89 6160 08ce ee3f  ...`.cC<-.a`...?
  - 0011fa0: ef64 063b 0966 963c 5700 1ded 41ca ee3f  .d.;.f.<W...A..?
  - 0011fb0: 7903 a1da e1cc 6e3c d03c c1b5 a2c6 ee3f  y.....n<.<.....?
  - 0011fc0: 3012 0f3f 8eff 933c ded3 d7f0 2ac3 ee3f  0..?...<....*..?
  - 0011fd0: b0af 7abb ce90 763c 272a 36d5 dabf ee3f  ..z...v<'*6....?
  - 0011fe0: 77e0 54eb bd1d 933c 0ddd fd99 b2bc ee3f  w.T....<.......?
  - 0011ff0: 8ea3 7100 3494 8fbc a72c 9d76 b2b9 ee3f  ..q.4....,.v...?
  - 0012000: 49a3 93dc ccde 87bc 4266 cfa2 dab6 ee3f  I.......Bf.....?
  - 0012010: 5f38 0fbd c6de 78bc 824f 9d56 2bb4 ee3f  _8....x..O.V+..?
  - 0012020: f65c 7bec 4612 86bc 0f92 5dca a4b1 ee3f  .\{.F.....]....?
  - 0012030: 8ed7 fd18 0535 933c da27 b536 47af ee3f  .....5.<.'.6G..?
  - 0012040: 059b 8a2f b798 7b3c fdc7 97d4 12ad ee3f  .../..{<.......?
  - 0012050: 0954 1ce2 e163 903c 2954 48dd 07ab ee3f  .T...c.<)TH....?
  - 0012060: eac6 1950 85c7 343c b746 598a 26a9 ee3f  ...P..4<.FY.&..?
  - 0012070: 35c0 642b e632 943c 4821 ad15 6fa7 ee3f  5.d+.2.<H!..o..?
  - 0012080: 9f76 9961 4ae4 8cbc 09dc 76b9 e1a5 ee3f  .v.aJ.....v....?
  - 0012090: a84d ef3b c533 8cbc 8555 3ab0 7ea4 ee3f  .M.;.3...U:.~..?
  - 00120a0: aee9 2b89 7853 84bc 20c3 cc34 46a3 ee3f  ..+.xS.. ..4F..?
  - 00120b0: 5858 5678 ddce 93bc 2522 5582 38a2 ee3f  XXVx....%"U.8..?
  - 00120c0: 6419 7e80 aa10 573c 73a9 4cd4 55a1 ee3f  d.~...W<s.L.U..?
  - 00120d0: 2822 5ebf efb3 93bc cd3b 7f66 9ea0 ee3f  ("^......;.f...?
  - 00120e0: 82b9 3487 ad12 6abc bfda 0b75 12a0 ee3f  ..4...j....u...?
  - 00120f0: eea9 6db8 ef67 63bc 2f1a 653c b29f ee3f  ..m..gc./.e<...?
  - 0012100: 5188 e054 3ddc 80bc 8494 51f9 7d9f ee3f  Q..T=.....Q.}..?
  - 0012110: cf3e 5a7e 641f 78bc 745f ece8 759f ee3f  .>Z~d.x.t_..u..?
  - 0012120: b07d 8bc0 4aee 86bc 7481 a548 9a9f ee3f  .}..J...t..H...?
  - 0012130: 8ae6 551e 3219 86bc c967 4256 eb9f ee3f  ..U.2....gBV...?
  - 0012140: d3d4 095e cb9c 903c 3f5d de4f 69a0 ee3f  ...^...<?].Oi..?
  - 0012150: 1da5 4db9 dc32 7bbc 8701 eb73 14a1 ee3f  ..M..2{....s...?
  - 0012160: 6bc0 6754 fdec 943c 32c1 3001 eda1 ee3f  k.gT...<2.0....?
  - 0012170: 556c d6ab e1eb 653c 624e cf36 f3a2 ee3f  Ul....e<bN.6...?
  - 0012180: 42cf b32f c5a1 88bc 121a 3e54 27a4 ee3f  B../......>T'..?
  - 0012190: 3437 3bf1 b669 93bc 13ce 4c99 89a5 ee3f  47;..i....L....?
  - 00121a0: 1eff 193a 845e 80bc adc7 2346 1aa7 ee3f  ...:.^....#F...?
  - 00121b0: 6e57 72d8 50d4 94bc ed92 449b d9a8 ee3f  nWr.P.....D....?
  - 00121c0: 008a 0e5b 67ad 903c 9966 8ad9 c7aa ee3f  ...[g..<.f.....?
  - 00121d0: b4ea f0c1 2fb7 8d3c dba0 2a42 e5ac ee3f  ..../..<..*B...?
  - 00121e0: ffe7 c59c 60b6 65bc 8c44 b516 32af ee3f  ....`.e..D..2..?
  - 00121f0: 445f f359 83f6 7b3c 3677 1599 aeb1 ee3f  D_.Y..{<6w.....?
  - 0012200: 833d 1ea7 1f09 93bc c6ff 910b 5bb4 ee3f  .=..........[..?
  - 0012210: 291e 6c8b b8a9 5dbc e5c5 cdb0 37b7 ee3f  ).l...].....7..?
  - 0012220: 59b9 907c f923 6cbc 0f52 c8cb 44ba ee3f  Y..|.#l..R..D..?
  - 0012230: aaf9 f422 4343 92bc 504e de9f 82bd ee3f  ..."CC..PN.....?
  - 0012240: 4b8e 66d7 6cca 85bc ba07 ca70 f1c0 ee3f  K.f.l......p...?
  - 0012250: 27ce 912b fcaf 713c 90f0 a382 91c4 ee3f  '..+..q<.......?
  - 0012260: bb73 0ae1 35d2 6d3c 2323 e319 63c8 ee3f  .s..5.m<##..c..?
  - 0012270: 6322 6222 04c5 87bc 65e5 5d7b 66cc ee3f  c"b"....e.]{f..?
  - 0012280: d531 e2e3 861c 8b3c 332d 4aec 9bd0 ee3f  .1.....<3-J....?
  - 0012290: 15bb bcd3 d1bb 91bc 5d25 3eb2 03d5 ee3f  ........]%>....?
  - 00122a0: d231 ee9c 31cc 903c 58b3 3013 9ed9 ee3f  .1..1..<X.0....?
  - 00122b0: b35a 736e 8469 843c bffd 7955 6bde ee3f  .Zsn.i.<..yUk..?
  - 00122c0: b49d 8e97 cddf 82bc 7af3 d3bf 6be3 ee3f  ........z...k..?
  - 00122d0: 8733 cb92 771a 8c3c add3 5a99 9fe8 ee3f  .3..w..<..Z....?
  - 00122e0: fad9 d14a 8f7b 90bc 66b6 8d29 07ee ee3f  ...J.{..f..)...?
  - 00122f0: baae dc56 d9c3 55bc fb15 4fb8 a2f3 ee3f  ...V..U...O....?
  - 0012300: 40f6 a63d 0ea4 90bc 3a59 e58d 72f9 ee3f  @..=....:Y..r..?
  - 0012310: 3493 ad38 f4d6 68bc 475e fbf2 76ff ee3f  4..8..h.G^..v..?
  - 0012320: 358a 586b e2ee 91bc 4a06 a130 b005 ef3f  5.Xk....J..0...?
  - 0012330: cddd 5f0a d7ff 743c d2c1 4b90 1e0c ef3f  .._...t<..K....?
  - 0012340: ac98 92fa fbbd 91bc 091e d75b c212 ef3f  ...........[...?
  - 0012350: b30c af30 ae6e 733c 9c52 85dd 9b19 ef3f  ...0.ns<.R.....?
  - 0012360: 94fd 9f5c 32e3 8e3c 7ad0 ff5f ab20 ef3f  ...\2..<z.._. .?
  - 0012370: ac59 09d1 8fe0 843c 4bd1 572e f127 ef3f  .Y.....<K.W..'.?
  - 0012380: 671a 4e38 afcd 633c b5e7 0694 6d2f ef3f  g.N8..c<....m/.?
  - 0012390: 6819 926c 2c6b 673c 6990 efdc 2037 ef3f  h..l,kg<i... 7.?
  - 00123a0: d2b5 cc83 188a 80bc fac3 5d55 0b3f ef3f  ..........]U.?.?
  - 00123b0: 6ffa ff3f 5dad 8fbc 7c89 074a 2d47 ef3f  o..?]...|..J-G.?
  - 00123c0: 49a9 7538 ae0d 90bc f289 0d08 874f ef3f  I.u8.........O.?
  - 00123d0: a707 3da6 85a3 743c 87a4 fbdc 1858 ef3f  ..=...t<.....X.?
  - 00123e0: 0f22 4020 9e91 82bc 9883 c916 e360 ef3f  ."@ .........`.?
  - 00123f0: ac92 c1d5 505a 8e3c 8532 db03 e669 ef3f  ....PZ.<.2...i.?
  - 0012400: 4b6b 01ac 593a 843c 60b4 01f3 2173 ef3f  Kk..Y:.<`...!s.?
  - 0012410: 1f3e b407 21d5 82bc 5f9b 7b33 977c ef3f  .>..!..._.{3.|.?
  - 0012420: c90d 473b b92a 89bc 29a1 f514 4686 ef3f  ..G;.*..)...F..?
  - 0012430: d388 3a60 04b6 743c f63f 8be7 2e90 ef3f  ..:`..t<.?.....?
  - 0012440: 7172 9d51 ecc5 833c 834c c7fb 519a ef3f  qr.Q...<.L..Q..?
  - 0012450: f091 d38f 12f7 8fbc da90 a4a2 afa4 ef3f  ...............?
  - 0012460: 7d74 23e2 98ae 8dbc f167 8e2d 48af ef3f  }t#......g.-H..?
  - 0012470: 0820 aa41 bcc3 8e3c 275a 61ee 1bba ef3f  . .A...<'Za....?
  - 0012480: 32eb a9c3 942b 843c 97ba 6b37 2bc5 ef3f  2....+.<..k7+..?
  - 0012490: ee85 d131 a964 8a3c 4045 6e5b 76d0 ef3f  ...1.d.<@En[v..?
  - 00124a0: ede3 3be4 ba37 8ebc 14be 9cad fddb ef3f  ..;..7.........?
  - 00124b0: 9dcd 914d 3b89 773c d890 9e81 c1e7 ef3f  ...M;.w<.......?
  - 00124c0: 89cc 6041 c105 533c f171 8f2b c2f3 ef3f  ..`A..S<.q.+...?
  - 00124d0: 0038 fafe 422e e63f 3067 c793 57f3 2e3d  .8..B..?0g..W..=
  - 00124e0: 0100 0000 0000 e0bf 5b30 5155 5555 d53f  ........[0QUUU.?
  - 00124f0: 9045 ebff ffff cfbf 1101 f124 b399 c93f  .E.........$...?
  - 0012500: 9fc8 06e5 7555 c5bf 0000 0000 0000 e0bf  ....uU..........
  - 0012510: 7755 5555 5555 d53f cbfd ffff ffff cfbf  wUUUUU.?........
  - 0012520: 0cdd 9599 9999 c93f a745 6755 5555 c5bf  .......?.EgUUU..
  - 0012530: 30de 44a3 2449 c23f 653d 42a4 ffff bfbf  0.D.$I.?e=B.....
  - 0012540: cad6 2a28 8471 bc3f ff68 b043 eb99 b9bf  ..*(.q.?.h.C....
  - 0012550: 85d0 aff7 8281 b73f cd45 d175 1352 b5bf  .......?.E.u.R..
  - 0012560: 9fde e0c3 f034 f73f 0090 e679 7fcc d7bf  .....4.?...y....
  - 0012570: 1fe9 2c6a 7813 f73f 0000 0dc2 ee6f d7bf  ..,jx..?.....o..
  - 0012580: a0b5 fa08 60f2 f63f 00e0 5113 e313 d7bf  ....`..?..Q.....
  - 0012590: 7d8c 131f a6d1 f63f 0078 2838 5bb8 d6bf  }......?.x(8[...
  - 00125a0: d1b4 c50b 49b1 f63f 0078 8090 555d d6bf  ....I..?.x..U]..
  - 00125b0: ba0c 2f33 4791 f63f 0000 1876 d002 d6bf  ../3G..?...v....
  - 00125c0: 2342 2218 9f71 f63f 0090 9086 caa8 d5bf  #B"..q.?........
  - 00125d0: d91e a599 4f52 f63f 0050 0356 434f d5bf  ....OR.?.P.VCO..
  - 00125e0: c424 8faa 5633 f63f 0040 6bc3 37f6 d4bf  .$..V3.?.@k.7...
  - 00125f0: 14dc 9d6b b314 f63f 0050 a8fd a79d d4bf  ...k...?.P......
  - 0012600: 4c5c c652 64f6 f53f 00a8 8939 9245 d4bf  L\.Rd..?...9.E..
  - 0012610: 4f2c 91b5 67d8 f53f 00b8 b039 f4ed d3bf  O,..g..?...9....
  - 0012620: de90 5bcb bcba f53f 0070 8f44 ce96 d3bf  ..[....?.p.D....
  - 0012630: 781a d9f2 619d f53f 00a0 bd17 1e40 d3bf  x...a..?.....@..
  - 0012640: 8756 4612 5680 f53f 0080 46ef e2e9 d2bf  .VF.V..?..F.....
  - 0012650: d36b e7ce 9763 f53f 00e0 3038 1b94 d2bf  .k...c.?..08....
  - 0012660: 937f a7e2 2547 f53f 0088 da8c c53e d2bf  ....%G.?.....>..
  - 0012670: 8345 0642 ff2a f53f 0090 2729 e1e9 d1bf  .E.B.*.?..')....
  - 0012680: dfbd b2db 220f f53f 00f8 482b 6d95 d1bf  ...."..?..H+m...
  - 0012690: d7de 3447 8ff3 f43f 00f8 b99a 6741 d1bf  ..4G...?....gA..
  - 00126a0: 4028 decf 43d8 f43f 0098 ef94 d0ed d0bf  @(..C..?........
  - 00126b0: c8a3 78c0 3ebd f43f 0010 db18 a59a d0bf  ..x.>..?........
  - 00126c0: 8a25 e0c3 7fa2 f43f 00b8 6352 e647 d0bf  .%.....?..cR.G..
  - 00126d0: 3484 d424 0588 f43f 00f0 8645 22eb cfbf  4..$...?...E"...
  - 00126e0: 0b2d 191b ce6d f43f 00b0 1775 4a47 cfbf  .-...m.?...uJG..
  - 00126f0: 5418 39d3 d953 f43f 0030 103d 44a4 cebf  T.9..S.?.0.=D...
  - 0012700: 5a84 b444 273a f43f 00b0 e944 0d02 cebf  Z..D':.?...D....
  - 0012710: fbf8 1541 b520 f43f 00f0 7729 a260 cdbf  ...A. .?..w).`..
  - 0012720: b1f4 3eda 8207 f43f 0090 9504 01c0 ccbf  ..>....?........
  - 0012730: 8ffe 575d 8fee f33f 0010 8956 2920 ccbf  ..W]...?...V) ..
  - 0012740: e94c 0ba0 d9d5 f33f 0010 818d 1781 cbbf  .L.....?........
  - 0012750: 2bc1 10c0 60bd f33f 00d0 d3cc c9e2 cabf  +...`..?........
  - 0012760: b8da 752b 24a5 f33f 0090 122e 4045 cabf  ..u+$..?....@E..
  - 0012770: 02d0 9fcd 228d f33f 00f0 1d68 77a8 c9bf  ...."..?...hw...
  - 0012780: 1c7a 84c5 5b75 f33f 0030 4869 6d0c c9bf  .z..[u.?.0Him...
  - 0012790: e236 ad49 ce5d f33f 00c0 45a6 2071 c8bf  .6.I.].?..E. q..
  - 00127a0: 40d4 4d98 7946 f33f 0030 14b4 8fd6 c7bf  @.M.yF.?.0......
  - 00127b0: 24cb ffce 5c2f f33f 0070 623c b83c c7bf  $...\/.?.pb<.<..
  - 00127c0: 490d a175 7718 f33f 0060 379b 9aa3 c6bf  I..uw..?.`7.....
  - 00127d0: 9039 3e37 c801 f33f 00a0 b754 310b c6bf  .9>7...?...T1...
  - 00127e0: 41f8 95bb 4eeb f23f 0030 2476 7d73 c5bf  A...N..?.0$v}s..
  - 00127f0: d1a9 1902 0ad5 f23f 0030 c28f 7bdc c4bf  .......?.0..{...
  - 0012800: 2afd b7a8 f9be f23f 0000 d251 2c46 c4bf  *......?...Q,F..
  - 0012810: ab1b 0c7a 1ca9 f23f 0000 83bc 8ab0 c3bf  ...z...?........
  - 0012820: 30b5 1460 7293 f23f 0000 496b 991b c3bf  0..`r..?..Ik....
  - 0012830: f5a1 5757 fa7d f23f 0040 a490 5487 c2bf  ..WW.}.?.@..T...
  - 0012840: bf3b 1d9b b368 f23f 00a0 79f8 b9f3 c1bf  .;...h.?..y.....
  - 0012850: bdf5 8f83 9d53 f23f 00a0 2c25 c860 c1bf  .....S.?..,%.`..
  - 0012860: 3b08 c9aa b73e f23f 0020 f757 7fce c0bf  ;....>.?. .W....
  - 0012870: b640 a92b 012a f23f 00a0 fe49 dc3c c0bf  .@.+.*.?...I.<..
  - 0012880: 3241 cc96 7915 f23f 0080 4bbc bd57 bfbf  2A..y..?..K..W..
  - 0012890: 9bfc d21d 2001 f23f 0040 4096 0837 bebf  .... ..?.@@..7..
  - 00128a0: 0b48 4d49 f4ec f13f 0040 f93e 9817 bdbf  .HMI...?.@.>....
  - 00128b0: 6965 8f52 f5d8 f13f 00a0 d84e 67f9 bbbf  ie.R...?...Ng...
  - 00128c0: 7c7e 5711 23c5 f13f 0060 2f20 79dc babf  |~W.#..?.`/ y...
  - 00128d0: e926 cb74 7cb1 f13f 0080 28e7 c3c0 b9bf  .&.t|..?..(.....
  - 00128e0: b61a 2c0c 019e f13f 00c0 72b3 46a6 b8bf  ..,....?..r.F...
  - 00128f0: bd70 b67b b08a f13f 0000 acb3 018d b7bf  .p.{...?........
  - 0012900: b6bc ef25 8a77 f13f 0000 3845 f174 b6bf  ...%.w.?..8E.t..
  - 0012910: da31 4c35 8d64 f13f 0080 876d 0e5e b5bf  .1L5.d.?...m.^..
  - 0012920: dd5f 2790 b951 f13f 00e0 a1de 5c48 b4bf  ._'..Q.?....\H..
  - 0012930: 4cd2 32a4 0e3f f13f 00a0 6a4d d933 b3bf  L.2..?.?..jM.3..
  - 0012940: daf9 1072 8b2c f13f 0060 c5f8 7920 b2bf  ...r.,.?.`..y ..
  - 0012950: 31b5 ec28 301a f13f 0020 6298 460e b1bf  1..(0..?. b.F...
  - 0012960: af34 84da fb07 f13f 0000 d26a 6cfa afbf  .4.....?...jl...
  - 0012970: b36b 4e0f eef5 f03f 0040 774a 8dda adbf  .kN....?.@wJ....
  - 0012980: ce9f 2a5d 06e4 f03f 0000 85e4 ecbc abbf  ..*]...?........
  - 0012990: 21a5 2c63 44d2 f03f 00c0 1240 89a1 a9bf  !.,cD..?...@....
  - 00129a0: 1a98 e27c a7c0 f03f 00c0 0233 5888 a7bf  ...|...?...3X...
  - 00129b0: d136 c683 2faf f03f 0080 d667 5e71 a5bf  .6../..?...g^q..
  - 00129c0: 3913 a098 db9d f03f 0080 6549 8a5c a3bf  9......?..eI.\..
  - 00129d0: dfe7 52af ab8c f03f 0040 1564 e349 a1bf  ..R....?.@.d.I..
  - 00129e0: fb28 4e2f 9f7b f03f 0080 eb82 c072 9ebf  .(N/.{.?.....r..
  - 00129f0: 198f 358c b56a f03f 0080 5252 f155 9abf  ..5..j.?..RR.U..
  - 0012a00: 2cf9 eca5 ee59 f03f 0080 81cf 623d 96bf  ,....Y.?....b=..
  - 0012a10: 902c d1cd 4949 f03f 0000 aa8c fb28 92bf  .,..II.?.....(..
  - 0012a20: a9ad f0c6 c638 f03f 0000 f920 7b31 8cbf  .....8.?... {1..
  - 0012a30: a932 7913 6528 f03f 0000 aa5d 3519 84bf  .2y.e(.?...]5...
  - 0012a40: 4873 ea27 2418 f03f 0000 ecc2 0312 78bf  Hs.'$..?......x.
  - 0012a50: 95b1 1406 0408 f03f 0000 2479 0904 60bf  .......?..$y..`.
  - 0012a60: 1afa 26f7 1fe0 ef3f 0000 9084 f3ef 6f3f  ..&....?......o?
  - 0012a70: 74ea 61c2 1ca1 ef3f 0000 3d35 41dc 873f  t.a....?..=5A..?
  - 0012a80: 2e99 81b0 1063 ef3f 0080 c2c4 a3ce 933f  .....c.?.......?
  - 0012a90: cdad ee3c f625 ef3f 0000 8914 c19f 9b3f  ...<.%.?.......?
  - 0012aa0: e713 9103 c8e9 ee3f 0000 11ce d8b0 a13f  .......?.......?
  - 0012ab0: abb1 cb78 80ae ee3f 00c0 01d0 5b8a a53f  ...x...?....[..?
  - 0012ac0: 9b0c 9da2 1a74 ee3f 0080 d840 835c a93f  .....t.?...@.\.?
  - 0012ad0: b599 0a83 913a ee3f 0080 57ef 6a27 ad3f  .....:.?..W.j'.?
  - 0012ae0: 569a 6009 e001 ee3f 00c0 98e5 9875 b03f  V.`....?.....u.?
  - 0012af0: 98bb 77e5 01ca ed3f 0020 0de3 f553 b23f  ..w....?. ...S.?
  - 0012b00: 0391 7c0b f292 ed3f 0000 388b dd2e b43f  ..|....?..8....?
  - 0012b10: ce5c fb66 ac5c ed3f 00c0 5787 5906 b63f  .\.f.\.?..W.Y..?
  - 0012b20: 9dde 5eaa 2c27 ed3f 0000 6a35 76da b73f  ..^.,'.?..j5v..?
  - 0012b30: cd2c 6b3e 6ef2 ec3f 0060 1c4e 43ab b93f  .,k>n..?.`.NC..?
  - 0012b40: 0279 a7a2 6dbe ec3f 0060 0dbb c778 bb3f  .y..m..?.`...x.?
  - 0012b50: 6d08 376d 268b ec3f 0020 e732 1343 bd3f  m.7m&..?. .2.C.?
  - 0012b60: 0458 5dbd 9458 ec3f 0060 de71 310a bf3f  .X]..X.?.`.q1..?
  - 0012b70: 8c9f bb33 b526 ec3f 0040 912b 1567 c03f  ...3.&.?.@.+.g.?
  - 0012b80: 3fe7 ecee 83f5 eb3f 00b0 9282 8547 c13f  ?......?.....G.?
  - 0012b90: c196 db75 fdc4 eb3f 0030 cacd 6e26 c23f  ...u...?.0..n&.?
  - 0012ba0: 284a 860c 1e95 eb3f 0050 c5a6 d703 c33f  (J.....?.P.....?
  - 0012bb0: 2c3e efc5 e265 eb3f 0010 333c c3df c33f  ,>...e.?..3<...?
  - 0012bc0: 8b88 c967 4837 eb3f 0080 7a6b 36ba c43f  ...gH7.?..zk6..?
  - 0012bd0: 4a30 1d21 4b09 eb3f 00f0 d128 3993 c53f  J0.!K..?...(9..?
  - 0012be0: 7eef f285 e8db ea3f 00f0 1824 cd6a c63f  ~......?...$.j.?
  - 0012bf0: a23d 6031 1daf ea3f 0090 66ec f840 c73f  .=`1...?..f..@.?
  - 0012c00: a758 d33f e682 ea3f 00f0 1af5 c015 c83f  .X.?...?.......?
  - 0012c10: 8b73 09ef 4057 ea3f 0080 f654 29e9 c83f  .s..@W.?...T)..?
  - 0012c20: 274b ab90 2a2c ea3f 0040 f802 36bb c93f  'K..*,.?.@..6..?
  - 0012c30: d1f2 9313 a001 ea3f 0000 2c1c ed8b ca3f  .......?..,....?
  - 0012c40: 1b3c db24 9fd7 e93f 00d0 015c 515b cb3f  .<.$...?...\Q[.?
  - 0012c50: 90b1 c705 25ae e93f 00c0 bccc 6729 cc3f  ....%..?....g).?
  - 0012c60: 2fce 97f2 2e85 e93f 0060 48d5 35f6 cc3f  /......?.`H.5..?
  - 0012c70: 754b a4ee ba5c e93f 00c0 4634 bdc1 cd3f  uK...\.?..F4...?
  - 0012c80: 3848 e79d c634 e93f 00e0 cfb8 018c ce3f  8H...4.?.......?
  - 0012c90: e652 672f 4f0d e93f 0090 17c0 0955 cf3f  .Rg/O..?.....U.?
  - 0012ca0: 9dd7 ff8e 52e6 e83f 00b8 1f12 6c0e d03f  ....R..?....l..?
  - 0012cb0: 7c00 cc9f cebf e83f 00d0 930e b871 d03f  |......?.....q.?
  - 0012cc0: 0ec3 beda c099 e83f 0070 869e 6bd4 d03f  .......?.p..k..?
  - 0012cd0: fb17 23aa 2774 e83f 00d0 4b33 8736 d13f  ..#.'t.?..K3.6.?
  - 0012ce0: 089a b3ac 004f e83f 0048 2367 0d98 d13f  .....O.?.H#g...?
  - 0012cf0: 553e 65e8 492a e83f 0080 cce0 fff8 d13f  U>e.I*.?.......?
  - 0012d00: 6002 f495 0106 e83f 0068 63d7 5f59 d23f  `......?.hc._Y.?
  - 0012d10: 29a3 e063 25e2 e73f 00a8 1409 30b9 d23f  )..c%..?....0..?
  - 0012d20: adb5 dc77 b3be e73f 0060 4310 7218 d33f  ...w...?.`C.r..?
  - 0012d30: c225 9767 aa9b e73f 0018 ec6d 2677 d33f  .%.g...?...m&w.?
  - 0012d40: 5706 17f2 0779 e73f 0030 affb 4fd5 d33f  W....y.?.0..O..?
  - 0012d50: 0c13 d6db ca56 e73f 00e0 2fe3 ee32 d43f  .....V.?../..2.?
  - 0012d60: 6bb6 4f01 0010 e63f 3c5b 4291 6c02 7e3c  k.O....?<[B.l.~<
  - 0012d70: 95b4 4d03 0030 e63f 415d 0048 eabf 8d3c  ..M..0.?A].H...<
  - 0012d80: 78d4 940d 0050 e63f b7a5 d686 a77f 8e3c  x....P.?.......<
  - 0012d90: ad6f 4e07 0070 e63f 4c25 546b eafc 613c  .oN..p.?L%Tk..a<
  - 0012da0: ae0f dffe ff8f e63f fd0e 594c 277e 7cbc  .......?..YL'~|.
  - 0012db0: bcc5 6307 00b0 e63f 01da dc48 68c1 8abc  ..c....?...Hh...
  - 0012dc0: f6c1 5c1e 00d0 e63f 1193 499d 1c3f 833c  ..\....?..I..?.<
  - 0012dd0: 3ef6 05eb ffef e63f 532d e21a 0480 7ebc  >......?S-....~.
  - 0012de0: 8097 860e 0010 e73f 5279 0971 66ff 7b3c  .......?Ry.qf.{<
  - 0012df0: 12e9 67fc ff2f e73f 2487 bd26 e200 8c3c  ..g../.?$..&...<
  - 0012e00: 6a11 81df ff4f e73f d201 f16e 9102 6ebc  j....O.?...n..n.
  - 0012e10: 909c 670f 0070 e73f 749c 54cd 71fc 67bc  ..g..p.?t.T.q.g.
  - 0012e20: 35c8 7efa ff8f e73f 8304 f59e c1be 813c  5.~....?.......<
  - 0012e30: e6c2 20fe ffaf e73f 6564 cc29 177e 70bc  .. ....?ed.).~p.
  - 0012e40: 00c9 3fed ffcf e73f 1c8b 7b08 7280 80bc  ..?....?..{.r...
  - 0012e50: 761a 26e9 ffef e73f aef9 9d6d 28c0 8d3c  v.&....?...m(..<
  - 0012e60: e8a3 9c04 0010 e83f 334c e551 d27f 893c  .......?3L.Q...<
  - 0012e70: 8f2c 9317 0030 e83f 81f3 30b6 e9fe 8abc  .,...0.?..0.....
  - 0012e80: 9c73 3306 0050 e83f bc35 656b bfbf 893c  .s3..P.?.5ek...<
  - 0012e90: c689 4220 0070 e83f 757b 11f3 65bf 8bbc  ..B .p.?u{..e...
  - 0012ea0: 0479 f5eb ff8f e83f 57cb 3da2 6e00 89bc  .y.....?W.=.n...
  - 0012eb0: df04 bc22 00b0 e83f 0a4b e038 df00 7dbc  ..."...?.K.8..}.
  - 0012ec0: 8a1b 0ce5 ffcf e83f 059f ff46 7100 88bc  .......?...Fq...
  - 0012ed0: 438e 91fc ffef e83f 3870 7ad0 7b81 833c  C......?8pz.{..<
  - 0012ee0: c75f fa1e 0010 e93f 03b4 df76 913e 893c  ._.....?...v.>.<
  - 0012ef0: b97b 4613 0030 e93f 7602 984b 4e80 7f3c  .{F..0.?v..KN..<
  - 0012f00: 6f07 eee6 ff4f e93f 2e62 ffd9 f07e 8fbc  o....O.?.b...~..
  - 0012f10: d112 3cde ff6f e93f ba38 2696 aa82 70bc  ..<..o.?.8&...p.
  - 0012f20: 0d8a 45f4 ff8f e93f efa8 6491 1b80 87bc  ..E....?..d.....
  - 0012f30: 3e2e 98dd ffaf e93f 3793 5a8a e040 87bc  >......?7.Z..@..
  - 0012f40: 66fb 49ed ffcf e93f 00e0 9bc1 08ce 3f3c  f.I....?......?<
  - 0012f50: 519c f120 00f0 e93f 0a5b 8827 aa3f 8abc  Q.. ...?.[.'.?..
  - 0012f60: 06b0 4511 0010 ea3f 56da 5899 48ff 743c  ..E....?V.X.H.t<
  - 0012f70: faf6 bb07 0030 ea3f 186d 2b8a abbe 8c3c  .....0.?.m+....<
  - 0012f80: 791d 9710 0050 ea3f 3079 78dd cafe 883c  y....P.?0yx....<
  - 0012f90: 482e f51d 0070 ea3f dbab d83d 7641 8fbc  H....p.?...=vA..
  - 0012fa0: 5233 591c 0090 ea3f 1276 c284 02bf 8ebc  R3Y....?.v......
  - 0012fb0: 4b3e 4f2a 00b0 ea3f 5f3f ff3c 04fd 69bc  K>O*...?_?.<..i.
  - 0012fc0: d11e aed7 ffcf ea3f b470 9012 e73e 82bc  .......?.p...>..
  - 0012fd0: 7804 51ee ffef ea3f a3de 0ee0 3e06 6a3c  x.Q....?....>.j<
  - 0012fe0: 5b0d 65db ff0f eb3f b90a 1f38 c806 5a3c  [.e....?...8..Z<
  - 0012ff0: 57ca aafe ff2f eb3f 1d3c 2374 1e01 79bc  W..../.?.<#t..y.
  - 0013000: dcba 95d9 ff4f eb3f 9f2a 8668 10ff 79bc  .....O.?.*.h..y.
  - 0013010: 9c65 9e24 0070 eb3f 3e4f 86d0 45ff 8a3c  .e.$.p.?>O..E..<
  - 0013020: 4016 87f9 ff8f eb3f f9c3 c296 77fe 7c3c  @......?....w.|<
  - 0013030: 4fcb 04d2 ffaf eb3f c42b f2ee 27ff 63bc  O......?.+..'.c.
  - 0013040: 455c 41d2 ffcf eb3f 21ea 3bee b7ff 6cbc  E\A....?!.;...l.
  - 0013050: df09 63f8 ffef eb3f 5c0b 2e97 0341 81bc  ..c....?\....A..
  - 0013060: 5376 b5e1 ff0f ec3f 196a b794 64c1 8b3c  Sv.....?.j..d..<
  - 0013070: e357 faf1 ff2f ec3f edc6 308d effe 64bc  .W.../.?..0...d.
  - 0013080: 24e4 bfdc ff4f ec3f 7547 ecbc 683f 84bc  $....O.?uG..h?..
  - 0013090: f7b9 54ed ff6f ec3f ece0 53f0 a37e 843c  ..T..o.?..S..~.<
  - 00130a0: d58f 99eb ff8f ec3f f192 f98d 0683 733c  .......?......s<
  - 00130b0: 9a21 2521 00b0 ec3f 040e 1864 8efd 68bc  .!%!...?...d..h.
  - 00130c0: 9c46 94dd ffcf ec3f 72ea c71c be7e 8e3c  .F.....?r....~.<
  - 00130d0: 76c4 fdea ffef ec3f fe88 9fad 39be 8e3c  v......?....9..<
  - 00130e0: 2bf8 9a16 0010 ed3f 715a b9a8 917d 753c  +......?qZ...}u<
  - 00130f0: 1df7 0f0d 0030 ed3f dac7 7069 90c1 893c  .....0.?..pi...<
  - 0013100: c40f 79ea ff4f ed3f 0cfe 58c5 370e 58bc  ..y..O.?..X.7.X.
  - 0013110: e587 dc2e 0070 ed3f 440f c14d d680 7fbc  .....p.?D..M....
  - 0013120: aa82 dc21 0090 ed3f 5c5c fd94 8f7c 74bc  ...!...?\\...|t.
  - 0013130: 8302 6bd8 ffaf ed3f 7e61 21c5 1d7f 8c3c  ..k....?~a!....<
  - 0013140: 3947 6c29 00d0 ed3f 53b1 ffb2 9e01 883c  9Gl)...?S......<
  - 0013150: f590 44e5 ffef ed3f 89cc 52c6 d200 6e3c  ..D....?..R...n<
  - 0013160: 94f6 abcd ff0f ee3f d269 2d20 4083 7fbc  .......?.i- @...
  - 0013170: ddc8 52db ff2f ee3f 6408 1bca c100 7b3c  ..R../.?d.....{<
  - 0013180: ef16 42f2 ff4f ee3f 51ab 94b0 a8ff 723c  ..B..O.?Q.....r<
  - 0013190: 115e 8ae8 ff6f ee3f 59be efb1 73f6 57bc  .^...o.?Y...s.W.
  - 00131a0: 0dff 9e11 0090 ee3f 01c8 0b5e 8d80 84bc  .......?...^....
  - 00131b0: 4417 a5df ffaf ee3f b520 43d5 0600 783c  D......?. C...x<
  - 00131c0: a17f 121a 00d0 ee3f 925c 5660 f802 50bc  .......?.\V`..P.
  - 00131d0: c4bc ba07 00f0 ee3f 11e6 355d 4440 85bc  .......?..5]D@..
  - 00131e0: 028d 7af5 ff0f ef3f 0591 ef39 31fb 4fbc  ..z....?...91.O.
  - 00131f0: c78a e51e 0030 ef3f 5511 73f2 ac81 8a3c  .....0.?U.s....<
  - 0013200: 9434 82f5 ff4f ef3f 43c7 d7d4 413f 8a3c  .4...O.?C...A?.<
  - 0013210: 6b4c a9fc ff6f ef3f 7578 981c f402 62bc  kL...o.?ux....b.
  - 0013220: 41c4 f9e1 ff8f ef3f 4be7 77f4 d17d 773c  A......?K.w..}w<
  - 0013230: 7ee3 e0d2 ffaf ef3f 31a3 7c9a 1901 6fbc  ~......?1.|...o.
  - 0013240: 9ee4 771c 00d0 ef3f b1ac ce4b ee81 713c  ..w....?...K..q<
  - 0013250: 31c3 e0f7 ffef ef3f 5a87 7001 3705 6ebc  1......?Z.p.7.n.
  - 0013260: 6e60 65f4 ff0f f03f da0a 1c49 ad7e 8abc  n`e....?...I.~..
  - 0013270: 587a 86f3 ff2f f03f e0b2 fcc3 697f 97bc  Xz.../.?....i...
  - 0013280: 170d fcfd ff4f f03f 5b94 cb34 febf 973c  .....O.?[..4...<
  - 0013290: 824d cd03 0070 f03f cb56 e4c0 8300 823c  .M...p.?.V.....<
  - 00132a0: e8cb f2f9 ff8f f03f 1a75 37be dfff 6dbc  .......?.u7...m.
  - 00132b0: 65da 0c01 00b0 f03f eb26 e6ae 7f3f 91bc  e......?.&...?..
  - 00132c0: 38d3 a401 00d0 f03f f79f 4879 fa7d 803c  8......?..Hy.}.<
  - 00132d0: fdfd dafa ffef f03f c06b d670 0504 77bc  .......?.k.p..w.
  - 00132e0: 96fd ba0b 0010 f13f 620b 6d84 d480 8e3c  .......?b.m....<
  - 00132f0: 5df4 e5fa ff2f f13f ef36 fd64 fabf 9d3c  ]..../.?.6.d...<
  - 0013300: d99a d50d 0050 f13f ae50 1270 7700 9a3c  .....P.?.P.pw..<
  - 0013310: 9a55 210f 0070 f13f eede e3e2 f9fd 8d3c  .U!..p.?.......<
  - 0013320: 2654 27fc ff8f f13f 7372 3bdc 3000 913c  &T'....?sr;.0..<
  - 0013330: 593c 3d12 00b0 f13f 8801 0380 797f 993c  Y<=....?....y..<
  - 0013340: b79e 29f8 ffcf f13f 678c 9fab 32f9 65bc  ..)....?g...2.e.
  - 0013350: 00d4 8af4 ffef f13f eb5b a79d bf7f 933c  .......?.[.....<
  - 0013360: a486 8b0c 0010 f23f 225b fd91 6b80 9f3c  .......?"[..k..<
  - 0013370: 0343 8503 0030 f23f 33bf 9feb c2ff 933c  .C...0.?3......<
  - 0013380: 84f6 bcff ff4f f23f 722e 2e7e e701 763c  .....O.?r..~..v<
  - 0013390: d921 29f5 ff6f f23f 610c 7f76 bbfc 7f3c  .!)..o.?a..v...<
  - 00133a0: 3c3a 9314 0090 f23f 2b41 023c ca02 72bc  <:.....?+A.<..r.
  - 00133b0: 1363 5514 00b0 f23f 021f f233 8280 92bc  .cU....?...3....
  - 00133c0: 3b52 feeb ffcf f23f f2dc 4f38 7eff 88bc  ;R.....?..O8~...
  - 00133d0: 96ad b80b 00f0 f23f c541 3050 51ff 85bc  .......?.A0PQ...
  - 00133e0: afe2 7afb ff0f f33f 9d28 5e88 7100 81bc  ..z....?.(^.q...
  - 00133f0: 7f5f acfe ff2f f33f 15b7 b73f 5dff 91bc  ._.../.?...?]...
  - 0013400: 5667 a60c 0050 f33f bd82 8b22 827f 953c  Vg...P.?..."...<
  - 0013410: 21f7 fb11 0070 f33f ccd5 0dc4 ba00 803c  !....p.?.......<
  - 0013420: b92f 59f9 ff8f f33f 51a7 b22d 9d3f 94bc  ./Y....?Q..-.?..
  - 0013430: 42d2 dd04 00b0 f33f e138 7670 6b7f 853c  B......?.8vpk..<
  - 0013440: 57c9 b2f5 ffcf f33f 3112 bf10 3a02 7a3c  W......?1...:.z<
  - 0013450: 18b4 b0ea ffef f33f b052 b166 6d7f 983c  .......?.R.fm..<
  - 0013460: f4af 3215 0010 f43f 2485 195f 37f8 673c  ..2....?$.._7.g<
  - 0013470: 298b 4717 0030 f43f 4351 dc72 e601 833c  ).G..0.?CQ.r...<
  - 0013480: 63b4 95e7 ff4f f43f 5a89 b2b8 69ff 893c  c....O.?Z...i..<
  - 0013490: e075 04e8 ff6f f43f 54f2 c29b b1c0 95bc  .u...o.?T.......
  - 00134a0: e7c1 6fef ff8f f43f 722a 3af2 0940 9b3c  ..o....?r*:..@.<
  - 00134b0: 04a7 bee5 ffaf f43f 457d 0dbf b7ff 94bc  .......?E}......
  - 00134c0: de27 1017 00d0 f43f 3d6a dc71 64c0 99bc  .'.....?=j.qd...
  - 00134d0: e23e f00f 00f0 f43f 1c53 850b 897f 973c  .>.....?.S.....<
  - 00134e0: d14b dc12 0010 f53f 36a4 6671 6504 603c  .K.....?6.fqe.`<
  - 00134f0: 7a27 0516 0030 f53f 0932 23ce cebf 96bc  z'...0.?.2#.....
  - 0013500: 4c70 dbec ff4f f53f d7a1 0505 7202 89bc  Lp...O.?....r...
  - 0013510: a954 5fef ff6f f53f 1264 c90e e6bf 9b3c  .T_..o.?.d.....<
  - 0013520: 1210 e617 0090 f53f 90ef af81 c57e 883c  .......?.....~.<
  - 0013530: 923e c903 00b0 f53f c00c bf0a 0841 9fbc  .>.....?.....A..
  - 0013540: bc19 491d 00d0 f53f 2947 25fb 2a81 98bc  ..I....?)G%.*...
  - 0013550: 897a b8e7 ffef f53f 0469 ed80 b77e 94bc  .z.....?.i...~..
  - 0013560: 2d2b 2020 2030 5830 7800 286e 756c 6c29  -+   0X0x.(null)
  - 0013570: 0000 0000 0000 0000 0000 0000 0000 0000  ................
  - 0013580: 1900 0a00 1919 1900 0000 0005 0000 0000  ................
  - 0013590: 0000 0900 0000 000b 0000 0000 0000 0000  ................
  - 00135a0: 1900 110a 1919 1903 0a07 0001 1b09 0b18  ................
  - 00135b0: 0000 0906 0b00 000b 0006 1900 0000 1919  ................
  - 00135c0: 1900 0000 0000 0000 0000 0000 0000 0000  ................
  - 00135d0: 000e 0000 0000 0000 0000 1900 0a0d 1919  ................
  - 00135e0: 1900 0d00 0002 0009 0e00 0000 0900 0e00  ................
  - 00135f0: 000e 0000 0000 0000 0000 0000 0000 0000  ................
  - 0013600: 0000 0000 0000 0000 0000 000c 0000 0000  ................
  - 0013610: 0000 0000 0000 0013 0000 0000 1300 0000  ................
  - 0013620: 0009 0c00 0000 0000 0c00 000c 0000 0000  ................
  - 0013630: 0000 0000 0000 0000 0000 0000 0000 0000  ................
  - 0013640: 0000 0000 0010 0000 0000 0000 0000 0000  ................
  - 0013650: 000f 0000 0004 0f00 0000 0009 1000 0000  ................
  - 0013660: 0000 1000 0010 0000 0000 0000 0000 0000  ................
  - 0013670: 0000 0000 0000 0000 0000 0000 0000 0012  ................
  - 0013680: 0000 0000 0000 0000 0000 0011 0000 0000  ................
  - 0013690: 1100 0000 0009 1200 0000 0000 1200 0012  ................
  - 00136a0: 0000 1a00 0000 1a1a 1a00 0000 0000 0000  ................
  - 00136b0: 0000 0000 0000 0000 0000 0000 0000 0000  ................
  - 00136c0: 0000 1a00 0000 1a1a 1a00 0000 0000 0009  ................
  - 00136d0: 0000 0000 0000 0000 0000 0000 0000 0000  ................
  - 00136e0: 0000 0000 0000 0000 0000 0000 0000 0000  ................
  - 00136f0: 0000 0014 0000 0000 0000 0000 0000 0017  ................
  - 0013700: 0000 0000 1700 0000 0009 1400 0000 0000  ................
  - 0013710: 1400 0014 0000 0000 0000 0000 0000 0000  ................
  - 0013720: 0000 0000 0000 0000 0000 0000 0016 0000  ................
  - 0013730: 0000 0000 0000 0000 0015 0000 0000 1500  ................
  - 0013740: 0000 0009 1600 0000 0000 1600 0016 0000  ................
  - 0013750: 5375 7070 6f72 7420 666f 7220 666f 726d  Support for form
  - 0013760: 6174 7469 6e67 206c 6f6e 6720 646f 7562  atting long doub
  - 0013770: 6c65 2076 616c 7565 7320 6973 2063 7572  le values is cur
  - 0013780: 7265 6e74 6c79 2064 6973 6162 6c65 642e  rently disabled.
  - 0013790: 0a54 6f20 656e 6162 6c65 2069 742c 202e  .To enable it, .
  - 00137a0: 0a00 0000 0000 0000 0000 0000 0000 0000  ................
  - 00137b0: 3031 3233 3435 3637 3839 4142 4344 4546  0123456789ABCDEF
  - 00137c0: 2d30 582b 3058 2030 582d 3078 2b30 7820  -0X+0X 0X-0x+0x 
  - 00137d0: 3078 0069 6e66 0049 4e46 006e 616e 004e  0x.inf.INF.nan.N
  - 00137e0: 414e 002e 0000 0000 0000 0000 0000 0000  AN..............
  - 00137f0: 0300 0000 0400 0000 0400 0000 0600 0000  ................
  - 0013800: 83f9 a200 444e 6e00 fc29 1500 d157 2700  ....DNn..)...W'.
  - 0013810: dd34 f500 62db c000 3c99 9500 4190 4300  .4..b...<...A.C.
  - 0013820: 6351 fe00 bbde ab00 b761 c500 3a6e 2400  cQ.......a..:n$.
  - 0013830: d24d 4200 4906 e000 09ea 2e00 1c92 d100  .MB.I...........
  - 0013840: eb1d fe00 29b1 1c00 e83e a700 f535 8200  ....)....>...5..
  - 0013850: 44bb 2e00 9ce9 8400 b426 7000 417e 5f00  D........&p.A~_.
  - 0013860: d691 3900 5383 3900 9cf4 3900 8b5f 8400  ..9.S.9...9.._..
  - 0013870: 28f9 bd00 f81f 3b00 deff 9700 0f98 0500  (.....;.........
  - 0013880: 112f ef00 0a5a 8b00 6d1f 6d00 cf7e 3600  ./...Z..m.m..~6.
  - 0013890: 09cb 2700 464f b700 9e66 3f00 2dea 5f00  ..'.FO...f?.-._.
  - 00138a0: ba27 7500 e5eb c700 3d7b f100 f739 0700  .'u.....={...9..
  - 00138b0: 9252 8a00 fb6b ea00 1fb1 5f00 085d 8d00  .R...k...._..]..
  - 00138c0: 3003 5600 7bfc 4600 f0ab 6b00 20bc cf00  0.V.{.F...k. ...
  - 00138d0: 36f4 9a00 e3a9 1d00 5e61 9100 081b e600  6.......^a......
  - 00138e0: 8599 6500 a014 5f00 8d40 6800 80d8 ff00  ..e..._..@h.....
  - 00138f0: 2773 4d00 0606 3100 ca56 1500 c9a8 7300  'sM...1..V....s.
  - 0013900: 7be2 6000 6b8c c000 19c4 4700 cd67 c300  {.`.k.....G..g..
  - 0013910: 09e8 dc00 5983 2a00 8b76 c400 a61c 9600  ....Y.*..v......
  - 0013920: 44af dd00 1957 d100 a53e 0500 0507 ff00  D....W...>......
  - 0013930: 337e 3f00 c232 e800 984f de00 bb7d 3200  3~?..2...O...}2.
  - 0013940: 263d c300 1e6b ef00 9ff8 5e00 351f 3a00  &=...k....^.5.:.
  - 0013950: 7ff2 ca00 f187 1d00 7c90 2100 6a24 7c00  ........|.!.j$|.
  - 0013960: d56e fa00 302d 7700 153b 4300 b514 c600  .n..0-w..;C.....
  - 0013970: c319 9d00 adc4 c200 2c4d 4100 0c00 5d00  ........,MA...].
  - 0013980: 867d 4600 e371 2d00 9bc6 9a00 3362 0000  .}F..q-.....3b..
  - 0013990: b4d2 7c00 b4a7 9700 3755 d500 d73e f600  ..|.....7U...>..
  - 00139a0: a310 1800 4d76 fc00 649d 2a00 70d7 ab00  ....Mv..d.*.p...
  - 00139b0: 637c f800 7ab0 5700 1715 e700 c049 5600  c|..z.W......IV.
  - 00139c0: 3bd6 d900 a784 3800 2423 cb00 d68a 7700  ;.....8.$#....w.
  - 00139d0: 5a54 2300 001f b900 f10a 1b00 19ce df00  ZT#.............
  - 00139e0: 9f31 ff00 661e 6a00 9957 6100 acfb 4700  .1..f.j..Wa...G.
  - 00139f0: 7e7f d800 2265 b700 32e8 8900 e6bf 6000  ~..."e..2.....`.
  - 0013a00: efc4 cd00 6c36 0900 5d3f d400 16de d700  ....l6..]?......
  - 0013a10: 583b de00 de9b 9200 d222 2800 2886 e800  X;......."(.(...
  - 0013a20: e258 4d00 c6ca 3200 08e3 1600 e07d cb00  .XM...2......}..
  - 0013a30: 17c0 5000 f31d a700 18e0 5b00 2e13 3400  ..P.......[...4.
  - 0013a40: 8312 6200 8348 0100 f58e 5b00 adb0 7f00  ..b..H....[.....
  - 0013a50: 1ee9 f200 484a 4300 1067 d300 aadd d800  ....HJC..g......
  - 0013a60: ae5f 4200 6a61 ce00 0a28 a400 d399 b400  ._B.ja...(......
  - 0013a70: 06a6 f200 5c77 7f00 a3c2 8300 613c 8800  ....\w......a<..
  - 0013a80: 8a73 7800 af8c 5a00 6fd7 bd00 2da6 6300  .sx...Z.o...-.c.
  - 0013a90: f4bf cb00 8d81 ef00 26c1 6700 55ca 4500  ........&.g.U.E.
  - 0013aa0: cad9 3600 28a8 d200 c261 8d00 12c9 7700  ..6.(....a....w.
  - 0013ab0: 0426 1400 1246 9b00 c459 c400 c8c5 4400  .&...F...Y....D.
  - 0013ac0: 4db2 9100 0017 f300 d443 ad00 2949 e500  M........C..)I..
  - 0013ad0: fdd5 1000 00be fc00 1e94 cc00 70ce ee00  ............p...
  - 0013ae0: 133e f500 ecf1 8000 b3e7 c300 c7f8 2800  .>............(.
  - 0013af0: 9305 9400 c171 3e00 2e09 b300 0b45 f300  .....q>......E..
  - 0013b00: 8812 9c00 ab20 7b00 2eb5 9f00 4792 c200  ..... {.....G...
  - 0013b10: 7b32 2f00 0c55 6d00 72a7 9000 6be7 1f00  {2/..Um.r...k...
  - 0013b20: 31cb 9600 7916 4a00 4179 e200 f4df 8900  1...y.J.Ay......
  - 0013b30: e894 9700 e2e6 8400 9931 9700 88ed 6b00  .........1....k.
  - 0013b40: 5f5f 3600 bbfd 0e00 489a b400 67a4 6c00  __6.....H...g.l.
  - 0013b50: 7172 4200 8d5d 3200 9f15 b800 bce5 0900  qrB..]2.........
  - 0013b60: 8d31 2500 f774 3900 3005 1c00 0d0c 0100  .1%..t9.0.......
  - 0013b70: 4b08 6800 2cee 5800 47aa 9000 74e7 0200  K.h.,.X.G...t...
  - 0013b80: bdd6 2400 f77d a600 6e48 7200 9f16 ef00  ..$..}..nHr.....
  - 0013b90: 8e94 a600 b491 f600 d153 5100 cf0a f200  .........SQ.....
  - 0013ba0: 2098 3300 f54b 7e00 b263 6800 dd3e 5f00   .3..K~..ch..>_.
  - 0013bb0: 405d 0300 8589 7f00 5552 2900 3764 c000  @]......UR).7d..
  - 0013bc0: 6dd8 1000 3248 3200 5b4c 7500 4e71 d400  m...2H2.[Lu.Nq..
  - 0013bd0: 4554 6e00 0b09 c100 2af5 6900 1466 d500  ETn.....*.i..f..
  - 0013be0: 2707 9d00 5d04 5000 b43b db00 ea76 c500  '...].P..;...v..
  - 0013bf0: 87f9 1700 496b 7d00 1d27 ba00 9669 2900  ....Ik}..'...i).
  - 0013c00: c6cc ac00 ad14 5400 90e2 6a00 88d9 8900  ......T...j.....
  - 0013c10: 2c72 5000 04a4 be00 7707 9400 f330 7000  ,rP.....w....0p.
  - 0013c20: 00fc 2700 ea71 a800 66c2 4900 64e0 3d00  ..'..q..f.I.d.=.
  - 0013c30: 97dd 8300 a33f 9700 4394 fd00 0d86 8c00  .....?..C.......
  - 0013c40: 3141 de00 9239 9d00 dd70 8c00 17b7 e700  1A...9...p......
  - 0013c50: 08df 3b00 1537 2b00 5c80 a000 5a80 9300  ..;..7+.\...Z...
  - 0013c60: 1011 9200 0fe8 d800 6c80 af00 dbff 4b00  ........l.....K.
  - 0013c70: 3890 0f00 5918 7600 62a5 1500 61cb bb00  8...Y.v.b...a...
  - 0013c80: c789 b900 1040 bd00 d2f2 0400 4975 2700  .....@......Iu'.
  - 0013c90: ebb6 f600 db22 bb00 0a14 aa00 8926 2f00  .....".......&/.
  - 0013ca0: 6483 7600 093b 3300 0e94 1a00 513a aa00  d.v..;3.....Q:..
  - 0013cb0: 1da3 c200 afed ae00 5c26 1200 6dc2 4d00  ........\&..m.M.
  - 0013cc0: 2d7a 9c00 c056 9700 033f 8300 09f0 f600  -z...V...?......
  - 0013cd0: 2b40 8c00 6d31 9900 39b4 0700 0c20 1500  +@..m1..9.... ..
  - 0013ce0: d8c3 5b00 f592 c400 c6ad 4b00 4eca a500  ..[.......K.N...
  - 0013cf0: a737 cd00 e6a9 3600 ab92 9400 dd42 6800  .7....6......Bh.
  - 0013d00: 1963 de00 768c ef00 688b 5200 fcdb 3700  .c..v...h.R...7.
  - 0013d10: aea1 ab00 df15 3100 00ae a100 0cfb da00  ......1.........
  - 0013d20: 644d 6600 ed05 b700 2965 3000 5756 bf00  dMf.....)e0.WV..
  - 0013d30: 47ff 3a00 6af9 b900 75be f300 2893 df00  G.:.j...u...(...
  - 0013d40: ab80 3000 668c f600 04cb 1500 fa22 0600  ..0.f........"..
  - 0013d50: d9e4 1d00 3db3 a400 571b 8f00 36cd 0900  ....=...W...6...
  - 0013d60: 4e42 e900 13be a400 3323 b500 f0aa 1a00  NB......3#......
  - 0013d70: 4f65 a800 d2c1 a500 0b3f 0f00 5b78 cd00  Oe.......?..[x..
  - 0013d80: 23f9 7600 7b8b 0400 8917 7200 c6a6 5300  #.v.{.....r...S.
  - 0013d90: 6f6e e200 efeb 0000 9b4a 5800 c4da b700  on.......JX.....
  - 0013da0: aa66 ba00 76cf cf00 d102 1d00 b1f1 2d00  .f..v.........-.
  - 0013db0: 8c99 c100 c3ad 7700 8648 da00 f75d a000  ......w..H...]..
  - 0013dc0: c680 f400 acf0 2f00 ddec 9a00 3f5c bc00  ....../.....?\..
  - 0013dd0: d0de 6d00 90c7 1f00 2adb b600 a325 3a00  ..m.....*....%:.
  - 0013de0: 00af 9a00 ad53 9300 b657 0400 292d b400  .....S...W..)-..
  - 0013df0: 4b80 7e00 da07 a700 76aa 0e00 7b59 a100  K.~.....v...{Y..
  - 0013e00: 1612 2a00 dcb7 2d00 fae5 fd00 89db fe00  ..*...-.........
  - 0013e10: 89be fd00 e476 6c00 06a9 fc00 3e80 7000  .....vl.....>.p.
  - 0013e20: 856e 1500 fd87 ff00 283e 0700 6167 3300  .n......(>..ag3.
  - 0013e30: 2a18 8600 4dbd ea00 b3e7 af00 8f6d 6e00  *...M........mn.
  - 0013e40: 9567 3900 31bf 5b00 84d7 4800 30df 1600  .g9.1.[...H.0...
  - 0013e50: c72d 4300 2561 3500 c970 ce00 30cb b800  .-C.%a5..p..0...
  - 0013e60: bf6c fd00 a400 a200 056c e400 5add a000  .l.......l..Z...
  - 0013e70: 216f 4700 6212 d200 b95c 8400 7061 4900  !oG.b....\..paI.
  - 0013e80: 6b56 e000 9952 0100 5055 3700 1ed5 b700  kV...R..PU7.....
  - 0013e90: 33f1 c400 136e 5f00 5d30 e400 852e a900  3....n_.]0......
  - 0013ea0: 1db2 c300 a132 3600 08b7 a400 eab1 d400  .....26.........
  - 0013eb0: 16f7 2100 8f69 e400 27ff 7700 0c03 8000  ..!..i..'.w.....
  - 0013ec0: 8d40 2d00 4fcd a000 20a5 9900 b3a2 d300  .@-.O... .......
  - 0013ed0: 2f5d 0a00 b4f9 4200 11da cb00 7dbe d000  /]....B.....}...
  - 0013ee0: 9bdb c100 ab17 bd00 caa2 8100 086a 5c00  .............j\.
  - 0013ef0: 2e55 1700 2700 5500 7f14 f000 e107 8600  .U..'.U.........
  - 0013f00: 140b 6400 9641 8d00 87be de00 dafd 2a00  ..d..A........*.
  - 0013f10: 6b25 b600 7b89 3400 05f3 fe00 b9bf 9e00  k%..{.4.........
  - 0013f20: 686a 4f00 4a2a a800 4fc4 5a00 2df8 bc00  hjO.J*..O.Z.-...
  - 0013f30: d75a 9800 f4c7 9500 0d4d 8d00 203a a600  .Z.......M.. :..
  - 0013f40: a457 5f00 143f b100 8038 9500 cc20 0100  .W_..?...8... ..
  - 0013f50: 71dd 8600 c9de b600 bf60 f500 4d65 1100  q........`..Me..
  - 0013f60: 0107 6b00 8cb0 ac00 b2c0 d000 5155 4800  ..k.........QUH.
  - 0013f70: 1efb 0e00 9572 c300 a306 3b00 c040 3500  .....r....;..@5.
  - 0013f80: 06dc 7b00 e045 cc00 4e29 fa00 d6ca c800  ..{..E..N)......
  - 0013f90: e8f3 4100 7c64 de00 9b64 d800 d9be 3100  ..A.|d...d....1.
  - 0013fa0: a497 c300 7758 d400 69e3 c500 f0da 1300  ....wX..i.......
  - 0013fb0: ba3a 3c00 4618 4600 5575 5f00 d2bd f500  .:<.F.F.Uu_.....
  - 0013fc0: 6e92 c600 ac2e 5d00 0e44 ed00 1c3e 4200  n.....]..D...>B.
  - 0013fd0: 61c4 8700 29fd e900 e7d6 f300 227c ca00  a...)......."|..
  - 0013fe0: 6f91 3500 08e0 c500 ffd7 8d00 6e6a e200  o.5.........nj..
  - 0013ff0: b0fd c600 9308 c100 7c5d 7400 6bad b200  ........|]t.k...
  - 0014000: cd6e 9d00 3e72 7b00 c611 6a00 f7cf a900  .n..>r{...j.....
  - 0014010: 2973 df00 b5c9 ba00 b700 5100 e2b2 0d00  )s........Q.....
  - 0014020: 74ba 2400 e57d 6000 74d8 8a00 0d15 2c00  t.$..}`.t.....,.
  - 0014030: 8118 0c00 7e66 9400 0129 1600 9f7a 7600  ....~f...)...zv.
  - 0014040: fdfd be00 5645 ef00 d97e 3600 ecd9 1300  ....VE...~6.....
  - 0014050: 8bba b900 c497 fc00 31a8 2700 f16e c300  ........1.'..n..
  - 0014060: 94c5 3600 d8a8 5600 b4a8 b500 cfcc 0e00  ..6...V.........
  - 0014070: 1289 2d00 6f57 3400 2c56 8900 99ce e300  ..-.oW4.,V......
  - 0014080: d620 b900 6b5e aa00 3e2a 9c00 115f cc00  . ..k^..>*..._..
  - 0014090: fd0b 4a00 e1f4 fb00 8e3b 6d00 e286 2c00  ..J......;m...,.
  - 00140a0: e9d4 8400 fcb4 a900 efee d100 2e35 c900  .............5..
  - 00140b0: 2f39 6100 3821 4400 1bd9 c800 81fc 0a00  /9a.8!D.........
  - 00140c0: fb4a 6a00 2f1c d800 53b4 8400 4e99 8c00  .Jj./...S...N...
  - 00140d0: 5422 cc00 2a55 dc00 c0c6 d600 0b19 9600  T"..*U..........
  - 00140e0: 1a70 b800 6995 6400 265a 6000 3f52 ee00  .p..i.d.&Z`.?R..
  - 00140f0: 7f11 0f00 f4b5 1100 fccb f500 34bc 2d00  ............4.-.
  - 0014100: 34bc ee00 e85d cc00 dd5e 6000 678e 9b00  4....]...^`.g...
  - 0014110: 9233 ef00 c917 b800 6158 9b00 e157 bc00  .3......aX...W..
  - 0014120: 5183 c600 d83e 1000 dd71 4800 2d1c dd00  Q....>...qH.-...
  - 0014130: af18 a100 212c 4600 59f3 d700 d97a 9800  ....!,F.Y....z..
  - 0014140: 9e54 c000 4f86 fa00 5606 fc00 e579 ae00  .T..O...V....y..
  - 0014150: 8922 3600 38ad 2200 6793 dc00 55e8 aa00  ."6.8.".g...U...
  - 0014160: 8226 3800 cae7 9b00 510d a400 9933 b100  .&8.....Q....3..
  - 0014170: a9d7 0e00 6905 4800 65b2 f000 7f88 a700  ....i.H.e.......
  - 0014180: 884c 9700 f9d1 3600 2192 b300 7b82 4a00  .L....6.!...{.J.
  - 0014190: 98cf 2100 409f dc00 dc47 5500 e174 3a00  ..!.@....GU..t:.
  - 00141a0: 67eb 4200 fe9d df00 5ed4 5f00 7b67 a400  g.B.....^._.{g..
  - 00141b0: baac 7a00 55f6 a200 2b88 2300 41ba 5500  ..z.U...+.#.A.U.
  - 00141c0: 596e 0800 212a 8600 3947 8300 89e3 e600  Yn..!*..9G......
  - 00141d0: e59e d400 49fb 4000 ff56 e900 1c0f ca00  ....I.@..V......
  - 00141e0: c559 8a00 94fa 2b00 d3c1 c500 0fc5 cf00  .Y....+.........
  - 00141f0: db5a ae00 47c5 8600 8543 6200 2186 3b00  .Z..G....Cb.!.;.
  - 0014200: 2c79 9400 1061 8700 2a4c 7b00 802c 1a00  ,y...a..*L{..,..
  - 0014210: 43bf 1200 8826 9000 783c 8900 a8c4 e400  C....&..x<......
  - 0014220: e5db 7b00 c43a c200 26f4 ea00 f767 8a00  ..{..:..&....g..
  - 0014230: 0d92 bf00 65a3 2b00 3d93 b100 bd7c 0b00  ....e.+.=....|..
  - 0014240: a451 dc00 27dd 6300 69e1 dd00 9a94 1900  .Q..'.c.i.......
  - 0014250: a829 9500 68ce 2800 09ed b400 449f 2000  .)..h.(.....D. .
  - 0014260: 4e98 ca00 7082 6300 7e7c 2300 0fb9 3200  N...p.c.~|#...2.
  - 0014270: a7f5 8e00 1456 e700 21f1 0800 b59d 2a00  .....V..!.....*.
  - 0014280: 6f7e 4d00 a519 5100 b5f9 ab00 82df d600  o~M...Q.........
  - 0014290: 96dd 6100 1636 0200 c43a 9f00 83a2 a100  ..a..6...:......
  - 00142a0: 72ed 6d00 398d 7a00 82b8 a900 6b32 5c00  r.m.9.z.....k2\.
  - 00142b0: 4627 5b00 0034 ed00 d200 7700 fcf4 5500  F'[..4....w...U.
  - 00142c0: 0159 4d00 e071 8000 0000 0000 0000 0000  .YM..q..........
  - 00142d0: 0000 0040 fb21 f93f 0000 0000 2d44 743e  ...@.!.?....-Dt>
  - 00142e0: 0000 0080 9846 f83c 0000 0060 51cc 783b  .....F.<...`Q.x;
  - 00142f0: 0000 0080 831b f039 0000 0040 2025 7a38  .......9...@ %z8
  - 0014300: 0000 0080 2282 e336 0000 0000 1df3 6935  ...."..6......i5
  - 0014310: 6162 6f72 7400 00                        abort..
Custom:
 - name: "name"
 - func[1] <alloc_bytes>
 - func[2] <alloc_words>
 - func[3] <grow_memory>
 - func[4] <print_ptr>
 - func[5] <bigint_trap>
 - func[6] <rts_trap>
 - func[7] <@immut_array_get>
 - func[8] <@mut_array_get>
 - func[9] <@immut_array_size>
 - func[10] <@mut_array_size>
 - func[11] <@mut_array_put>
 - func[12] <@immut_array_keys>
 - func[13] <@mut_array_keys>
 - func[14] <@immut_array_vals>
 - func[15] <@mut_array_vals>
 - func[16] <@blob_size>
 - func[17] <@blob_bytes>
 - func[18] <@text_size>
 - func[19] <@text_chars>
 - func[20] <@text_of_num>
 - func[21] <@left_pad>
 - func[22] <@digits_dec>
 - func[23] <@text_of_Nat>
 - func[24] <@text_of_Int>
 - func[25] <@digits_hex>
 - func[26] <@text_of_Word>
 - func[27] <@int64ToInt>
 - func[28] <@int32ToInt>
 - func[29] <@int16ToInt>
 - func[30] <@int8ToInt>
 - func[31] <@nat64ToNat>
 - func[32] <@nat32ToNat>
 - func[33] <@nat16ToNat>
 - func[34] <@nat8ToNat>
 - func[35] <@word64ToNat>
 - func[36] <@word32ToNat>
 - func[37] <@word16ToNat>
 - func[38] <@word8ToNat>
 - func[39] <@text_of_Nat8>
 - func[40] <@text_of_Nat16>
 - func[41] <@text_of_Nat32>
 - func[42] <@text_of_Nat64>
 - func[43] <@text_of_Int8>
 - func[44] <@text_of_Int16>
 - func[45] <@text_of_Int32>
 - func[46] <@text_of_Int64>
 - func[47] <@text_of_Word8>
 - func[48] <@text_of_Word16>
 - func[49] <@text_of_Word32>
 - func[50] <@text_of_Word64>
 - func[51] <@text_of_Float>
 - func[52] <@text_of_Bool>
 - func[53] <@text_of_Text>
 - func[54] <@text_of_Char>
 - func[55] <@text_of_Blob>
 - func[56] <@text_has_parens>
 - func[57] <@text_needs_parens>
 - func[58] <@text_of_option>
 - func[59] <@text_of_variant>
 - func[60] <@text_of_array>
 - func[61] <@text_of_array_mut>
 - func[62] <@new_async>
 - func[63] <fib>
 - func[64] <add<Nat16>>
 - func[65] <sub<Nat16>>
 - func[66] <anon-func-294.16>
 - func[67] <anon-func-295.16>
 - func[68] <anon-func-332.15>
 - func[69] <anon-func-330.15>
 - func[70] <enqueue>
 - func[71] <fail>
 - func[72] <fulfill>
 - func[73] <obj_idx>
 - func[74] <Text.compare_eq>
 - func[75] <unbox_i32>
 - func[76] <is_unboxed>
 - func[77] <unbox_i64>
 - func[78] <Word32->Char>
 - func[79] <B_add>
 - func[80] <B_lt>
 - func[81] <B_eq>
 - func[82] <B_gt>
 - func[83] <B_sub>
 - func[84] <assert_nonneg>
 - func[85] <nat_sub>
 - func[86] <B_div>
 - func[87] <B_rem>
 - func[88] <next>
 - func[89] <anon-func-93.3>
 - func[90] <anon-func-91.3>
 - func[91] <next>
 - func[92] <anon-func-80.3>
 - func[93] <anon-func-78.3>
 - func[94] <B_ge>
 - func[95] <Array.idx_bigint>
 - func[96] <Array.idx>
 - func[97] <next>
 - func[98] <anon-func-72.3>
 - func[99] <next>
 - func[100] <anon-func-66.3>
 - func[101] <next>
 - func[102] <anon-func-60.3>
 - func[103] <next>
 - func[104] <anon-func-54.3>
 - func[105] <anon-func-52.3>
 - func[106] <anon-func-50.3>
 - func[107] <anon-func-48.3>
 - func[108] <anon-func-46.3>
 - func[109] <anon-func-44.3>
 - func[110] <start>
 - func[111] <trans_state4>
 - func[112] <trans_state3>
 - func[113] <_start>
 - func[114] <rts_start>
 - func[115] <__wasm_call_ctors>
 - func[116] <__wasm_apply_relocs>
 - func[117] <alloc_blob>
 - func[118] <alloc>
 - func[119] <as_memcpy>
 - func[120] <as_memcmp>
 - func[121] <as_strlen>
 - func[122] <trap_with_prefix>
 - func[123] <idl_trap_with>
 - func[124] <rts_trap_with>
 - func[125] <get_version>
 - func[126] <version>
 - func[127] <leb128_encode>
 - func[128] <sleb128_encode>
 - func[129] <read_u32_of_leb128>
 - func[130] <read_i32_of_sleb128>
 - func[131] <parse_idl_header>
 - func[132] <skip_leb128>
 - func[133] <skip_any>
 - func[134] <find_field>
 - func[135] <skip_fields>
 - func[136] <mp_calloc>
 - func[137] <mp_realloc>
 - func[138] <mp_free>
 - func[139] <bigint_alloc>
 - func[140] <bigint_of_word32>
 - func[141] <bigint_of_word32_signed>
 - func[142] <bigint_to_word32_wrap>
 - func[143] <bigint_to_word32_trap>
 - func[144] <bigint_to_word32_trap_with>
 - func[145] <bigint_to_word32_signed_trap>
 - func[146] <bigint_to_word64_wrap>
 - func[147] <bigint_to_word64_trap>
 - func[148] <bigint_to_word64_signed_trap>
 - func[149] <bigint_of_word64>
 - func[150] <bigint_of_word64_signed>
 - func[151] <bigint_eq>
 - func[152] <bigint_ne>
 - func[153] <bigint_lt>
 - func[154] <bigint_gt>
 - func[155] <bigint_le>
 - func[156] <bigint_ge>
 - func[157] <bigint_add>
 - func[158] <bigint_sub>
 - func[159] <bigint_mul>
 - func[160] <bigint_pow>
 - func[161] <bigint_div>
 - func[162] <bigint_rem>
 - func[163] <bigint_neg>
 - func[164] <bigint_abs>
 - func[165] <bigint_isneg>
 - func[166] <bigint_lsh>
 - func[167] <bigint_count_bits>
 - func[168] <bigint_leb128_size>
 - func[169] <bigint_leb128_encode_go>
 - func[170] <bigint_leb128_encode>
 - func[171] <bigint_2complement_bits>
 - func[172] <bigint_sleb128_size>
 - func[173] <bigint_sleb128_encode>
 - func[174] <bigint_leb128_decode>
 - func[175] <bigint_sleb128_decode>
 - func[176] <float_fmt>
 - func[177] <float_pow>
 - func[178] <float_sin>
 - func[179] <float_cos>
 - func[180] <float_tan>
 - func[181] <float_arcsin>
 - func[182] <float_arccos>
 - func[183] <float_arctan>
 - func[184] <float_arctan2>
 - func[185] <float_exp>
 - func[186] <float_log>
 - func[187] <read_byte>
 - func[188] <read_word>
 - func[189] <advance>
 - func[190] <utf8_check>
 - func[191] <utf8_validate>
 - func[192] <remember_closure>
 - func[193] <recall_closure>
 - func[194] <closure_count>
 - func[195] <closure_table_loc>
 - func[196] <closure_table_size>
 - func[197] <text_of_ptr_size>
 - func[198] <text_of_cstr>
 - func[199] <text_concat>
 - func[200] <text_to_buf>
 - func[201] <blob_of_text>
 - func[202] <text_size>
 - func[203] <blob_compare>
 - func[204] <text_compare>
 - func[205] <text_compare_range>
 - func[206] <text_len>
 - func[207] <text_singleton>
 - func[208] <text_iter>
 - func[209] <find_leaf>
 - func[210] <text_iter_done>
 - func[211] <text_iter_next>
 - func[212] <compute_crc32>
 - func[213] <blob_iter>
 - func[214] <blob_iter_done>
 - func[215] <blob_iter_next>
 - func[216] <blob_of_ic_url>
 - func[217] <compute_crc8>
 - func[218] <ic_url_of_blob>
 - func[219] <mp_init>
 - func[220] <mp_add>
 - func[221] <mp_sub>
 - func[222] <mp_mul>
 - func[223] <mp_zero>
 - func[224] <mp_cmp>
 - func[225] <mp_set_u32>
 - func[226] <mp_set_i32>
 - func[227] <mp_get_i32>
 - func[228] <mp_get_mag_u32>
 - func[229] <mp_set_u64>
 - func[230] <mp_set_i64>
 - func[231] <mp_get_i64>
 - func[232] <mp_get_mag_u64>
 - func[233] <mp_div>
 - func[234] <mp_init_copy>
 - func[235] <mp_neg>
 - func[236] <mp_abs>
 - func[237] <mp_2expt>
 - func[238] <mp_expt_u32>
 - func[239] <mp_set>
 - func[240] <mp_sqr>
 - func[241] <s_mp_add>
 - func[242] <mp_cmp_mag>
 - func[243] <s_mp_sub>
 - func[244] <mp_grow>
 - func[245] <mp_clamp>
 - func[246] <mp_init_size>
 - func[247] <mp_exch>
 - func[248] <mp_clear>
 - func[249] <mp_copy>
 - func[250] <mp_count_bits>
 - func[251] <mp_mul_2d>
 - func[252] <mp_rshd>
 - func[253] <mp_mul_d>
 - func[254] <mp_div_2d>
 - func[255] <mp_mod_2d>
 - func[256] <s_mp_balance_mul>
 - func[257] <s_mp_toom_mul>
 - func[258] <s_mp_toom_sqr>
 - func[259] <s_mp_karatsuba_sqr>
 - func[260] <s_mp_sqr_fast>
 - func[261] <s_mp_sqr>
 - func[262] <s_mp_karatsuba_mul>
 - func[263] <s_mp_mul_digs_fast>
 - func[264] <s_mp_mul_digs>
 - func[265] <mp_init_multi>
 - func[266] <mp_clear_multi>
 - func[267] <mp_mul_2>
 - func[268] <mp_div_2>
 - func[269] <mp_div_3>
 - func[270] <mp_lshd>
 - func[271] <mp_incr>
 - func[272] <mp_decr>
 - func[273] <mp_add_d>
 - func[274] <mp_sub_d>
 - func[275] <pow>
 - func[276] <sin>
 - func[277] <cos>
 - func[278] <tan>
 - func[279] <asin>
 - func[280] <acos>
 - func[281] <atan>
 - func[282] <atan2>
 - func[283] <exp>
 - func[284] <log>
 - func[285] <floor>
 - func[286] <scalbn>
 - func[287] <frexp>
 - func[288] <strnlen>
 - func[289] <memchr>
 - func[290] <memset>
 - func[291] <memcpy>
 - func[292] <snprintf>
 - func[293] <vsnprintf>
 - func[294] <sn_write>
 - func[295] <vfprintf>
 - func[296] <printf_core>
 - func[297] <pop_arg>
 - func[298] <pad>
 - func[299] <fmt_u>
 - func[300] <long_double_not_supported>
 - func[301] <__math_oflow>
 - func[302] <__math_uflow>
 - func[303] <__math_xflow>
 - func[304] <__math_divzero>
 - func[305] <__math_invalid>
 - func[306] <__rem_pio2>
 - func[307] <__rem_pio2_large>
 - func[308] <__sin>
 - func[309] <__cos>
 - func[310] <__tan>
 - func[311] <wctomb>
 - func[312] <fputs>
 - func[313] <abort>
 - func[314] <strerror>
 - func[315] <link_start>
 - func[1] local[0] <n>
 - func[2] local[0] <n>
 - func[3] local[0] <ptr>
 - func[3] local[1] <pages_needed>
 - func[4] local[0] <ptr>
 - func[4] local[1] <len>
 - func[4] local[2] <io_vec>
 - func[6] local[0] <str>
 - func[6] local[1] <len>
 - func[7] local[0] <clos>
 - func[7] local[1] <xs>
 - func[7] local[2] <anon-func-44.3_clos>
 - func[8] local[0] <clos>
 - func[8] local[1] <xs>
 - func[8] local[2] <anon-func-46.3_clos>
 - func[9] local[0] <clos>
 - func[9] local[1] <xs>
 - func[9] local[2] <anon-func-48.3_clos>
 - func[10] local[0] <clos>
 - func[10] local[1] <xs>
 - func[10] local[2] <anon-func-50.3_clos>
 - func[11] local[0] <clos>
 - func[11] local[1] <xs>
 - func[11] local[2] <anon-func-52.3_clos>
 - func[12] local[0] <clos>
 - func[12] local[1] <xs>
 - func[12] local[2] <anon-func-54.3_clos>
 - func[13] local[0] <clos>
 - func[13] local[1] <xs>
 - func[13] local[2] <anon-func-60.3_clos>
 - func[14] local[0] <clos>
 - func[14] local[1] <xs>
 - func[14] local[2] <anon-func-66.3_clos>
 - func[15] local[0] <clos>
 - func[15] local[1] <xs>
 - func[15] local[2] <anon-func-72.3_clos>
 - func[16] local[0] <clos>
 - func[16] local[1] <xs>
 - func[16] local[2] <anon-func-78.3_clos>
 - func[17] local[0] <clos>
 - func[17] local[1] <xs>
 - func[17] local[2] <anon-func-80.3_clos>
 - func[18] local[0] <clos>
 - func[18] local[1] <xs>
 - func[18] local[2] <anon-func-91.3_clos>
 - func[19] local[0] <clos>
 - func[19] local[1] <xs>
 - func[19] local[2] <anon-func-93.3_clos>
 - func[20] local[0] <clos>
 - func[20] local[1] <x>
 - func[20] local[2] <base>
 - func[20] local[3] <sep>
 - func[20] local[4] <digits>
 - func[20] local[5] <text>
 - func[20] local[6] <n>
 - func[20] local[7] <i>
 - func[20] local[8] <rem>
 - func[20] local[9] <clos>
 - func[21] local[0] <clos>
 - func[21] local[1] <pad>
 - func[21] local[2] <char>
 - func[21] local[3] <t>
 - func[21] local[4] <clos>
 - func[21] local[5] <i>
 - func[21] local[6] <text>
 - func[21] local[7] <clos>
 - func[22] local[0] <clos>
 - func[22] local[1] <x>
 - func[22] local[2] <a>
 - func[23] local[0] <clos>
 - func[23] local[1] <x>
 - func[24] local[0] <clos>
 - func[24] local[1] <x>
 - func[24] local[2] <a>
 - func[24] local[3] <a>
 - func[25] local[0] <clos>
 - func[25] local[1] <x>
 - func[25] local[2] <a>
 - func[26] local[0] <clos>
 - func[26] local[1] <x>
 - func[27] local[0] <clos>
 - func[27] local[1] <n>
 - func[27] local[2] <a>
 - func[28] local[0] <clos>
 - func[28] local[1] <n>
 - func[28] local[2] <a>
 - func[29] local[0] <clos>
 - func[29] local[1] <n>
 - func[29] local[2] <a>
 - func[30] local[0] <clos>
 - func[30] local[1] <n>
 - func[30] local[2] <a>
 - func[31] local[0] <clos>
 - func[31] local[1] <n>
 - func[31] local[2] <a>
 - func[32] local[0] <clos>
 - func[32] local[1] <n>
 - func[32] local[2] <a>
 - func[33] local[0] <clos>
 - func[33] local[1] <n>
 - func[33] local[2] <a>
 - func[34] local[0] <clos>
 - func[34] local[1] <n>
 - func[34] local[2] <a>
 - func[35] local[0] <clos>
 - func[35] local[1] <n>
 - func[35] local[2] <a>
 - func[36] local[0] <clos>
 - func[36] local[1] <n>
 - func[36] local[2] <a>
 - func[37] local[0] <clos>
 - func[37] local[1] <n>
 - func[37] local[2] <a>
 - func[38] local[0] <clos>
 - func[38] local[1] <n>
 - func[38] local[2] <a>
 - func[39] local[0] <clos>
 - func[39] local[1] <x>
 - func[40] local[0] <clos>
 - func[40] local[1] <x>
 - func[41] local[0] <clos>
 - func[41] local[1] <x>
 - func[42] local[0] <clos>
 - func[42] local[1] <x>
 - func[43] local[0] <clos>
 - func[43] local[1] <x>
 - func[44] local[0] <clos>
 - func[44] local[1] <x>
 - func[45] local[0] <clos>
 - func[45] local[1] <x>
 - func[46] local[0] <clos>
 - func[46] local[1] <x>
 - func[47] local[0] <clos>
 - func[47] local[1] <x>
 - func[48] local[0] <clos>
 - func[48] local[1] <x>
 - func[49] local[0] <clos>
 - func[49] local[1] <x>
 - func[50] local[0] <clos>
 - func[50] local[1] <x>
 - func[51] local[0] <clos>
 - func[51] local[1] <x>
 - func[52] local[0] <clos>
 - func[52] local[1] <b>
 - func[53] local[0] <clos>
 - func[53] local[1] <t>
 - func[54] local[0] <clos>
 - func[54] local[1] <c>
 - func[55] local[0] <clos>
 - func[55] local[1] <blob>
 - func[55] local[2] <t>
 - func[55] local[3] <$nxt/0>
 - func[55] local[4] <clos>
 - func[55] local[5] <switch_in>
 - func[55] local[6] <switch_out>
 - func[55] local[7] <b>
 - func[55] local[8] <opt_scrut>
 - func[55] local[9] <clos>
 - func[56] local[0] <clos>
 - func[56] local[1] <t>
 - func[56] local[2] <clos>
 - func[56] local[3] <clos>
 - func[56] local[4] <switch_in>
 - func[56] local[5] <switch_out>
 - func[56] local[6] <opt_scrut>
 - func[57] local[0] <clos>
 - func[57] local[1] <t>
 - func[57] local[2] <clos>
 - func[57] local[3] <clos>
 - func[57] local[4] <switch_in>
 - func[57] local[5] <switch_out>
 - func[57] local[6] <opt_scrut>
 - func[57] local[7] <alt_scrut>
 - func[57] local[8] <alt_scrut>
 - func[57] local[9] <alt_scrut>
 - func[58] local[0] <clos>
 - func[58] local[1] <f>
 - func[58] local[2] <x>
 - func[58] local[3] <switch_in>
 - func[58] local[4] <switch_out>
 - func[58] local[5] <y>
 - func[58] local[6] <opt_scrut>
 - func[58] local[7] <fy>
 - func[58] local[8] <clos>
 - func[59] local[0] <clos>
 - func[59] local[1] <l>
 - func[59] local[2] <f>
 - func[59] local[3] <x>
 - func[59] local[4] <fx>
 - func[59] local[5] <clos>
 - func[60] local[0] <clos>
 - func[60] local[1] <f>
 - func[60] local[2] <xs>
 - func[60] local[3] <text>
 - func[60] local[4] <first>
 - func[60] local[5] <$nxt/1>
 - func[60] local[6] <clos>
 - func[60] local[7] <switch_in>
 - func[60] local[8] <switch_out>
 - func[60] local[9] <x>
 - func[60] local[10] <opt_scrut>
 - func[60] local[11] <clos>
 - func[60] local[12] <clos>
 - func[61] local[0] <clos>
 - func[61] local[1] <f>
 - func[61] local[2] <xs>
 - func[61] local[3] <text>
 - func[61] local[4] <first>
 - func[61] local[5] <$nxt/2>
 - func[61] local[6] <clos>
 - func[61] local[7] <switch_in>
 - func[61] local[8] <switch_out>
 - func[61] local[9] <x>
 - func[61] local[10] <opt_scrut>
 - func[61] local[11] <clos>
 - func[61] local[12] <clos>
 - func[62] local[0] <clos>
 - func[62] local[1] <result>
 - func[62] local[2] <heap_object>
 - func[62] local[3] <ks>
 - func[62] local[4] <heap_object>
 - func[62] local[5] <rs>
 - func[62] local[6] <heap_object>
 - func[62] local[7] <fulfill>
 - func[62] local[8] <fail>
 - func[62] local[9] <enqueue>
 - func[62] local[10] <enqueue_clos>
 - func[62] local[11] <fail_clos>
 - func[62] local[12] <fulfill_clos>
 - func[62] local[13] <new_val>
 - func[62] local[14] <new_val>
 - func[62] local[15] <new_val>
 - func[63] local[0] <clos>
 - func[63] local[1] <n>
 - func[63] local[2] <switch_in>
 - func[63] local[3] <switch_out>
 - func[64] local[0] <a>
 - func[64] local[1] <b>
 - func[64] local[2] <res>
 - func[65] local[0] <a>
 - func[65] local[1] <b>
 - func[65] local[2] <res>
 - func[66] local[0] <clos>
 - func[66] local[1] <$ignored0/0>
 - func[67] local[0] <clos>
 - func[67] local[1] <$ignored0/1>
 - func[68] local[0] <clos>
 - func[68] local[1] <e>
 - func[68] local[2] <r>
 - func[68] local[3] <rs_>
 - func[68] local[4] <clos>
 - func[68] local[5] <clos>
 - func[69] local[0] <clos>
 - func[69] local[1] <t>
 - func[69] local[2] <k>
 - func[69] local[3] <ks_>
 - func[69] local[4] <clos>
 - func[69] local[5] <clos>
 - func[70] local[0] <clos>
 - func[70] local[1] <k>
 - func[70] local[2] <r>
 - func[70] local[3] <ks>
 - func[70] local[4] <result>
 - func[70] local[5] <rs>
 - func[70] local[6] <switch_in>
 - func[70] local[7] <switch_out>
 - func[70] local[8] <t>
 - func[70] local[9] <opt_scrut>
 - func[70] local[10] <e>
 - func[70] local[11] <opt_scrut>
 - func[70] local[12] <clos>
 - func[70] local[13] <clos>
 - func[70] local[14] <ks_>
 - func[70] local[15] <rs_>
 - func[70] local[16] <new_val>
 - func[70] local[17] <anon-func-332.15_clos>
 - func[70] local[18] <new_val>
 - func[70] local[19] <anon-func-330.15_clos>
 - func[70] local[20] <tag_scrut>
 - func[70] local[21] <tag_scrut>
 - func[71] local[0] <clos>
 - func[71] local[1] <e>
 - func[71] local[2] <ks>
 - func[71] local[3] <result>
 - func[71] local[4] <rs>
 - func[71] local[5] <switch_in>
 - func[71] local[6] <switch_out>
 - func[71] local[7] <opt_scrut>
 - func[71] local[8] <rs_>
 - func[71] local[9] <clos>
 - func[71] local[10] <new_val>
 - func[71] local[11] <new_val>
 - func[71] local[12] <new_val>
 - func[71] local[13] <heap_object>
 - func[71] local[14] <heap_object>
 - func[72] local[0] <clos>
 - func[72] local[1] <t>
 - func[72] local[2] <ks>
 - func[72] local[3] <result>
 - func[72] local[4] <rs>
 - func[72] local[5] <switch_in>
 - func[72] local[6] <switch_out>
 - func[72] local[7] <opt_scrut>
 - func[72] local[8] <ks_>
 - func[72] local[9] <clos>
 - func[72] local[10] <new_val>
 - func[72] local[11] <new_val>
 - func[72] local[12] <new_val>
 - func[72] local[13] <heap_object>
 - func[72] local[14] <heap_object>
 - func[73] local[0] <x>
 - func[73] local[1] <hash>
 - func[73] local[2] <h_ptr>
 - func[73] local[3] <n>
 - func[73] local[4] <i>
 - func[74] local[0] <x>
 - func[74] local[1] <y>
 - func[75] local[0] <n>
 - func[76] local[0] <x>
 - func[77] local[0] <n>
 - func[78] local[0] <n>
 - func[79] local[0] <a>
 - func[79] local[1] <b>
 - func[79] local[2] <res>
 - func[79] local[3] <res64>
 - func[80] local[0] <a>
 - func[80] local[1] <b>
 - func[81] local[0] <a>
 - func[81] local[1] <b>
 - func[82] local[0] <a>
 - func[82] local[1] <b>
 - func[83] local[0] <a>
 - func[83] local[1] <b>
 - func[83] local[2] <res>
 - func[83] local[3] <res64>
 - func[84] local[0] <n>
 - func[85] local[0] <n1>
 - func[85] local[1] <n2>
 - func[86] local[0] <a>
 - func[86] local[1] <b>
 - func[86] local[2] <res>
 - func[86] local[3] <res64>
 - func[87] local[0] <a>
 - func[87] local[1] <b>
 - func[87] local[2] <res>
 - func[87] local[3] <res64>
 - func[88] local[0] <clos>
 - func[88] local[1] <i>
 - func[88] local[2] <heap_object>
 - func[89] local[0] <clos>
 - func[89] local[1] <xs>
 - func[89] local[2] <i>
 - func[89] local[3] <next>
 - func[89] local[4] <obj>
 - func[89] local[5] <next_clos>
 - func[90] local[0] <clos>
 - func[90] local[1] <xs>
 - func[90] local[2] <a>
 - func[91] local[0] <clos>
 - func[91] local[1] <i>
 - func[91] local[2] <heap_object>
 - func[92] local[0] <clos>
 - func[92] local[1] <xs>
 - func[92] local[2] <i>
 - func[92] local[3] <next>
 - func[92] local[4] <obj>
 - func[92] local[5] <next_clos>
 - func[93] local[0] <clos>
 - func[93] local[1] <xs>
 - func[93] local[2] <a>
 - func[94] local[0] <a>
 - func[94] local[1] <b>
 - func[95] local[0] <array>
 - func[95] local[1] <idx>
 - func[95] local[2] <a>
 - func[95] local[3] <err_msg>
 - func[96] local[0] <array>
 - func[96] local[1] <idx>
 - func[97] local[0] <clos>
 - func[97] local[1] <i>
 - func[97] local[2] <l>
 - func[97] local[3] <xs>
 - func[97] local[4] <j>
 - func[97] local[5] <heap_object>
 - func[97] local[6] <new_val>
 - func[98] local[0] <clos>
 - func[98] local[1] <xs>
 - func[98] local[2] <i>
 - func[98] local[3] <heap_object>
 - func[98] local[4] <l>
 - func[98] local[5] <next>
 - func[98] local[6] <obj>
 - func[98] local[7] <next_clos>
 - func[98] local[8] <clos>
 - func[98] local[9] <new_val>
 - func[99] local[0] <clos>
 - func[99] local[1] <i>
 - func[99] local[2] <l>
 - func[99] local[3] <xs>
 - func[99] local[4] <j>
 - func[99] local[5] <heap_object>
 - func[99] local[6] <new_val>
 - func[100] local[0] <clos>
 - func[100] local[1] <xs>
 - func[100] local[2] <i>
 - func[100] local[3] <heap_object>
 - func[100] local[4] <l>
 - func[100] local[5] <next>
 - func[100] local[6] <obj>
 - func[100] local[7] <next_clos>
 - func[100] local[8] <clos>
 - func[100] local[9] <new_val>
 - func[101] local[0] <clos>
 - func[101] local[1] <i>
 - func[101] local[2] <l>
 - func[101] local[3] <j>
 - func[101] local[4] <heap_object>
 - func[101] local[5] <new_val>
 - func[102] local[0] <clos>
 - func[102] local[1] <xs>
 - func[102] local[2] <i>
 - func[102] local[3] <heap_object>
 - func[102] local[4] <l>
 - func[102] local[5] <next>
 - func[102] local[6] <obj>
 - func[102] local[7] <next_clos>
 - func[102] local[8] <clos>
 - func[102] local[9] <new_val>
 - func[103] local[0] <clos>
 - func[103] local[1] <i>
 - func[103] local[2] <l>
 - func[103] local[3] <j>
 - func[103] local[4] <heap_object>
 - func[103] local[5] <new_val>
 - func[104] local[0] <clos>
 - func[104] local[1] <xs>
 - func[104] local[2] <i>
 - func[104] local[3] <heap_object>
 - func[104] local[4] <l>
 - func[104] local[5] <next>
 - func[104] local[6] <obj>
 - func[104] local[7] <next_clos>
 - func[104] local[8] <clos>
 - func[104] local[9] <new_val>
 - func[105] local[0] <clos>
 - func[105] local[1] <n>
 - func[105] local[2] <x>
 - func[105] local[3] <xs>
 - func[106] local[0] <clos>
 - func[106] local[1] <xs>
 - func[106] local[2] <a>
 - func[107] local[0] <clos>
 - func[107] local[1] <xs>
 - func[107] local[2] <a>
 - func[108] local[0] <clos>
 - func[108] local[1] <n>
 - func[108] local[2] <xs>
 - func[109] local[0] <clos>
 - func[109] local[1] <n>
 - func[109] local[2] <xs>
Custom:
 - name: ".debug_abbrev"
Custom:
 - name: ".debug_addr"
Custom:
 - name: ".debug_rnglists"
Custom:
 - name: ".debug_line_str"
Custom:
 - name: ".debug_line"
Custom:
 - name: ".debug_info"
Custom:
 - name: ".debug_str"
